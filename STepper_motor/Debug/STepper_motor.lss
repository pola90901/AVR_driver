
STepper_motor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000031e2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  000031e2  00003256  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         0000228c  00000000  00000000  00003260  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000bb0  00000000  00000000  000054ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  0000609c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  000061dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  0000634c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  00007f95  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  00008e80  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  00009c30  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  00009d90  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  0000a01d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000a7eb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 ee       	ldi	r30, 0xE2	; 226
      68:	f1 e3       	ldi	r31, 0x31	; 49
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 20 18 	call	0x3040	; 0x3040 <main>
      7a:	0c 94 ef 18 	jmp	0x31de	; 0x31de <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 b8 18 	jmp	0x3170	; 0x3170 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 d4 18 	jmp	0x31a8	; 0x31a8 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 c4 18 	jmp	0x3188	; 0x3188 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 e0 18 	jmp	0x31c0	; 0x31c0 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 c4 18 	jmp	0x3188	; 0x3188 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 e0 18 	jmp	0x31c0	; 0x31c0 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 b8 18 	jmp	0x3170	; 0x3170 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 d4 18 	jmp	0x31a8	; 0x31a8 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 c4 18 	jmp	0x3188	; 0x3188 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 e0 18 	jmp	0x31c0	; 0x31c0 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 c4 18 	jmp	0x3188	; 0x3188 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 e0 18 	jmp	0x31c0	; 0x31c0 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 c4 18 	jmp	0x3188	; 0x3188 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 e0 18 	jmp	0x31c0	; 0x31c0 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 c8 18 	jmp	0x3190	; 0x3190 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 e4 18 	jmp	0x31c8	; 0x31c8 <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <DIO_u8Set_Pin_value>:
#include"DIO_Private.h"
#include"DIO_Config.h"
#include"DIO_Interface.h"

u8 DIO_u8Set_Pin_value(u8 Copy_u8_Port_ID,u8 Copy_u8_Pin_ID,u8 Copy_u8_val)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	00 d0       	rcall	.+0      	; 0xb3c <DIO_u8Set_Pin_value+0x6>
     b3c:	00 d0       	rcall	.+0      	; 0xb3e <DIO_u8Set_Pin_value+0x8>
     b3e:	00 d0       	rcall	.+0      	; 0xb40 <DIO_u8Set_Pin_value+0xa>
     b40:	cd b7       	in	r28, 0x3d	; 61
     b42:	de b7       	in	r29, 0x3e	; 62
     b44:	8a 83       	std	Y+2, r24	; 0x02
     b46:	6b 83       	std	Y+3, r22	; 0x03
     b48:	4c 83       	std	Y+4, r20	; 0x04
	u8 loc_u8Error_State=DIO_u8PORT_INIT_ERR;
     b4a:	19 82       	std	Y+1, r1	; 0x01
	if((Copy_u8_Port_ID>=DIO_MIN_u8_PORT_ID)&&(Copy_u8_Port_ID<=DIO_MAX_u8_PORT_ID))
     b4c:	8a 81       	ldd	r24, Y+2	; 0x02
     b4e:	84 30       	cpi	r24, 0x04	; 4
     b50:	08 f0       	brcs	.+2      	; 0xb54 <DIO_u8Set_Pin_value+0x1e>
     b52:	e3 c0       	rjmp	.+454    	; 0xd1a <DIO_u8Set_Pin_value+0x1e4>
	{
		if((Copy_u8_Pin_ID>=DIO_MIN_u8_PIN_ID)&&(Copy_u8_Pin_ID<=DIO_MAX_u8_PIN_ID))
     b54:	8b 81       	ldd	r24, Y+3	; 0x03
     b56:	88 30       	cpi	r24, 0x08	; 8
     b58:	08 f0       	brcs	.+2      	; 0xb5c <DIO_u8Set_Pin_value+0x26>
     b5a:	dc c0       	rjmp	.+440    	; 0xd14 <DIO_u8Set_Pin_value+0x1de>
		{
			if((Copy_u8_val==DIO_MIN_u8_PIN_Val)||(Copy_u8_val==DIO_MAX_u8_PIN_Val))
     b5c:	8c 81       	ldd	r24, Y+4	; 0x04
     b5e:	88 23       	and	r24, r24
     b60:	21 f0       	breq	.+8      	; 0xb6a <DIO_u8Set_Pin_value+0x34>
     b62:	8c 81       	ldd	r24, Y+4	; 0x04
     b64:	81 30       	cpi	r24, 0x01	; 1
     b66:	09 f0       	breq	.+2      	; 0xb6a <DIO_u8Set_Pin_value+0x34>
     b68:	d2 c0       	rjmp	.+420    	; 0xd0e <DIO_u8Set_Pin_value+0x1d8>
			{
				switch(Copy_u8_Port_ID)
     b6a:	8a 81       	ldd	r24, Y+2	; 0x02
     b6c:	28 2f       	mov	r18, r24
     b6e:	30 e0       	ldi	r19, 0x00	; 0
     b70:	3e 83       	std	Y+6, r19	; 0x06
     b72:	2d 83       	std	Y+5, r18	; 0x05
     b74:	8d 81       	ldd	r24, Y+5	; 0x05
     b76:	9e 81       	ldd	r25, Y+6	; 0x06
     b78:	81 30       	cpi	r24, 0x01	; 1
     b7a:	91 05       	cpc	r25, r1
     b7c:	09 f4       	brne	.+2      	; 0xb80 <DIO_u8Set_Pin_value+0x4a>
     b7e:	43 c0       	rjmp	.+134    	; 0xc06 <DIO_u8Set_Pin_value+0xd0>
     b80:	2d 81       	ldd	r18, Y+5	; 0x05
     b82:	3e 81       	ldd	r19, Y+6	; 0x06
     b84:	22 30       	cpi	r18, 0x02	; 2
     b86:	31 05       	cpc	r19, r1
     b88:	2c f4       	brge	.+10     	; 0xb94 <DIO_u8Set_Pin_value+0x5e>
     b8a:	8d 81       	ldd	r24, Y+5	; 0x05
     b8c:	9e 81       	ldd	r25, Y+6	; 0x06
     b8e:	00 97       	sbiw	r24, 0x00	; 0
     b90:	71 f0       	breq	.+28     	; 0xbae <DIO_u8Set_Pin_value+0x78>
     b92:	c5 c0       	rjmp	.+394    	; 0xd1e <DIO_u8Set_Pin_value+0x1e8>
     b94:	2d 81       	ldd	r18, Y+5	; 0x05
     b96:	3e 81       	ldd	r19, Y+6	; 0x06
     b98:	22 30       	cpi	r18, 0x02	; 2
     b9a:	31 05       	cpc	r19, r1
     b9c:	09 f4       	brne	.+2      	; 0xba0 <DIO_u8Set_Pin_value+0x6a>
     b9e:	5f c0       	rjmp	.+190    	; 0xc5e <DIO_u8Set_Pin_value+0x128>
     ba0:	8d 81       	ldd	r24, Y+5	; 0x05
     ba2:	9e 81       	ldd	r25, Y+6	; 0x06
     ba4:	83 30       	cpi	r24, 0x03	; 3
     ba6:	91 05       	cpc	r25, r1
     ba8:	09 f4       	brne	.+2      	; 0xbac <DIO_u8Set_Pin_value+0x76>
     baa:	85 c0       	rjmp	.+266    	; 0xcb6 <DIO_u8Set_Pin_value+0x180>
     bac:	b8 c0       	rjmp	.+368    	; 0xd1e <DIO_u8Set_Pin_value+0x1e8>
				{
				case GROUP_A:
					Assign_Bit(DIO_u8_PORTA,Copy_u8_Pin_ID,Copy_u8_val);
     bae:	8c 81       	ldd	r24, Y+4	; 0x04
     bb0:	81 30       	cpi	r24, 0x01	; 1
     bb2:	a1 f4       	brne	.+40     	; 0xbdc <DIO_u8Set_Pin_value+0xa6>
     bb4:	ab e3       	ldi	r26, 0x3B	; 59
     bb6:	b0 e0       	ldi	r27, 0x00	; 0
     bb8:	eb e3       	ldi	r30, 0x3B	; 59
     bba:	f0 e0       	ldi	r31, 0x00	; 0
     bbc:	80 81       	ld	r24, Z
     bbe:	48 2f       	mov	r20, r24
     bc0:	8b 81       	ldd	r24, Y+3	; 0x03
     bc2:	28 2f       	mov	r18, r24
     bc4:	30 e0       	ldi	r19, 0x00	; 0
     bc6:	81 e0       	ldi	r24, 0x01	; 1
     bc8:	90 e0       	ldi	r25, 0x00	; 0
     bca:	02 2e       	mov	r0, r18
     bcc:	02 c0       	rjmp	.+4      	; 0xbd2 <DIO_u8Set_Pin_value+0x9c>
     bce:	88 0f       	add	r24, r24
     bd0:	99 1f       	adc	r25, r25
     bd2:	0a 94       	dec	r0
     bd4:	e2 f7       	brpl	.-8      	; 0xbce <DIO_u8Set_Pin_value+0x98>
     bd6:	84 2b       	or	r24, r20
     bd8:	8c 93       	st	X, r24
     bda:	a1 c0       	rjmp	.+322    	; 0xd1e <DIO_u8Set_Pin_value+0x1e8>
     bdc:	ab e3       	ldi	r26, 0x3B	; 59
     bde:	b0 e0       	ldi	r27, 0x00	; 0
     be0:	eb e3       	ldi	r30, 0x3B	; 59
     be2:	f0 e0       	ldi	r31, 0x00	; 0
     be4:	80 81       	ld	r24, Z
     be6:	48 2f       	mov	r20, r24
     be8:	8b 81       	ldd	r24, Y+3	; 0x03
     bea:	28 2f       	mov	r18, r24
     bec:	30 e0       	ldi	r19, 0x00	; 0
     bee:	81 e0       	ldi	r24, 0x01	; 1
     bf0:	90 e0       	ldi	r25, 0x00	; 0
     bf2:	02 2e       	mov	r0, r18
     bf4:	02 c0       	rjmp	.+4      	; 0xbfa <DIO_u8Set_Pin_value+0xc4>
     bf6:	88 0f       	add	r24, r24
     bf8:	99 1f       	adc	r25, r25
     bfa:	0a 94       	dec	r0
     bfc:	e2 f7       	brpl	.-8      	; 0xbf6 <DIO_u8Set_Pin_value+0xc0>
     bfe:	80 95       	com	r24
     c00:	84 23       	and	r24, r20
     c02:	8c 93       	st	X, r24
     c04:	8c c0       	rjmp	.+280    	; 0xd1e <DIO_u8Set_Pin_value+0x1e8>
					break;
				case GROUP_B:
					Assign_Bit(DIO_u8_PORTB,Copy_u8_Pin_ID,Copy_u8_val);
     c06:	8c 81       	ldd	r24, Y+4	; 0x04
     c08:	81 30       	cpi	r24, 0x01	; 1
     c0a:	a1 f4       	brne	.+40     	; 0xc34 <DIO_u8Set_Pin_value+0xfe>
     c0c:	a8 e3       	ldi	r26, 0x38	; 56
     c0e:	b0 e0       	ldi	r27, 0x00	; 0
     c10:	e8 e3       	ldi	r30, 0x38	; 56
     c12:	f0 e0       	ldi	r31, 0x00	; 0
     c14:	80 81       	ld	r24, Z
     c16:	48 2f       	mov	r20, r24
     c18:	8b 81       	ldd	r24, Y+3	; 0x03
     c1a:	28 2f       	mov	r18, r24
     c1c:	30 e0       	ldi	r19, 0x00	; 0
     c1e:	81 e0       	ldi	r24, 0x01	; 1
     c20:	90 e0       	ldi	r25, 0x00	; 0
     c22:	02 2e       	mov	r0, r18
     c24:	02 c0       	rjmp	.+4      	; 0xc2a <DIO_u8Set_Pin_value+0xf4>
     c26:	88 0f       	add	r24, r24
     c28:	99 1f       	adc	r25, r25
     c2a:	0a 94       	dec	r0
     c2c:	e2 f7       	brpl	.-8      	; 0xc26 <DIO_u8Set_Pin_value+0xf0>
     c2e:	84 2b       	or	r24, r20
     c30:	8c 93       	st	X, r24
     c32:	75 c0       	rjmp	.+234    	; 0xd1e <DIO_u8Set_Pin_value+0x1e8>
     c34:	a8 e3       	ldi	r26, 0x38	; 56
     c36:	b0 e0       	ldi	r27, 0x00	; 0
     c38:	e8 e3       	ldi	r30, 0x38	; 56
     c3a:	f0 e0       	ldi	r31, 0x00	; 0
     c3c:	80 81       	ld	r24, Z
     c3e:	48 2f       	mov	r20, r24
     c40:	8b 81       	ldd	r24, Y+3	; 0x03
     c42:	28 2f       	mov	r18, r24
     c44:	30 e0       	ldi	r19, 0x00	; 0
     c46:	81 e0       	ldi	r24, 0x01	; 1
     c48:	90 e0       	ldi	r25, 0x00	; 0
     c4a:	02 2e       	mov	r0, r18
     c4c:	02 c0       	rjmp	.+4      	; 0xc52 <DIO_u8Set_Pin_value+0x11c>
     c4e:	88 0f       	add	r24, r24
     c50:	99 1f       	adc	r25, r25
     c52:	0a 94       	dec	r0
     c54:	e2 f7       	brpl	.-8      	; 0xc4e <DIO_u8Set_Pin_value+0x118>
     c56:	80 95       	com	r24
     c58:	84 23       	and	r24, r20
     c5a:	8c 93       	st	X, r24
     c5c:	60 c0       	rjmp	.+192    	; 0xd1e <DIO_u8Set_Pin_value+0x1e8>
					break;
				case GROUP_C:
					Assign_Bit(DIO_u8_PORTC,Copy_u8_Pin_ID,Copy_u8_val);
     c5e:	8c 81       	ldd	r24, Y+4	; 0x04
     c60:	81 30       	cpi	r24, 0x01	; 1
     c62:	a1 f4       	brne	.+40     	; 0xc8c <DIO_u8Set_Pin_value+0x156>
     c64:	a5 e3       	ldi	r26, 0x35	; 53
     c66:	b0 e0       	ldi	r27, 0x00	; 0
     c68:	e5 e3       	ldi	r30, 0x35	; 53
     c6a:	f0 e0       	ldi	r31, 0x00	; 0
     c6c:	80 81       	ld	r24, Z
     c6e:	48 2f       	mov	r20, r24
     c70:	8b 81       	ldd	r24, Y+3	; 0x03
     c72:	28 2f       	mov	r18, r24
     c74:	30 e0       	ldi	r19, 0x00	; 0
     c76:	81 e0       	ldi	r24, 0x01	; 1
     c78:	90 e0       	ldi	r25, 0x00	; 0
     c7a:	02 2e       	mov	r0, r18
     c7c:	02 c0       	rjmp	.+4      	; 0xc82 <DIO_u8Set_Pin_value+0x14c>
     c7e:	88 0f       	add	r24, r24
     c80:	99 1f       	adc	r25, r25
     c82:	0a 94       	dec	r0
     c84:	e2 f7       	brpl	.-8      	; 0xc7e <DIO_u8Set_Pin_value+0x148>
     c86:	84 2b       	or	r24, r20
     c88:	8c 93       	st	X, r24
     c8a:	49 c0       	rjmp	.+146    	; 0xd1e <DIO_u8Set_Pin_value+0x1e8>
     c8c:	a5 e3       	ldi	r26, 0x35	; 53
     c8e:	b0 e0       	ldi	r27, 0x00	; 0
     c90:	e5 e3       	ldi	r30, 0x35	; 53
     c92:	f0 e0       	ldi	r31, 0x00	; 0
     c94:	80 81       	ld	r24, Z
     c96:	48 2f       	mov	r20, r24
     c98:	8b 81       	ldd	r24, Y+3	; 0x03
     c9a:	28 2f       	mov	r18, r24
     c9c:	30 e0       	ldi	r19, 0x00	; 0
     c9e:	81 e0       	ldi	r24, 0x01	; 1
     ca0:	90 e0       	ldi	r25, 0x00	; 0
     ca2:	02 2e       	mov	r0, r18
     ca4:	02 c0       	rjmp	.+4      	; 0xcaa <DIO_u8Set_Pin_value+0x174>
     ca6:	88 0f       	add	r24, r24
     ca8:	99 1f       	adc	r25, r25
     caa:	0a 94       	dec	r0
     cac:	e2 f7       	brpl	.-8      	; 0xca6 <DIO_u8Set_Pin_value+0x170>
     cae:	80 95       	com	r24
     cb0:	84 23       	and	r24, r20
     cb2:	8c 93       	st	X, r24
     cb4:	34 c0       	rjmp	.+104    	; 0xd1e <DIO_u8Set_Pin_value+0x1e8>
					break;
				case GROUP_D:
					Assign_Bit(DIO_u8_PORTD,Copy_u8_Pin_ID,Copy_u8_val);
     cb6:	8c 81       	ldd	r24, Y+4	; 0x04
     cb8:	81 30       	cpi	r24, 0x01	; 1
     cba:	a1 f4       	brne	.+40     	; 0xce4 <DIO_u8Set_Pin_value+0x1ae>
     cbc:	a2 e3       	ldi	r26, 0x32	; 50
     cbe:	b0 e0       	ldi	r27, 0x00	; 0
     cc0:	e2 e3       	ldi	r30, 0x32	; 50
     cc2:	f0 e0       	ldi	r31, 0x00	; 0
     cc4:	80 81       	ld	r24, Z
     cc6:	48 2f       	mov	r20, r24
     cc8:	8b 81       	ldd	r24, Y+3	; 0x03
     cca:	28 2f       	mov	r18, r24
     ccc:	30 e0       	ldi	r19, 0x00	; 0
     cce:	81 e0       	ldi	r24, 0x01	; 1
     cd0:	90 e0       	ldi	r25, 0x00	; 0
     cd2:	02 2e       	mov	r0, r18
     cd4:	02 c0       	rjmp	.+4      	; 0xcda <DIO_u8Set_Pin_value+0x1a4>
     cd6:	88 0f       	add	r24, r24
     cd8:	99 1f       	adc	r25, r25
     cda:	0a 94       	dec	r0
     cdc:	e2 f7       	brpl	.-8      	; 0xcd6 <DIO_u8Set_Pin_value+0x1a0>
     cde:	84 2b       	or	r24, r20
     ce0:	8c 93       	st	X, r24
     ce2:	1d c0       	rjmp	.+58     	; 0xd1e <DIO_u8Set_Pin_value+0x1e8>
     ce4:	a2 e3       	ldi	r26, 0x32	; 50
     ce6:	b0 e0       	ldi	r27, 0x00	; 0
     ce8:	e2 e3       	ldi	r30, 0x32	; 50
     cea:	f0 e0       	ldi	r31, 0x00	; 0
     cec:	80 81       	ld	r24, Z
     cee:	48 2f       	mov	r20, r24
     cf0:	8b 81       	ldd	r24, Y+3	; 0x03
     cf2:	28 2f       	mov	r18, r24
     cf4:	30 e0       	ldi	r19, 0x00	; 0
     cf6:	81 e0       	ldi	r24, 0x01	; 1
     cf8:	90 e0       	ldi	r25, 0x00	; 0
     cfa:	02 2e       	mov	r0, r18
     cfc:	02 c0       	rjmp	.+4      	; 0xd02 <DIO_u8Set_Pin_value+0x1cc>
     cfe:	88 0f       	add	r24, r24
     d00:	99 1f       	adc	r25, r25
     d02:	0a 94       	dec	r0
     d04:	e2 f7       	brpl	.-8      	; 0xcfe <DIO_u8Set_Pin_value+0x1c8>
     d06:	80 95       	com	r24
     d08:	84 23       	and	r24, r20
     d0a:	8c 93       	st	X, r24
     d0c:	08 c0       	rjmp	.+16     	; 0xd1e <DIO_u8Set_Pin_value+0x1e8>
					break;
				}
			}else{
				loc_u8Error_State=DIO_u8Value_ID_ERR;
     d0e:	83 e0       	ldi	r24, 0x03	; 3
     d10:	89 83       	std	Y+1, r24	; 0x01
     d12:	05 c0       	rjmp	.+10     	; 0xd1e <DIO_u8Set_Pin_value+0x1e8>
			}
		}else{
			loc_u8Error_State=DIO_u8PIN_ID_ERR;
     d14:	82 e0       	ldi	r24, 0x02	; 2
     d16:	89 83       	std	Y+1, r24	; 0x01
     d18:	02 c0       	rjmp	.+4      	; 0xd1e <DIO_u8Set_Pin_value+0x1e8>
		}
	}else{
		loc_u8Error_State=DIO_u8PORT_ID_ERR;
     d1a:	81 e0       	ldi	r24, 0x01	; 1
     d1c:	89 83       	std	Y+1, r24	; 0x01
	}
	return loc_u8Error_State;
     d1e:	89 81       	ldd	r24, Y+1	; 0x01
}
     d20:	26 96       	adiw	r28, 0x06	; 6
     d22:	0f b6       	in	r0, 0x3f	; 63
     d24:	f8 94       	cli
     d26:	de bf       	out	0x3e, r29	; 62
     d28:	0f be       	out	0x3f, r0	; 63
     d2a:	cd bf       	out	0x3d, r28	; 61
     d2c:	cf 91       	pop	r28
     d2e:	df 91       	pop	r29
     d30:	08 95       	ret

00000d32 <DIO_u8Set_Pin_direction>:
u8 DIO_u8Set_Pin_direction(u8 Copy_u8_Port_ID,u8 Copy_u8_Pin_ID, u8 Copy_u8_direction ){
     d32:	df 93       	push	r29
     d34:	cf 93       	push	r28
     d36:	00 d0       	rcall	.+0      	; 0xd38 <DIO_u8Set_Pin_direction+0x6>
     d38:	00 d0       	rcall	.+0      	; 0xd3a <DIO_u8Set_Pin_direction+0x8>
     d3a:	00 d0       	rcall	.+0      	; 0xd3c <DIO_u8Set_Pin_direction+0xa>
     d3c:	cd b7       	in	r28, 0x3d	; 61
     d3e:	de b7       	in	r29, 0x3e	; 62
     d40:	8a 83       	std	Y+2, r24	; 0x02
     d42:	6b 83       	std	Y+3, r22	; 0x03
     d44:	4c 83       	std	Y+4, r20	; 0x04
	u8 loc_u8Error_State=DIO_u8PORT_INIT_ERR;
     d46:	19 82       	std	Y+1, r1	; 0x01
	if((Copy_u8_Port_ID>=DIO_MIN_u8_PORT_ID)&&(Copy_u8_Port_ID<=DIO_MAX_u8_PORT_ID))
     d48:	8a 81       	ldd	r24, Y+2	; 0x02
     d4a:	84 30       	cpi	r24, 0x04	; 4
     d4c:	08 f0       	brcs	.+2      	; 0xd50 <DIO_u8Set_Pin_direction+0x1e>
     d4e:	e3 c0       	rjmp	.+454    	; 0xf16 <DIO_u8Set_Pin_direction+0x1e4>
	{
		if((Copy_u8_Pin_ID>=DIO_MIN_u8_PIN_ID)&&(Copy_u8_Pin_ID<=DIO_MAX_u8_PIN_ID))
     d50:	8b 81       	ldd	r24, Y+3	; 0x03
     d52:	88 30       	cpi	r24, 0x08	; 8
     d54:	08 f0       	brcs	.+2      	; 0xd58 <DIO_u8Set_Pin_direction+0x26>
     d56:	dc c0       	rjmp	.+440    	; 0xf10 <DIO_u8Set_Pin_direction+0x1de>
		{
			if((Copy_u8_direction==DIO_MAX_u8_Direction)||(Copy_u8_direction==DIO_MIN_u8_Direction))
     d58:	8c 81       	ldd	r24, Y+4	; 0x04
     d5a:	81 30       	cpi	r24, 0x01	; 1
     d5c:	21 f0       	breq	.+8      	; 0xd66 <DIO_u8Set_Pin_direction+0x34>
     d5e:	8c 81       	ldd	r24, Y+4	; 0x04
     d60:	88 23       	and	r24, r24
     d62:	09 f0       	breq	.+2      	; 0xd66 <DIO_u8Set_Pin_direction+0x34>
     d64:	d2 c0       	rjmp	.+420    	; 0xf0a <DIO_u8Set_Pin_direction+0x1d8>
			{
				switch(Copy_u8_Port_ID)
     d66:	8a 81       	ldd	r24, Y+2	; 0x02
     d68:	28 2f       	mov	r18, r24
     d6a:	30 e0       	ldi	r19, 0x00	; 0
     d6c:	3e 83       	std	Y+6, r19	; 0x06
     d6e:	2d 83       	std	Y+5, r18	; 0x05
     d70:	8d 81       	ldd	r24, Y+5	; 0x05
     d72:	9e 81       	ldd	r25, Y+6	; 0x06
     d74:	81 30       	cpi	r24, 0x01	; 1
     d76:	91 05       	cpc	r25, r1
     d78:	09 f4       	brne	.+2      	; 0xd7c <DIO_u8Set_Pin_direction+0x4a>
     d7a:	43 c0       	rjmp	.+134    	; 0xe02 <DIO_u8Set_Pin_direction+0xd0>
     d7c:	2d 81       	ldd	r18, Y+5	; 0x05
     d7e:	3e 81       	ldd	r19, Y+6	; 0x06
     d80:	22 30       	cpi	r18, 0x02	; 2
     d82:	31 05       	cpc	r19, r1
     d84:	2c f4       	brge	.+10     	; 0xd90 <DIO_u8Set_Pin_direction+0x5e>
     d86:	8d 81       	ldd	r24, Y+5	; 0x05
     d88:	9e 81       	ldd	r25, Y+6	; 0x06
     d8a:	00 97       	sbiw	r24, 0x00	; 0
     d8c:	71 f0       	breq	.+28     	; 0xdaa <DIO_u8Set_Pin_direction+0x78>
     d8e:	c5 c0       	rjmp	.+394    	; 0xf1a <DIO_u8Set_Pin_direction+0x1e8>
     d90:	2d 81       	ldd	r18, Y+5	; 0x05
     d92:	3e 81       	ldd	r19, Y+6	; 0x06
     d94:	22 30       	cpi	r18, 0x02	; 2
     d96:	31 05       	cpc	r19, r1
     d98:	09 f4       	brne	.+2      	; 0xd9c <DIO_u8Set_Pin_direction+0x6a>
     d9a:	5f c0       	rjmp	.+190    	; 0xe5a <DIO_u8Set_Pin_direction+0x128>
     d9c:	8d 81       	ldd	r24, Y+5	; 0x05
     d9e:	9e 81       	ldd	r25, Y+6	; 0x06
     da0:	83 30       	cpi	r24, 0x03	; 3
     da2:	91 05       	cpc	r25, r1
     da4:	09 f4       	brne	.+2      	; 0xda8 <DIO_u8Set_Pin_direction+0x76>
     da6:	85 c0       	rjmp	.+266    	; 0xeb2 <DIO_u8Set_Pin_direction+0x180>
     da8:	b8 c0       	rjmp	.+368    	; 0xf1a <DIO_u8Set_Pin_direction+0x1e8>
				{
				case GROUP_A:
					Assign_Bit(DIO_u8_DDRA,Copy_u8_Pin_ID,Copy_u8_direction);
     daa:	8c 81       	ldd	r24, Y+4	; 0x04
     dac:	81 30       	cpi	r24, 0x01	; 1
     dae:	a1 f4       	brne	.+40     	; 0xdd8 <DIO_u8Set_Pin_direction+0xa6>
     db0:	aa e3       	ldi	r26, 0x3A	; 58
     db2:	b0 e0       	ldi	r27, 0x00	; 0
     db4:	ea e3       	ldi	r30, 0x3A	; 58
     db6:	f0 e0       	ldi	r31, 0x00	; 0
     db8:	80 81       	ld	r24, Z
     dba:	48 2f       	mov	r20, r24
     dbc:	8b 81       	ldd	r24, Y+3	; 0x03
     dbe:	28 2f       	mov	r18, r24
     dc0:	30 e0       	ldi	r19, 0x00	; 0
     dc2:	81 e0       	ldi	r24, 0x01	; 1
     dc4:	90 e0       	ldi	r25, 0x00	; 0
     dc6:	02 2e       	mov	r0, r18
     dc8:	02 c0       	rjmp	.+4      	; 0xdce <DIO_u8Set_Pin_direction+0x9c>
     dca:	88 0f       	add	r24, r24
     dcc:	99 1f       	adc	r25, r25
     dce:	0a 94       	dec	r0
     dd0:	e2 f7       	brpl	.-8      	; 0xdca <DIO_u8Set_Pin_direction+0x98>
     dd2:	84 2b       	or	r24, r20
     dd4:	8c 93       	st	X, r24
     dd6:	a1 c0       	rjmp	.+322    	; 0xf1a <DIO_u8Set_Pin_direction+0x1e8>
     dd8:	aa e3       	ldi	r26, 0x3A	; 58
     dda:	b0 e0       	ldi	r27, 0x00	; 0
     ddc:	ea e3       	ldi	r30, 0x3A	; 58
     dde:	f0 e0       	ldi	r31, 0x00	; 0
     de0:	80 81       	ld	r24, Z
     de2:	48 2f       	mov	r20, r24
     de4:	8b 81       	ldd	r24, Y+3	; 0x03
     de6:	28 2f       	mov	r18, r24
     de8:	30 e0       	ldi	r19, 0x00	; 0
     dea:	81 e0       	ldi	r24, 0x01	; 1
     dec:	90 e0       	ldi	r25, 0x00	; 0
     dee:	02 2e       	mov	r0, r18
     df0:	02 c0       	rjmp	.+4      	; 0xdf6 <DIO_u8Set_Pin_direction+0xc4>
     df2:	88 0f       	add	r24, r24
     df4:	99 1f       	adc	r25, r25
     df6:	0a 94       	dec	r0
     df8:	e2 f7       	brpl	.-8      	; 0xdf2 <DIO_u8Set_Pin_direction+0xc0>
     dfa:	80 95       	com	r24
     dfc:	84 23       	and	r24, r20
     dfe:	8c 93       	st	X, r24
     e00:	8c c0       	rjmp	.+280    	; 0xf1a <DIO_u8Set_Pin_direction+0x1e8>
					break;
				case GROUP_B:
					Assign_Bit(DIO_u8_DDRB,Copy_u8_Pin_ID,Copy_u8_direction);
     e02:	8c 81       	ldd	r24, Y+4	; 0x04
     e04:	81 30       	cpi	r24, 0x01	; 1
     e06:	a1 f4       	brne	.+40     	; 0xe30 <DIO_u8Set_Pin_direction+0xfe>
     e08:	a7 e3       	ldi	r26, 0x37	; 55
     e0a:	b0 e0       	ldi	r27, 0x00	; 0
     e0c:	e7 e3       	ldi	r30, 0x37	; 55
     e0e:	f0 e0       	ldi	r31, 0x00	; 0
     e10:	80 81       	ld	r24, Z
     e12:	48 2f       	mov	r20, r24
     e14:	8b 81       	ldd	r24, Y+3	; 0x03
     e16:	28 2f       	mov	r18, r24
     e18:	30 e0       	ldi	r19, 0x00	; 0
     e1a:	81 e0       	ldi	r24, 0x01	; 1
     e1c:	90 e0       	ldi	r25, 0x00	; 0
     e1e:	02 2e       	mov	r0, r18
     e20:	02 c0       	rjmp	.+4      	; 0xe26 <DIO_u8Set_Pin_direction+0xf4>
     e22:	88 0f       	add	r24, r24
     e24:	99 1f       	adc	r25, r25
     e26:	0a 94       	dec	r0
     e28:	e2 f7       	brpl	.-8      	; 0xe22 <DIO_u8Set_Pin_direction+0xf0>
     e2a:	84 2b       	or	r24, r20
     e2c:	8c 93       	st	X, r24
     e2e:	75 c0       	rjmp	.+234    	; 0xf1a <DIO_u8Set_Pin_direction+0x1e8>
     e30:	a7 e3       	ldi	r26, 0x37	; 55
     e32:	b0 e0       	ldi	r27, 0x00	; 0
     e34:	e7 e3       	ldi	r30, 0x37	; 55
     e36:	f0 e0       	ldi	r31, 0x00	; 0
     e38:	80 81       	ld	r24, Z
     e3a:	48 2f       	mov	r20, r24
     e3c:	8b 81       	ldd	r24, Y+3	; 0x03
     e3e:	28 2f       	mov	r18, r24
     e40:	30 e0       	ldi	r19, 0x00	; 0
     e42:	81 e0       	ldi	r24, 0x01	; 1
     e44:	90 e0       	ldi	r25, 0x00	; 0
     e46:	02 2e       	mov	r0, r18
     e48:	02 c0       	rjmp	.+4      	; 0xe4e <DIO_u8Set_Pin_direction+0x11c>
     e4a:	88 0f       	add	r24, r24
     e4c:	99 1f       	adc	r25, r25
     e4e:	0a 94       	dec	r0
     e50:	e2 f7       	brpl	.-8      	; 0xe4a <DIO_u8Set_Pin_direction+0x118>
     e52:	80 95       	com	r24
     e54:	84 23       	and	r24, r20
     e56:	8c 93       	st	X, r24
     e58:	60 c0       	rjmp	.+192    	; 0xf1a <DIO_u8Set_Pin_direction+0x1e8>
					break;
				case GROUP_C:
					Assign_Bit(DIO_u8_DDRC,Copy_u8_Pin_ID,Copy_u8_direction);
     e5a:	8c 81       	ldd	r24, Y+4	; 0x04
     e5c:	81 30       	cpi	r24, 0x01	; 1
     e5e:	a1 f4       	brne	.+40     	; 0xe88 <DIO_u8Set_Pin_direction+0x156>
     e60:	a4 e3       	ldi	r26, 0x34	; 52
     e62:	b0 e0       	ldi	r27, 0x00	; 0
     e64:	e4 e3       	ldi	r30, 0x34	; 52
     e66:	f0 e0       	ldi	r31, 0x00	; 0
     e68:	80 81       	ld	r24, Z
     e6a:	48 2f       	mov	r20, r24
     e6c:	8b 81       	ldd	r24, Y+3	; 0x03
     e6e:	28 2f       	mov	r18, r24
     e70:	30 e0       	ldi	r19, 0x00	; 0
     e72:	81 e0       	ldi	r24, 0x01	; 1
     e74:	90 e0       	ldi	r25, 0x00	; 0
     e76:	02 2e       	mov	r0, r18
     e78:	02 c0       	rjmp	.+4      	; 0xe7e <DIO_u8Set_Pin_direction+0x14c>
     e7a:	88 0f       	add	r24, r24
     e7c:	99 1f       	adc	r25, r25
     e7e:	0a 94       	dec	r0
     e80:	e2 f7       	brpl	.-8      	; 0xe7a <DIO_u8Set_Pin_direction+0x148>
     e82:	84 2b       	or	r24, r20
     e84:	8c 93       	st	X, r24
     e86:	49 c0       	rjmp	.+146    	; 0xf1a <DIO_u8Set_Pin_direction+0x1e8>
     e88:	a4 e3       	ldi	r26, 0x34	; 52
     e8a:	b0 e0       	ldi	r27, 0x00	; 0
     e8c:	e4 e3       	ldi	r30, 0x34	; 52
     e8e:	f0 e0       	ldi	r31, 0x00	; 0
     e90:	80 81       	ld	r24, Z
     e92:	48 2f       	mov	r20, r24
     e94:	8b 81       	ldd	r24, Y+3	; 0x03
     e96:	28 2f       	mov	r18, r24
     e98:	30 e0       	ldi	r19, 0x00	; 0
     e9a:	81 e0       	ldi	r24, 0x01	; 1
     e9c:	90 e0       	ldi	r25, 0x00	; 0
     e9e:	02 2e       	mov	r0, r18
     ea0:	02 c0       	rjmp	.+4      	; 0xea6 <DIO_u8Set_Pin_direction+0x174>
     ea2:	88 0f       	add	r24, r24
     ea4:	99 1f       	adc	r25, r25
     ea6:	0a 94       	dec	r0
     ea8:	e2 f7       	brpl	.-8      	; 0xea2 <DIO_u8Set_Pin_direction+0x170>
     eaa:	80 95       	com	r24
     eac:	84 23       	and	r24, r20
     eae:	8c 93       	st	X, r24
     eb0:	34 c0       	rjmp	.+104    	; 0xf1a <DIO_u8Set_Pin_direction+0x1e8>
					break;
				case GROUP_D:
					Assign_Bit(DIO_u8_DDRD,Copy_u8_Pin_ID,Copy_u8_direction);
     eb2:	8c 81       	ldd	r24, Y+4	; 0x04
     eb4:	81 30       	cpi	r24, 0x01	; 1
     eb6:	a1 f4       	brne	.+40     	; 0xee0 <DIO_u8Set_Pin_direction+0x1ae>
     eb8:	a1 e3       	ldi	r26, 0x31	; 49
     eba:	b0 e0       	ldi	r27, 0x00	; 0
     ebc:	e1 e3       	ldi	r30, 0x31	; 49
     ebe:	f0 e0       	ldi	r31, 0x00	; 0
     ec0:	80 81       	ld	r24, Z
     ec2:	48 2f       	mov	r20, r24
     ec4:	8b 81       	ldd	r24, Y+3	; 0x03
     ec6:	28 2f       	mov	r18, r24
     ec8:	30 e0       	ldi	r19, 0x00	; 0
     eca:	81 e0       	ldi	r24, 0x01	; 1
     ecc:	90 e0       	ldi	r25, 0x00	; 0
     ece:	02 2e       	mov	r0, r18
     ed0:	02 c0       	rjmp	.+4      	; 0xed6 <DIO_u8Set_Pin_direction+0x1a4>
     ed2:	88 0f       	add	r24, r24
     ed4:	99 1f       	adc	r25, r25
     ed6:	0a 94       	dec	r0
     ed8:	e2 f7       	brpl	.-8      	; 0xed2 <DIO_u8Set_Pin_direction+0x1a0>
     eda:	84 2b       	or	r24, r20
     edc:	8c 93       	st	X, r24
     ede:	1d c0       	rjmp	.+58     	; 0xf1a <DIO_u8Set_Pin_direction+0x1e8>
     ee0:	a1 e3       	ldi	r26, 0x31	; 49
     ee2:	b0 e0       	ldi	r27, 0x00	; 0
     ee4:	e1 e3       	ldi	r30, 0x31	; 49
     ee6:	f0 e0       	ldi	r31, 0x00	; 0
     ee8:	80 81       	ld	r24, Z
     eea:	48 2f       	mov	r20, r24
     eec:	8b 81       	ldd	r24, Y+3	; 0x03
     eee:	28 2f       	mov	r18, r24
     ef0:	30 e0       	ldi	r19, 0x00	; 0
     ef2:	81 e0       	ldi	r24, 0x01	; 1
     ef4:	90 e0       	ldi	r25, 0x00	; 0
     ef6:	02 2e       	mov	r0, r18
     ef8:	02 c0       	rjmp	.+4      	; 0xefe <DIO_u8Set_Pin_direction+0x1cc>
     efa:	88 0f       	add	r24, r24
     efc:	99 1f       	adc	r25, r25
     efe:	0a 94       	dec	r0
     f00:	e2 f7       	brpl	.-8      	; 0xefa <DIO_u8Set_Pin_direction+0x1c8>
     f02:	80 95       	com	r24
     f04:	84 23       	and	r24, r20
     f06:	8c 93       	st	X, r24
     f08:	08 c0       	rjmp	.+16     	; 0xf1a <DIO_u8Set_Pin_direction+0x1e8>
					break;
				}

			}else{
				loc_u8Error_State=DIO_u8Value_ID_ERR;
     f0a:	83 e0       	ldi	r24, 0x03	; 3
     f0c:	89 83       	std	Y+1, r24	; 0x01
     f0e:	05 c0       	rjmp	.+10     	; 0xf1a <DIO_u8Set_Pin_direction+0x1e8>
			}

		}else{
			loc_u8Error_State=DIO_u8PIN_ID_ERR;
     f10:	82 e0       	ldi	r24, 0x02	; 2
     f12:	89 83       	std	Y+1, r24	; 0x01
     f14:	02 c0       	rjmp	.+4      	; 0xf1a <DIO_u8Set_Pin_direction+0x1e8>
		}
	}else{
		loc_u8Error_State=DIO_u8PORT_ID_ERR;
     f16:	81 e0       	ldi	r24, 0x01	; 1
     f18:	89 83       	std	Y+1, r24	; 0x01
	}
	return loc_u8Error_State;
     f1a:	89 81       	ldd	r24, Y+1	; 0x01
}
     f1c:	26 96       	adiw	r28, 0x06	; 6
     f1e:	0f b6       	in	r0, 0x3f	; 63
     f20:	f8 94       	cli
     f22:	de bf       	out	0x3e, r29	; 62
     f24:	0f be       	out	0x3f, r0	; 63
     f26:	cd bf       	out	0x3d, r28	; 61
     f28:	cf 91       	pop	r28
     f2a:	df 91       	pop	r29
     f2c:	08 95       	ret

00000f2e <DIO_u8Set_PORT_value>:
u8 DIO_u8Set_PORT_value(u8 Copy_u8_Port_ID, u8 Copy_u8_PORT_value)
{
     f2e:	df 93       	push	r29
     f30:	cf 93       	push	r28
     f32:	00 d0       	rcall	.+0      	; 0xf34 <DIO_u8Set_PORT_value+0x6>
     f34:	00 d0       	rcall	.+0      	; 0xf36 <DIO_u8Set_PORT_value+0x8>
     f36:	0f 92       	push	r0
     f38:	cd b7       	in	r28, 0x3d	; 61
     f3a:	de b7       	in	r29, 0x3e	; 62
     f3c:	8a 83       	std	Y+2, r24	; 0x02
     f3e:	6b 83       	std	Y+3, r22	; 0x03
	u8 loc_u8Error_State=DIO_u8PORT_INIT_ERR;
     f40:	19 82       	std	Y+1, r1	; 0x01
	if((Copy_u8_Port_ID>=DIO_MIN_u8_PORT_ID)&&(Copy_u8_Port_ID<=DIO_MAX_u8_PORT_ID))
     f42:	8a 81       	ldd	r24, Y+2	; 0x02
     f44:	84 30       	cpi	r24, 0x04	; 4
     f46:	98 f5       	brcc	.+102    	; 0xfae <DIO_u8Set_PORT_value+0x80>
	{
		switch(Copy_u8_Port_ID)
     f48:	8a 81       	ldd	r24, Y+2	; 0x02
     f4a:	28 2f       	mov	r18, r24
     f4c:	30 e0       	ldi	r19, 0x00	; 0
     f4e:	3d 83       	std	Y+5, r19	; 0x05
     f50:	2c 83       	std	Y+4, r18	; 0x04
     f52:	8c 81       	ldd	r24, Y+4	; 0x04
     f54:	9d 81       	ldd	r25, Y+5	; 0x05
     f56:	81 30       	cpi	r24, 0x01	; 1
     f58:	91 05       	cpc	r25, r1
     f5a:	d1 f0       	breq	.+52     	; 0xf90 <DIO_u8Set_PORT_value+0x62>
     f5c:	2c 81       	ldd	r18, Y+4	; 0x04
     f5e:	3d 81       	ldd	r19, Y+5	; 0x05
     f60:	22 30       	cpi	r18, 0x02	; 2
     f62:	31 05       	cpc	r19, r1
     f64:	2c f4       	brge	.+10     	; 0xf70 <DIO_u8Set_PORT_value+0x42>
     f66:	8c 81       	ldd	r24, Y+4	; 0x04
     f68:	9d 81       	ldd	r25, Y+5	; 0x05
     f6a:	00 97       	sbiw	r24, 0x00	; 0
     f6c:	61 f0       	breq	.+24     	; 0xf86 <DIO_u8Set_PORT_value+0x58>
     f6e:	21 c0       	rjmp	.+66     	; 0xfb2 <DIO_u8Set_PORT_value+0x84>
     f70:	2c 81       	ldd	r18, Y+4	; 0x04
     f72:	3d 81       	ldd	r19, Y+5	; 0x05
     f74:	22 30       	cpi	r18, 0x02	; 2
     f76:	31 05       	cpc	r19, r1
     f78:	81 f0       	breq	.+32     	; 0xf9a <DIO_u8Set_PORT_value+0x6c>
     f7a:	8c 81       	ldd	r24, Y+4	; 0x04
     f7c:	9d 81       	ldd	r25, Y+5	; 0x05
     f7e:	83 30       	cpi	r24, 0x03	; 3
     f80:	91 05       	cpc	r25, r1
     f82:	81 f0       	breq	.+32     	; 0xfa4 <DIO_u8Set_PORT_value+0x76>
     f84:	16 c0       	rjmp	.+44     	; 0xfb2 <DIO_u8Set_PORT_value+0x84>
		{
		case GROUP_A:
			DIO_u8_PORTA=Copy_u8_PORT_value;
     f86:	eb e3       	ldi	r30, 0x3B	; 59
     f88:	f0 e0       	ldi	r31, 0x00	; 0
     f8a:	8b 81       	ldd	r24, Y+3	; 0x03
     f8c:	80 83       	st	Z, r24
     f8e:	11 c0       	rjmp	.+34     	; 0xfb2 <DIO_u8Set_PORT_value+0x84>
			break;
		case GROUP_B:
			DIO_u8_PORTB=Copy_u8_PORT_value;
     f90:	e8 e3       	ldi	r30, 0x38	; 56
     f92:	f0 e0       	ldi	r31, 0x00	; 0
     f94:	8b 81       	ldd	r24, Y+3	; 0x03
     f96:	80 83       	st	Z, r24
     f98:	0c c0       	rjmp	.+24     	; 0xfb2 <DIO_u8Set_PORT_value+0x84>
			break;
		case GROUP_C:
			DIO_u8_PORTC=Copy_u8_PORT_value;
     f9a:	e5 e3       	ldi	r30, 0x35	; 53
     f9c:	f0 e0       	ldi	r31, 0x00	; 0
     f9e:	8b 81       	ldd	r24, Y+3	; 0x03
     fa0:	80 83       	st	Z, r24
     fa2:	07 c0       	rjmp	.+14     	; 0xfb2 <DIO_u8Set_PORT_value+0x84>
			break;
		case GROUP_D:
			DIO_u8_PORTD=Copy_u8_PORT_value;
     fa4:	e2 e3       	ldi	r30, 0x32	; 50
     fa6:	f0 e0       	ldi	r31, 0x00	; 0
     fa8:	8b 81       	ldd	r24, Y+3	; 0x03
     faa:	80 83       	st	Z, r24
     fac:	02 c0       	rjmp	.+4      	; 0xfb2 <DIO_u8Set_PORT_value+0x84>
			break;
		}
	}
	else
	{
		loc_u8Error_State=DIO_u8PORT_ID_ERR;
     fae:	81 e0       	ldi	r24, 0x01	; 1
     fb0:	89 83       	std	Y+1, r24	; 0x01
	}
	return loc_u8Error_State;
     fb2:	89 81       	ldd	r24, Y+1	; 0x01
}
     fb4:	0f 90       	pop	r0
     fb6:	0f 90       	pop	r0
     fb8:	0f 90       	pop	r0
     fba:	0f 90       	pop	r0
     fbc:	0f 90       	pop	r0
     fbe:	cf 91       	pop	r28
     fc0:	df 91       	pop	r29
     fc2:	08 95       	ret

00000fc4 <DIO_u8Set_PORT_direction>:
u8 DIO_u8Set_PORT_direction(u8 Copy_u8_Port_ID, u8 Copy_u8_PORT_direction)
{
     fc4:	df 93       	push	r29
     fc6:	cf 93       	push	r28
     fc8:	00 d0       	rcall	.+0      	; 0xfca <DIO_u8Set_PORT_direction+0x6>
     fca:	00 d0       	rcall	.+0      	; 0xfcc <DIO_u8Set_PORT_direction+0x8>
     fcc:	0f 92       	push	r0
     fce:	cd b7       	in	r28, 0x3d	; 61
     fd0:	de b7       	in	r29, 0x3e	; 62
     fd2:	8a 83       	std	Y+2, r24	; 0x02
     fd4:	6b 83       	std	Y+3, r22	; 0x03
	u8 loc_u8Error_State=DIO_u8PORT_INIT_ERR;
     fd6:	19 82       	std	Y+1, r1	; 0x01
	if((Copy_u8_Port_ID>=DIO_MIN_u8_PORT_ID)&&(Copy_u8_Port_ID<=DIO_MAX_u8_PORT_ID))
     fd8:	8a 81       	ldd	r24, Y+2	; 0x02
     fda:	84 30       	cpi	r24, 0x04	; 4
     fdc:	98 f5       	brcc	.+102    	; 0x1044 <DIO_u8Set_PORT_direction+0x80>
	{
		switch(Copy_u8_Port_ID)
     fde:	8a 81       	ldd	r24, Y+2	; 0x02
     fe0:	28 2f       	mov	r18, r24
     fe2:	30 e0       	ldi	r19, 0x00	; 0
     fe4:	3d 83       	std	Y+5, r19	; 0x05
     fe6:	2c 83       	std	Y+4, r18	; 0x04
     fe8:	8c 81       	ldd	r24, Y+4	; 0x04
     fea:	9d 81       	ldd	r25, Y+5	; 0x05
     fec:	81 30       	cpi	r24, 0x01	; 1
     fee:	91 05       	cpc	r25, r1
     ff0:	d1 f0       	breq	.+52     	; 0x1026 <DIO_u8Set_PORT_direction+0x62>
     ff2:	2c 81       	ldd	r18, Y+4	; 0x04
     ff4:	3d 81       	ldd	r19, Y+5	; 0x05
     ff6:	22 30       	cpi	r18, 0x02	; 2
     ff8:	31 05       	cpc	r19, r1
     ffa:	2c f4       	brge	.+10     	; 0x1006 <DIO_u8Set_PORT_direction+0x42>
     ffc:	8c 81       	ldd	r24, Y+4	; 0x04
     ffe:	9d 81       	ldd	r25, Y+5	; 0x05
    1000:	00 97       	sbiw	r24, 0x00	; 0
    1002:	61 f0       	breq	.+24     	; 0x101c <DIO_u8Set_PORT_direction+0x58>
    1004:	21 c0       	rjmp	.+66     	; 0x1048 <DIO_u8Set_PORT_direction+0x84>
    1006:	2c 81       	ldd	r18, Y+4	; 0x04
    1008:	3d 81       	ldd	r19, Y+5	; 0x05
    100a:	22 30       	cpi	r18, 0x02	; 2
    100c:	31 05       	cpc	r19, r1
    100e:	81 f0       	breq	.+32     	; 0x1030 <DIO_u8Set_PORT_direction+0x6c>
    1010:	8c 81       	ldd	r24, Y+4	; 0x04
    1012:	9d 81       	ldd	r25, Y+5	; 0x05
    1014:	83 30       	cpi	r24, 0x03	; 3
    1016:	91 05       	cpc	r25, r1
    1018:	81 f0       	breq	.+32     	; 0x103a <DIO_u8Set_PORT_direction+0x76>
    101a:	16 c0       	rjmp	.+44     	; 0x1048 <DIO_u8Set_PORT_direction+0x84>
		{
		case GROUP_A:
			DIO_u8_DDRA=Copy_u8_PORT_direction;
    101c:	ea e3       	ldi	r30, 0x3A	; 58
    101e:	f0 e0       	ldi	r31, 0x00	; 0
    1020:	8b 81       	ldd	r24, Y+3	; 0x03
    1022:	80 83       	st	Z, r24
    1024:	11 c0       	rjmp	.+34     	; 0x1048 <DIO_u8Set_PORT_direction+0x84>
			break;
		case GROUP_B:
			DIO_u8_DDRB=Copy_u8_PORT_direction;
    1026:	e7 e3       	ldi	r30, 0x37	; 55
    1028:	f0 e0       	ldi	r31, 0x00	; 0
    102a:	8b 81       	ldd	r24, Y+3	; 0x03
    102c:	80 83       	st	Z, r24
    102e:	0c c0       	rjmp	.+24     	; 0x1048 <DIO_u8Set_PORT_direction+0x84>
			break;
		case GROUP_C:
			DIO_u8_DDRC=Copy_u8_PORT_direction;
    1030:	e4 e3       	ldi	r30, 0x34	; 52
    1032:	f0 e0       	ldi	r31, 0x00	; 0
    1034:	8b 81       	ldd	r24, Y+3	; 0x03
    1036:	80 83       	st	Z, r24
    1038:	07 c0       	rjmp	.+14     	; 0x1048 <DIO_u8Set_PORT_direction+0x84>
			break;
		case GROUP_D:
			DIO_u8_DDRD=Copy_u8_PORT_direction;
    103a:	e1 e3       	ldi	r30, 0x31	; 49
    103c:	f0 e0       	ldi	r31, 0x00	; 0
    103e:	8b 81       	ldd	r24, Y+3	; 0x03
    1040:	80 83       	st	Z, r24
    1042:	02 c0       	rjmp	.+4      	; 0x1048 <DIO_u8Set_PORT_direction+0x84>
			break;
		}
	}
	else
	{
		loc_u8Error_State=DIO_u8PORT_ID_ERR;
    1044:	81 e0       	ldi	r24, 0x01	; 1
    1046:	89 83       	std	Y+1, r24	; 0x01
	}
	return loc_u8Error_State;
    1048:	89 81       	ldd	r24, Y+1	; 0x01
}
    104a:	0f 90       	pop	r0
    104c:	0f 90       	pop	r0
    104e:	0f 90       	pop	r0
    1050:	0f 90       	pop	r0
    1052:	0f 90       	pop	r0
    1054:	cf 91       	pop	r28
    1056:	df 91       	pop	r29
    1058:	08 95       	ret

0000105a <DIO_u8Get_Pin_value>:
u8 DIO_u8Get_Pin_value(u8 Copy_u8_Port_ID,u8 Copy_u8_Pin_ID,u8 *Copy_u8_val)
{
    105a:	df 93       	push	r29
    105c:	cf 93       	push	r28
    105e:	cd b7       	in	r28, 0x3d	; 61
    1060:	de b7       	in	r29, 0x3e	; 62
    1062:	27 97       	sbiw	r28, 0x07	; 7
    1064:	0f b6       	in	r0, 0x3f	; 63
    1066:	f8 94       	cli
    1068:	de bf       	out	0x3e, r29	; 62
    106a:	0f be       	out	0x3f, r0	; 63
    106c:	cd bf       	out	0x3d, r28	; 61
    106e:	8a 83       	std	Y+2, r24	; 0x02
    1070:	6b 83       	std	Y+3, r22	; 0x03
    1072:	5d 83       	std	Y+5, r21	; 0x05
    1074:	4c 83       	std	Y+4, r20	; 0x04
	u8 loc_u8Error_State=DIO_u8PORT_INIT_ERR;
    1076:	19 82       	std	Y+1, r1	; 0x01
	if((Copy_u8_Port_ID>=DIO_MIN_u8_PORT_ID)&&(Copy_u8_Port_ID<=DIO_MAX_u8_PORT_ID))
    1078:	8a 81       	ldd	r24, Y+2	; 0x02
    107a:	84 30       	cpi	r24, 0x04	; 4
    107c:	08 f0       	brcs	.+2      	; 0x1080 <DIO_u8Get_Pin_value+0x26>
    107e:	78 c0       	rjmp	.+240    	; 0x1170 <DIO_u8Get_Pin_value+0x116>
	{
		if((Copy_u8_Pin_ID>=DIO_MIN_u8_PIN_ID)&&(Copy_u8_Pin_ID<=DIO_MAX_u8_PIN_ID))
    1080:	8b 81       	ldd	r24, Y+3	; 0x03
    1082:	88 30       	cpi	r24, 0x08	; 8
    1084:	08 f0       	brcs	.+2      	; 0x1088 <DIO_u8Get_Pin_value+0x2e>
    1086:	71 c0       	rjmp	.+226    	; 0x116a <DIO_u8Get_Pin_value+0x110>
		{
			switch(Copy_u8_Port_ID)
    1088:	8a 81       	ldd	r24, Y+2	; 0x02
    108a:	28 2f       	mov	r18, r24
    108c:	30 e0       	ldi	r19, 0x00	; 0
    108e:	3f 83       	std	Y+7, r19	; 0x07
    1090:	2e 83       	std	Y+6, r18	; 0x06
    1092:	4e 81       	ldd	r20, Y+6	; 0x06
    1094:	5f 81       	ldd	r21, Y+7	; 0x07
    1096:	41 30       	cpi	r20, 0x01	; 1
    1098:	51 05       	cpc	r21, r1
    109a:	59 f1       	breq	.+86     	; 0x10f2 <DIO_u8Get_Pin_value+0x98>
    109c:	8e 81       	ldd	r24, Y+6	; 0x06
    109e:	9f 81       	ldd	r25, Y+7	; 0x07
    10a0:	82 30       	cpi	r24, 0x02	; 2
    10a2:	91 05       	cpc	r25, r1
    10a4:	34 f4       	brge	.+12     	; 0x10b2 <DIO_u8Get_Pin_value+0x58>
    10a6:	2e 81       	ldd	r18, Y+6	; 0x06
    10a8:	3f 81       	ldd	r19, Y+7	; 0x07
    10aa:	21 15       	cp	r18, r1
    10ac:	31 05       	cpc	r19, r1
    10ae:	69 f0       	breq	.+26     	; 0x10ca <DIO_u8Get_Pin_value+0x70>
    10b0:	61 c0       	rjmp	.+194    	; 0x1174 <DIO_u8Get_Pin_value+0x11a>
    10b2:	4e 81       	ldd	r20, Y+6	; 0x06
    10b4:	5f 81       	ldd	r21, Y+7	; 0x07
    10b6:	42 30       	cpi	r20, 0x02	; 2
    10b8:	51 05       	cpc	r21, r1
    10ba:	79 f1       	breq	.+94     	; 0x111a <DIO_u8Get_Pin_value+0xc0>
    10bc:	8e 81       	ldd	r24, Y+6	; 0x06
    10be:	9f 81       	ldd	r25, Y+7	; 0x07
    10c0:	83 30       	cpi	r24, 0x03	; 3
    10c2:	91 05       	cpc	r25, r1
    10c4:	09 f4       	brne	.+2      	; 0x10c8 <DIO_u8Get_Pin_value+0x6e>
    10c6:	3d c0       	rjmp	.+122    	; 0x1142 <DIO_u8Get_Pin_value+0xe8>
    10c8:	55 c0       	rjmp	.+170    	; 0x1174 <DIO_u8Get_Pin_value+0x11a>
			{
			case GROUP_A:
				*Copy_u8_val=Get_bit(DIO_u8_PINA,Copy_u8_Pin_ID);
    10ca:	e9 e3       	ldi	r30, 0x39	; 57
    10cc:	f0 e0       	ldi	r31, 0x00	; 0
    10ce:	80 81       	ld	r24, Z
    10d0:	28 2f       	mov	r18, r24
    10d2:	30 e0       	ldi	r19, 0x00	; 0
    10d4:	8b 81       	ldd	r24, Y+3	; 0x03
    10d6:	88 2f       	mov	r24, r24
    10d8:	90 e0       	ldi	r25, 0x00	; 0
    10da:	a9 01       	movw	r20, r18
    10dc:	02 c0       	rjmp	.+4      	; 0x10e2 <DIO_u8Get_Pin_value+0x88>
    10de:	55 95       	asr	r21
    10e0:	47 95       	ror	r20
    10e2:	8a 95       	dec	r24
    10e4:	e2 f7       	brpl	.-8      	; 0x10de <DIO_u8Get_Pin_value+0x84>
    10e6:	ca 01       	movw	r24, r20
    10e8:	81 70       	andi	r24, 0x01	; 1
    10ea:	ec 81       	ldd	r30, Y+4	; 0x04
    10ec:	fd 81       	ldd	r31, Y+5	; 0x05
    10ee:	80 83       	st	Z, r24
    10f0:	41 c0       	rjmp	.+130    	; 0x1174 <DIO_u8Get_Pin_value+0x11a>
				break;
			case GROUP_B:
				*Copy_u8_val=Get_bit(DIO_u8_PINB,Copy_u8_Pin_ID);
    10f2:	e6 e3       	ldi	r30, 0x36	; 54
    10f4:	f0 e0       	ldi	r31, 0x00	; 0
    10f6:	80 81       	ld	r24, Z
    10f8:	28 2f       	mov	r18, r24
    10fa:	30 e0       	ldi	r19, 0x00	; 0
    10fc:	8b 81       	ldd	r24, Y+3	; 0x03
    10fe:	88 2f       	mov	r24, r24
    1100:	90 e0       	ldi	r25, 0x00	; 0
    1102:	a9 01       	movw	r20, r18
    1104:	02 c0       	rjmp	.+4      	; 0x110a <DIO_u8Get_Pin_value+0xb0>
    1106:	55 95       	asr	r21
    1108:	47 95       	ror	r20
    110a:	8a 95       	dec	r24
    110c:	e2 f7       	brpl	.-8      	; 0x1106 <DIO_u8Get_Pin_value+0xac>
    110e:	ca 01       	movw	r24, r20
    1110:	81 70       	andi	r24, 0x01	; 1
    1112:	ec 81       	ldd	r30, Y+4	; 0x04
    1114:	fd 81       	ldd	r31, Y+5	; 0x05
    1116:	80 83       	st	Z, r24
    1118:	2d c0       	rjmp	.+90     	; 0x1174 <DIO_u8Get_Pin_value+0x11a>
				break;
			case GROUP_C:
				*Copy_u8_val=Get_bit(DIO_u8_PINC,Copy_u8_Pin_ID);
    111a:	e3 e3       	ldi	r30, 0x33	; 51
    111c:	f0 e0       	ldi	r31, 0x00	; 0
    111e:	80 81       	ld	r24, Z
    1120:	28 2f       	mov	r18, r24
    1122:	30 e0       	ldi	r19, 0x00	; 0
    1124:	8b 81       	ldd	r24, Y+3	; 0x03
    1126:	88 2f       	mov	r24, r24
    1128:	90 e0       	ldi	r25, 0x00	; 0
    112a:	a9 01       	movw	r20, r18
    112c:	02 c0       	rjmp	.+4      	; 0x1132 <DIO_u8Get_Pin_value+0xd8>
    112e:	55 95       	asr	r21
    1130:	47 95       	ror	r20
    1132:	8a 95       	dec	r24
    1134:	e2 f7       	brpl	.-8      	; 0x112e <DIO_u8Get_Pin_value+0xd4>
    1136:	ca 01       	movw	r24, r20
    1138:	81 70       	andi	r24, 0x01	; 1
    113a:	ec 81       	ldd	r30, Y+4	; 0x04
    113c:	fd 81       	ldd	r31, Y+5	; 0x05
    113e:	80 83       	st	Z, r24
    1140:	19 c0       	rjmp	.+50     	; 0x1174 <DIO_u8Get_Pin_value+0x11a>
				break;
			case GROUP_D:
				*Copy_u8_val=Get_bit(DIO_u8_PIND,Copy_u8_Pin_ID);
    1142:	e0 e3       	ldi	r30, 0x30	; 48
    1144:	f0 e0       	ldi	r31, 0x00	; 0
    1146:	80 81       	ld	r24, Z
    1148:	28 2f       	mov	r18, r24
    114a:	30 e0       	ldi	r19, 0x00	; 0
    114c:	8b 81       	ldd	r24, Y+3	; 0x03
    114e:	88 2f       	mov	r24, r24
    1150:	90 e0       	ldi	r25, 0x00	; 0
    1152:	a9 01       	movw	r20, r18
    1154:	02 c0       	rjmp	.+4      	; 0x115a <DIO_u8Get_Pin_value+0x100>
    1156:	55 95       	asr	r21
    1158:	47 95       	ror	r20
    115a:	8a 95       	dec	r24
    115c:	e2 f7       	brpl	.-8      	; 0x1156 <DIO_u8Get_Pin_value+0xfc>
    115e:	ca 01       	movw	r24, r20
    1160:	81 70       	andi	r24, 0x01	; 1
    1162:	ec 81       	ldd	r30, Y+4	; 0x04
    1164:	fd 81       	ldd	r31, Y+5	; 0x05
    1166:	80 83       	st	Z, r24
    1168:	05 c0       	rjmp	.+10     	; 0x1174 <DIO_u8Get_Pin_value+0x11a>
				break;
			}

		}else{
			loc_u8Error_State=DIO_u8PIN_ID_ERR;
    116a:	82 e0       	ldi	r24, 0x02	; 2
    116c:	89 83       	std	Y+1, r24	; 0x01
    116e:	02 c0       	rjmp	.+4      	; 0x1174 <DIO_u8Get_Pin_value+0x11a>
		}
	}else{
		loc_u8Error_State=DIO_u8PORT_ID_ERR;
    1170:	81 e0       	ldi	r24, 0x01	; 1
    1172:	89 83       	std	Y+1, r24	; 0x01
	}
	return loc_u8Error_State;
    1174:	89 81       	ldd	r24, Y+1	; 0x01
}
    1176:	27 96       	adiw	r28, 0x07	; 7
    1178:	0f b6       	in	r0, 0x3f	; 63
    117a:	f8 94       	cli
    117c:	de bf       	out	0x3e, r29	; 62
    117e:	0f be       	out	0x3f, r0	; 63
    1180:	cd bf       	out	0x3d, r28	; 61
    1182:	cf 91       	pop	r28
    1184:	df 91       	pop	r29
    1186:	08 95       	ret

00001188 <DIO_u8Get_PORT_value>:
u8 DIO_u8Get_PORT_value(u8 Copy_u8_Port_ID,u8 *Copy_u8_PORT_val)
{
    1188:	df 93       	push	r29
    118a:	cf 93       	push	r28
    118c:	00 d0       	rcall	.+0      	; 0x118e <DIO_u8Get_PORT_value+0x6>
    118e:	00 d0       	rcall	.+0      	; 0x1190 <DIO_u8Get_PORT_value+0x8>
    1190:	00 d0       	rcall	.+0      	; 0x1192 <DIO_u8Get_PORT_value+0xa>
    1192:	cd b7       	in	r28, 0x3d	; 61
    1194:	de b7       	in	r29, 0x3e	; 62
    1196:	8a 83       	std	Y+2, r24	; 0x02
    1198:	7c 83       	std	Y+4, r23	; 0x04
    119a:	6b 83       	std	Y+3, r22	; 0x03
	u8 loc_u8Error_State=DIO_u8PORT_INIT_ERR;
    119c:	19 82       	std	Y+1, r1	; 0x01
		if((Copy_u8_Port_ID>=DIO_MIN_u8_PORT_ID)&&(Copy_u8_Port_ID<=DIO_MAX_u8_PORT_ID))
    119e:	8a 81       	ldd	r24, Y+2	; 0x02
    11a0:	84 30       	cpi	r24, 0x04	; 4
    11a2:	d8 f5       	brcc	.+118    	; 0x121a <DIO_u8Get_PORT_value+0x92>
		{

				switch(Copy_u8_Port_ID)
    11a4:	8a 81       	ldd	r24, Y+2	; 0x02
    11a6:	28 2f       	mov	r18, r24
    11a8:	30 e0       	ldi	r19, 0x00	; 0
    11aa:	3e 83       	std	Y+6, r19	; 0x06
    11ac:	2d 83       	std	Y+5, r18	; 0x05
    11ae:	8d 81       	ldd	r24, Y+5	; 0x05
    11b0:	9e 81       	ldd	r25, Y+6	; 0x06
    11b2:	81 30       	cpi	r24, 0x01	; 1
    11b4:	91 05       	cpc	r25, r1
    11b6:	e1 f0       	breq	.+56     	; 0x11f0 <DIO_u8Get_PORT_value+0x68>
    11b8:	2d 81       	ldd	r18, Y+5	; 0x05
    11ba:	3e 81       	ldd	r19, Y+6	; 0x06
    11bc:	22 30       	cpi	r18, 0x02	; 2
    11be:	31 05       	cpc	r19, r1
    11c0:	2c f4       	brge	.+10     	; 0x11cc <DIO_u8Get_PORT_value+0x44>
    11c2:	8d 81       	ldd	r24, Y+5	; 0x05
    11c4:	9e 81       	ldd	r25, Y+6	; 0x06
    11c6:	00 97       	sbiw	r24, 0x00	; 0
    11c8:	61 f0       	breq	.+24     	; 0x11e2 <DIO_u8Get_PORT_value+0x5a>
    11ca:	29 c0       	rjmp	.+82     	; 0x121e <DIO_u8Get_PORT_value+0x96>
    11cc:	2d 81       	ldd	r18, Y+5	; 0x05
    11ce:	3e 81       	ldd	r19, Y+6	; 0x06
    11d0:	22 30       	cpi	r18, 0x02	; 2
    11d2:	31 05       	cpc	r19, r1
    11d4:	a1 f0       	breq	.+40     	; 0x11fe <DIO_u8Get_PORT_value+0x76>
    11d6:	8d 81       	ldd	r24, Y+5	; 0x05
    11d8:	9e 81       	ldd	r25, Y+6	; 0x06
    11da:	83 30       	cpi	r24, 0x03	; 3
    11dc:	91 05       	cpc	r25, r1
    11de:	b1 f0       	breq	.+44     	; 0x120c <DIO_u8Get_PORT_value+0x84>
    11e0:	1e c0       	rjmp	.+60     	; 0x121e <DIO_u8Get_PORT_value+0x96>
				{
				case GROUP_A:
					*Copy_u8_PORT_val=DIO_u8_PINA;
    11e2:	e9 e3       	ldi	r30, 0x39	; 57
    11e4:	f0 e0       	ldi	r31, 0x00	; 0
    11e6:	80 81       	ld	r24, Z
    11e8:	eb 81       	ldd	r30, Y+3	; 0x03
    11ea:	fc 81       	ldd	r31, Y+4	; 0x04
    11ec:	80 83       	st	Z, r24
    11ee:	17 c0       	rjmp	.+46     	; 0x121e <DIO_u8Get_PORT_value+0x96>
					break;
				case GROUP_B:
					*Copy_u8_PORT_val=DIO_u8_PINB;
    11f0:	e6 e3       	ldi	r30, 0x36	; 54
    11f2:	f0 e0       	ldi	r31, 0x00	; 0
    11f4:	80 81       	ld	r24, Z
    11f6:	eb 81       	ldd	r30, Y+3	; 0x03
    11f8:	fc 81       	ldd	r31, Y+4	; 0x04
    11fa:	80 83       	st	Z, r24
    11fc:	10 c0       	rjmp	.+32     	; 0x121e <DIO_u8Get_PORT_value+0x96>
					break;
				case GROUP_C:
					*Copy_u8_PORT_val=DIO_u8_PINC;
    11fe:	e3 e3       	ldi	r30, 0x33	; 51
    1200:	f0 e0       	ldi	r31, 0x00	; 0
    1202:	80 81       	ld	r24, Z
    1204:	eb 81       	ldd	r30, Y+3	; 0x03
    1206:	fc 81       	ldd	r31, Y+4	; 0x04
    1208:	80 83       	st	Z, r24
    120a:	09 c0       	rjmp	.+18     	; 0x121e <DIO_u8Get_PORT_value+0x96>
					break;
				case GROUP_D:
					*Copy_u8_PORT_val=DIO_u8_PIND;
    120c:	e0 e3       	ldi	r30, 0x30	; 48
    120e:	f0 e0       	ldi	r31, 0x00	; 0
    1210:	80 81       	ld	r24, Z
    1212:	eb 81       	ldd	r30, Y+3	; 0x03
    1214:	fc 81       	ldd	r31, Y+4	; 0x04
    1216:	80 83       	st	Z, r24
    1218:	02 c0       	rjmp	.+4      	; 0x121e <DIO_u8Get_PORT_value+0x96>
					break;
				}


		}else{
			loc_u8Error_State=DIO_u8PORT_ID_ERR;
    121a:	81 e0       	ldi	r24, 0x01	; 1
    121c:	89 83       	std	Y+1, r24	; 0x01
		}
		return loc_u8Error_State;
    121e:	89 81       	ldd	r24, Y+1	; 0x01
}
    1220:	26 96       	adiw	r28, 0x06	; 6
    1222:	0f b6       	in	r0, 0x3f	; 63
    1224:	f8 94       	cli
    1226:	de bf       	out	0x3e, r29	; 62
    1228:	0f be       	out	0x3f, r0	; 63
    122a:	cd bf       	out	0x3d, r28	; 61
    122c:	cf 91       	pop	r28
    122e:	df 91       	pop	r29
    1230:	08 95       	ret

00001232 <Stepper_voidInit>:
#include"stepper_intrface.h"



void Stepper_voidInit(void)
{
    1232:	df 93       	push	r29
    1234:	cf 93       	push	r28
    1236:	cd b7       	in	r28, 0x3d	; 61
    1238:	de b7       	in	r29, 0x3e	; 62
	DIO_u8Set_Pin_direction(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_BLUE,DIO_u8_OUTPUT);
    123a:	80 e0       	ldi	r24, 0x00	; 0
    123c:	60 e0       	ldi	r22, 0x00	; 0
    123e:	41 e0       	ldi	r20, 0x01	; 1
    1240:	0e 94 99 06 	call	0xd32	; 0xd32 <DIO_u8Set_Pin_direction>
	DIO_u8Set_Pin_direction(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_YELLOW,DIO_u8_OUTPUT);
    1244:	80 e0       	ldi	r24, 0x00	; 0
    1246:	62 e0       	ldi	r22, 0x02	; 2
    1248:	41 e0       	ldi	r20, 0x01	; 1
    124a:	0e 94 99 06 	call	0xd32	; 0xd32 <DIO_u8Set_Pin_direction>
	DIO_u8Set_Pin_direction(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_ORANGE,DIO_u8_OUTPUT);
    124e:	80 e0       	ldi	r24, 0x00	; 0
    1250:	63 e0       	ldi	r22, 0x03	; 3
    1252:	41 e0       	ldi	r20, 0x01	; 1
    1254:	0e 94 99 06 	call	0xd32	; 0xd32 <DIO_u8Set_Pin_direction>
	DIO_u8Set_Pin_direction(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_PINK,DIO_u8_OUTPUT);
    1258:	80 e0       	ldi	r24, 0x00	; 0
    125a:	61 e0       	ldi	r22, 0x01	; 1
    125c:	41 e0       	ldi	r20, 0x01	; 1
    125e:	0e 94 99 06 	call	0xd32	; 0xd32 <DIO_u8Set_Pin_direction>
}
    1262:	cf 91       	pop	r28
    1264:	df 91       	pop	r29
    1266:	08 95       	ret

00001268 <Stepper_voidRotate_clockwise_FullStep>:

void Stepper_voidRotate_clockwise_FullStep(void)
{
    1268:	df 93       	push	r29
    126a:	cf 93       	push	r28
    126c:	cd b7       	in	r28, 0x3d	; 61
    126e:	de b7       	in	r29, 0x3e	; 62
    1270:	e8 97       	sbiw	r28, 0x38	; 56
    1272:	0f b6       	in	r0, 0x3f	; 63
    1274:	f8 94       	cli
    1276:	de bf       	out	0x3e, r29	; 62
    1278:	0f be       	out	0x3f, r0	; 63
    127a:	cd bf       	out	0x3d, r28	; 61

	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_BLUE,DIO_u8_HIGH);
    127c:	80 e0       	ldi	r24, 0x00	; 0
    127e:	60 e0       	ldi	r22, 0x00	; 0
    1280:	41 e0       	ldi	r20, 0x01	; 1
    1282:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_PINK,DIO_u8_LOW);
    1286:	80 e0       	ldi	r24, 0x00	; 0
    1288:	61 e0       	ldi	r22, 0x01	; 1
    128a:	40 e0       	ldi	r20, 0x00	; 0
    128c:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_YELLOW,DIO_u8_LOW);
    1290:	80 e0       	ldi	r24, 0x00	; 0
    1292:	62 e0       	ldi	r22, 0x02	; 2
    1294:	40 e0       	ldi	r20, 0x00	; 0
    1296:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_ORANGE,DIO_u8_LOW);
    129a:	80 e0       	ldi	r24, 0x00	; 0
    129c:	63 e0       	ldi	r22, 0x03	; 3
    129e:	40 e0       	ldi	r20, 0x00	; 0
    12a0:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
    12a4:	80 e0       	ldi	r24, 0x00	; 0
    12a6:	90 e0       	ldi	r25, 0x00	; 0
    12a8:	a0 e0       	ldi	r26, 0x00	; 0
    12aa:	b0 e4       	ldi	r27, 0x40	; 64
    12ac:	8d ab       	std	Y+53, r24	; 0x35
    12ae:	9e ab       	std	Y+54, r25	; 0x36
    12b0:	af ab       	std	Y+55, r26	; 0x37
    12b2:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    12b4:	6d a9       	ldd	r22, Y+53	; 0x35
    12b6:	7e a9       	ldd	r23, Y+54	; 0x36
    12b8:	8f a9       	ldd	r24, Y+55	; 0x37
    12ba:	98 ad       	ldd	r25, Y+56	; 0x38
    12bc:	20 e0       	ldi	r18, 0x00	; 0
    12be:	30 e0       	ldi	r19, 0x00	; 0
    12c0:	4a ef       	ldi	r20, 0xFA	; 250
    12c2:	54 e4       	ldi	r21, 0x44	; 68
    12c4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    12c8:	dc 01       	movw	r26, r24
    12ca:	cb 01       	movw	r24, r22
    12cc:	89 ab       	std	Y+49, r24	; 0x31
    12ce:	9a ab       	std	Y+50, r25	; 0x32
    12d0:	ab ab       	std	Y+51, r26	; 0x33
    12d2:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    12d4:	69 a9       	ldd	r22, Y+49	; 0x31
    12d6:	7a a9       	ldd	r23, Y+50	; 0x32
    12d8:	8b a9       	ldd	r24, Y+51	; 0x33
    12da:	9c a9       	ldd	r25, Y+52	; 0x34
    12dc:	20 e0       	ldi	r18, 0x00	; 0
    12de:	30 e0       	ldi	r19, 0x00	; 0
    12e0:	40 e8       	ldi	r20, 0x80	; 128
    12e2:	5f e3       	ldi	r21, 0x3F	; 63
    12e4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    12e8:	88 23       	and	r24, r24
    12ea:	2c f4       	brge	.+10     	; 0x12f6 <Stepper_voidRotate_clockwise_FullStep+0x8e>
		__ticks = 1;
    12ec:	81 e0       	ldi	r24, 0x01	; 1
    12ee:	90 e0       	ldi	r25, 0x00	; 0
    12f0:	98 ab       	std	Y+48, r25	; 0x30
    12f2:	8f a7       	std	Y+47, r24	; 0x2f
    12f4:	3f c0       	rjmp	.+126    	; 0x1374 <Stepper_voidRotate_clockwise_FullStep+0x10c>
	else if (__tmp > 65535)
    12f6:	69 a9       	ldd	r22, Y+49	; 0x31
    12f8:	7a a9       	ldd	r23, Y+50	; 0x32
    12fa:	8b a9       	ldd	r24, Y+51	; 0x33
    12fc:	9c a9       	ldd	r25, Y+52	; 0x34
    12fe:	20 e0       	ldi	r18, 0x00	; 0
    1300:	3f ef       	ldi	r19, 0xFF	; 255
    1302:	4f e7       	ldi	r20, 0x7F	; 127
    1304:	57 e4       	ldi	r21, 0x47	; 71
    1306:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    130a:	18 16       	cp	r1, r24
    130c:	4c f5       	brge	.+82     	; 0x1360 <Stepper_voidRotate_clockwise_FullStep+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    130e:	6d a9       	ldd	r22, Y+53	; 0x35
    1310:	7e a9       	ldd	r23, Y+54	; 0x36
    1312:	8f a9       	ldd	r24, Y+55	; 0x37
    1314:	98 ad       	ldd	r25, Y+56	; 0x38
    1316:	20 e0       	ldi	r18, 0x00	; 0
    1318:	30 e0       	ldi	r19, 0x00	; 0
    131a:	40 e2       	ldi	r20, 0x20	; 32
    131c:	51 e4       	ldi	r21, 0x41	; 65
    131e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1322:	dc 01       	movw	r26, r24
    1324:	cb 01       	movw	r24, r22
    1326:	bc 01       	movw	r22, r24
    1328:	cd 01       	movw	r24, r26
    132a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    132e:	dc 01       	movw	r26, r24
    1330:	cb 01       	movw	r24, r22
    1332:	98 ab       	std	Y+48, r25	; 0x30
    1334:	8f a7       	std	Y+47, r24	; 0x2f
    1336:	0f c0       	rjmp	.+30     	; 0x1356 <Stepper_voidRotate_clockwise_FullStep+0xee>
    1338:	88 ec       	ldi	r24, 0xC8	; 200
    133a:	90 e0       	ldi	r25, 0x00	; 0
    133c:	9e a7       	std	Y+46, r25	; 0x2e
    133e:	8d a7       	std	Y+45, r24	; 0x2d
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1340:	8d a5       	ldd	r24, Y+45	; 0x2d
    1342:	9e a5       	ldd	r25, Y+46	; 0x2e
    1344:	01 97       	sbiw	r24, 0x01	; 1
    1346:	f1 f7       	brne	.-4      	; 0x1344 <Stepper_voidRotate_clockwise_FullStep+0xdc>
    1348:	9e a7       	std	Y+46, r25	; 0x2e
    134a:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    134c:	8f a5       	ldd	r24, Y+47	; 0x2f
    134e:	98 a9       	ldd	r25, Y+48	; 0x30
    1350:	01 97       	sbiw	r24, 0x01	; 1
    1352:	98 ab       	std	Y+48, r25	; 0x30
    1354:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1356:	8f a5       	ldd	r24, Y+47	; 0x2f
    1358:	98 a9       	ldd	r25, Y+48	; 0x30
    135a:	00 97       	sbiw	r24, 0x00	; 0
    135c:	69 f7       	brne	.-38     	; 0x1338 <Stepper_voidRotate_clockwise_FullStep+0xd0>
    135e:	14 c0       	rjmp	.+40     	; 0x1388 <Stepper_voidRotate_clockwise_FullStep+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1360:	69 a9       	ldd	r22, Y+49	; 0x31
    1362:	7a a9       	ldd	r23, Y+50	; 0x32
    1364:	8b a9       	ldd	r24, Y+51	; 0x33
    1366:	9c a9       	ldd	r25, Y+52	; 0x34
    1368:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    136c:	dc 01       	movw	r26, r24
    136e:	cb 01       	movw	r24, r22
    1370:	98 ab       	std	Y+48, r25	; 0x30
    1372:	8f a7       	std	Y+47, r24	; 0x2f
    1374:	8f a5       	ldd	r24, Y+47	; 0x2f
    1376:	98 a9       	ldd	r25, Y+48	; 0x30
    1378:	9c a7       	std	Y+44, r25	; 0x2c
    137a:	8b a7       	std	Y+43, r24	; 0x2b
    137c:	8b a5       	ldd	r24, Y+43	; 0x2b
    137e:	9c a5       	ldd	r25, Y+44	; 0x2c
    1380:	01 97       	sbiw	r24, 0x01	; 1
    1382:	f1 f7       	brne	.-4      	; 0x1380 <Stepper_voidRotate_clockwise_FullStep+0x118>
    1384:	9c a7       	std	Y+44, r25	; 0x2c
    1386:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(2);
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_BLUE,DIO_u8_LOW);
    1388:	80 e0       	ldi	r24, 0x00	; 0
    138a:	60 e0       	ldi	r22, 0x00	; 0
    138c:	40 e0       	ldi	r20, 0x00	; 0
    138e:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_PINK,DIO_u8_HIGH);
    1392:	80 e0       	ldi	r24, 0x00	; 0
    1394:	61 e0       	ldi	r22, 0x01	; 1
    1396:	41 e0       	ldi	r20, 0x01	; 1
    1398:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_YELLOW,DIO_u8_LOW);
    139c:	80 e0       	ldi	r24, 0x00	; 0
    139e:	62 e0       	ldi	r22, 0x02	; 2
    13a0:	40 e0       	ldi	r20, 0x00	; 0
    13a2:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_ORANGE,DIO_u8_LOW);
    13a6:	80 e0       	ldi	r24, 0x00	; 0
    13a8:	63 e0       	ldi	r22, 0x03	; 3
    13aa:	40 e0       	ldi	r20, 0x00	; 0
    13ac:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
    13b0:	80 e0       	ldi	r24, 0x00	; 0
    13b2:	90 e0       	ldi	r25, 0x00	; 0
    13b4:	a0 e0       	ldi	r26, 0x00	; 0
    13b6:	b0 e4       	ldi	r27, 0x40	; 64
    13b8:	8f a3       	std	Y+39, r24	; 0x27
    13ba:	98 a7       	std	Y+40, r25	; 0x28
    13bc:	a9 a7       	std	Y+41, r26	; 0x29
    13be:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    13c0:	6f a1       	ldd	r22, Y+39	; 0x27
    13c2:	78 a5       	ldd	r23, Y+40	; 0x28
    13c4:	89 a5       	ldd	r24, Y+41	; 0x29
    13c6:	9a a5       	ldd	r25, Y+42	; 0x2a
    13c8:	20 e0       	ldi	r18, 0x00	; 0
    13ca:	30 e0       	ldi	r19, 0x00	; 0
    13cc:	4a ef       	ldi	r20, 0xFA	; 250
    13ce:	54 e4       	ldi	r21, 0x44	; 68
    13d0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    13d4:	dc 01       	movw	r26, r24
    13d6:	cb 01       	movw	r24, r22
    13d8:	8b a3       	std	Y+35, r24	; 0x23
    13da:	9c a3       	std	Y+36, r25	; 0x24
    13dc:	ad a3       	std	Y+37, r26	; 0x25
    13de:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    13e0:	6b a1       	ldd	r22, Y+35	; 0x23
    13e2:	7c a1       	ldd	r23, Y+36	; 0x24
    13e4:	8d a1       	ldd	r24, Y+37	; 0x25
    13e6:	9e a1       	ldd	r25, Y+38	; 0x26
    13e8:	20 e0       	ldi	r18, 0x00	; 0
    13ea:	30 e0       	ldi	r19, 0x00	; 0
    13ec:	40 e8       	ldi	r20, 0x80	; 128
    13ee:	5f e3       	ldi	r21, 0x3F	; 63
    13f0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    13f4:	88 23       	and	r24, r24
    13f6:	2c f4       	brge	.+10     	; 0x1402 <Stepper_voidRotate_clockwise_FullStep+0x19a>
		__ticks = 1;
    13f8:	81 e0       	ldi	r24, 0x01	; 1
    13fa:	90 e0       	ldi	r25, 0x00	; 0
    13fc:	9a a3       	std	Y+34, r25	; 0x22
    13fe:	89 a3       	std	Y+33, r24	; 0x21
    1400:	3f c0       	rjmp	.+126    	; 0x1480 <Stepper_voidRotate_clockwise_FullStep+0x218>
	else if (__tmp > 65535)
    1402:	6b a1       	ldd	r22, Y+35	; 0x23
    1404:	7c a1       	ldd	r23, Y+36	; 0x24
    1406:	8d a1       	ldd	r24, Y+37	; 0x25
    1408:	9e a1       	ldd	r25, Y+38	; 0x26
    140a:	20 e0       	ldi	r18, 0x00	; 0
    140c:	3f ef       	ldi	r19, 0xFF	; 255
    140e:	4f e7       	ldi	r20, 0x7F	; 127
    1410:	57 e4       	ldi	r21, 0x47	; 71
    1412:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1416:	18 16       	cp	r1, r24
    1418:	4c f5       	brge	.+82     	; 0x146c <Stepper_voidRotate_clockwise_FullStep+0x204>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    141a:	6f a1       	ldd	r22, Y+39	; 0x27
    141c:	78 a5       	ldd	r23, Y+40	; 0x28
    141e:	89 a5       	ldd	r24, Y+41	; 0x29
    1420:	9a a5       	ldd	r25, Y+42	; 0x2a
    1422:	20 e0       	ldi	r18, 0x00	; 0
    1424:	30 e0       	ldi	r19, 0x00	; 0
    1426:	40 e2       	ldi	r20, 0x20	; 32
    1428:	51 e4       	ldi	r21, 0x41	; 65
    142a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    142e:	dc 01       	movw	r26, r24
    1430:	cb 01       	movw	r24, r22
    1432:	bc 01       	movw	r22, r24
    1434:	cd 01       	movw	r24, r26
    1436:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    143a:	dc 01       	movw	r26, r24
    143c:	cb 01       	movw	r24, r22
    143e:	9a a3       	std	Y+34, r25	; 0x22
    1440:	89 a3       	std	Y+33, r24	; 0x21
    1442:	0f c0       	rjmp	.+30     	; 0x1462 <Stepper_voidRotate_clockwise_FullStep+0x1fa>
    1444:	88 ec       	ldi	r24, 0xC8	; 200
    1446:	90 e0       	ldi	r25, 0x00	; 0
    1448:	98 a3       	std	Y+32, r25	; 0x20
    144a:	8f 8f       	std	Y+31, r24	; 0x1f
    144c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    144e:	98 a1       	ldd	r25, Y+32	; 0x20
    1450:	01 97       	sbiw	r24, 0x01	; 1
    1452:	f1 f7       	brne	.-4      	; 0x1450 <Stepper_voidRotate_clockwise_FullStep+0x1e8>
    1454:	98 a3       	std	Y+32, r25	; 0x20
    1456:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1458:	89 a1       	ldd	r24, Y+33	; 0x21
    145a:	9a a1       	ldd	r25, Y+34	; 0x22
    145c:	01 97       	sbiw	r24, 0x01	; 1
    145e:	9a a3       	std	Y+34, r25	; 0x22
    1460:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1462:	89 a1       	ldd	r24, Y+33	; 0x21
    1464:	9a a1       	ldd	r25, Y+34	; 0x22
    1466:	00 97       	sbiw	r24, 0x00	; 0
    1468:	69 f7       	brne	.-38     	; 0x1444 <Stepper_voidRotate_clockwise_FullStep+0x1dc>
    146a:	14 c0       	rjmp	.+40     	; 0x1494 <Stepper_voidRotate_clockwise_FullStep+0x22c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    146c:	6b a1       	ldd	r22, Y+35	; 0x23
    146e:	7c a1       	ldd	r23, Y+36	; 0x24
    1470:	8d a1       	ldd	r24, Y+37	; 0x25
    1472:	9e a1       	ldd	r25, Y+38	; 0x26
    1474:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1478:	dc 01       	movw	r26, r24
    147a:	cb 01       	movw	r24, r22
    147c:	9a a3       	std	Y+34, r25	; 0x22
    147e:	89 a3       	std	Y+33, r24	; 0x21
    1480:	89 a1       	ldd	r24, Y+33	; 0x21
    1482:	9a a1       	ldd	r25, Y+34	; 0x22
    1484:	9e 8f       	std	Y+30, r25	; 0x1e
    1486:	8d 8f       	std	Y+29, r24	; 0x1d
    1488:	8d 8d       	ldd	r24, Y+29	; 0x1d
    148a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    148c:	01 97       	sbiw	r24, 0x01	; 1
    148e:	f1 f7       	brne	.-4      	; 0x148c <Stepper_voidRotate_clockwise_FullStep+0x224>
    1490:	9e 8f       	std	Y+30, r25	; 0x1e
    1492:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(2);
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_BLUE,DIO_u8_LOW);
    1494:	80 e0       	ldi	r24, 0x00	; 0
    1496:	60 e0       	ldi	r22, 0x00	; 0
    1498:	40 e0       	ldi	r20, 0x00	; 0
    149a:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_PINK,DIO_u8_LOW);
    149e:	80 e0       	ldi	r24, 0x00	; 0
    14a0:	61 e0       	ldi	r22, 0x01	; 1
    14a2:	40 e0       	ldi	r20, 0x00	; 0
    14a4:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_YELLOW,DIO_u8_HIGH);
    14a8:	80 e0       	ldi	r24, 0x00	; 0
    14aa:	62 e0       	ldi	r22, 0x02	; 2
    14ac:	41 e0       	ldi	r20, 0x01	; 1
    14ae:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_ORANGE,DIO_u8_LOW);
    14b2:	80 e0       	ldi	r24, 0x00	; 0
    14b4:	63 e0       	ldi	r22, 0x03	; 3
    14b6:	40 e0       	ldi	r20, 0x00	; 0
    14b8:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
    14bc:	80 e0       	ldi	r24, 0x00	; 0
    14be:	90 e0       	ldi	r25, 0x00	; 0
    14c0:	a0 e0       	ldi	r26, 0x00	; 0
    14c2:	b0 e4       	ldi	r27, 0x40	; 64
    14c4:	89 8f       	std	Y+25, r24	; 0x19
    14c6:	9a 8f       	std	Y+26, r25	; 0x1a
    14c8:	ab 8f       	std	Y+27, r26	; 0x1b
    14ca:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    14cc:	69 8d       	ldd	r22, Y+25	; 0x19
    14ce:	7a 8d       	ldd	r23, Y+26	; 0x1a
    14d0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    14d2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    14d4:	20 e0       	ldi	r18, 0x00	; 0
    14d6:	30 e0       	ldi	r19, 0x00	; 0
    14d8:	4a ef       	ldi	r20, 0xFA	; 250
    14da:	54 e4       	ldi	r21, 0x44	; 68
    14dc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    14e0:	dc 01       	movw	r26, r24
    14e2:	cb 01       	movw	r24, r22
    14e4:	8d 8b       	std	Y+21, r24	; 0x15
    14e6:	9e 8b       	std	Y+22, r25	; 0x16
    14e8:	af 8b       	std	Y+23, r26	; 0x17
    14ea:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    14ec:	6d 89       	ldd	r22, Y+21	; 0x15
    14ee:	7e 89       	ldd	r23, Y+22	; 0x16
    14f0:	8f 89       	ldd	r24, Y+23	; 0x17
    14f2:	98 8d       	ldd	r25, Y+24	; 0x18
    14f4:	20 e0       	ldi	r18, 0x00	; 0
    14f6:	30 e0       	ldi	r19, 0x00	; 0
    14f8:	40 e8       	ldi	r20, 0x80	; 128
    14fa:	5f e3       	ldi	r21, 0x3F	; 63
    14fc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1500:	88 23       	and	r24, r24
    1502:	2c f4       	brge	.+10     	; 0x150e <Stepper_voidRotate_clockwise_FullStep+0x2a6>
		__ticks = 1;
    1504:	81 e0       	ldi	r24, 0x01	; 1
    1506:	90 e0       	ldi	r25, 0x00	; 0
    1508:	9c 8b       	std	Y+20, r25	; 0x14
    150a:	8b 8b       	std	Y+19, r24	; 0x13
    150c:	3f c0       	rjmp	.+126    	; 0x158c <Stepper_voidRotate_clockwise_FullStep+0x324>
	else if (__tmp > 65535)
    150e:	6d 89       	ldd	r22, Y+21	; 0x15
    1510:	7e 89       	ldd	r23, Y+22	; 0x16
    1512:	8f 89       	ldd	r24, Y+23	; 0x17
    1514:	98 8d       	ldd	r25, Y+24	; 0x18
    1516:	20 e0       	ldi	r18, 0x00	; 0
    1518:	3f ef       	ldi	r19, 0xFF	; 255
    151a:	4f e7       	ldi	r20, 0x7F	; 127
    151c:	57 e4       	ldi	r21, 0x47	; 71
    151e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1522:	18 16       	cp	r1, r24
    1524:	4c f5       	brge	.+82     	; 0x1578 <Stepper_voidRotate_clockwise_FullStep+0x310>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1526:	69 8d       	ldd	r22, Y+25	; 0x19
    1528:	7a 8d       	ldd	r23, Y+26	; 0x1a
    152a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    152c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    152e:	20 e0       	ldi	r18, 0x00	; 0
    1530:	30 e0       	ldi	r19, 0x00	; 0
    1532:	40 e2       	ldi	r20, 0x20	; 32
    1534:	51 e4       	ldi	r21, 0x41	; 65
    1536:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    153a:	dc 01       	movw	r26, r24
    153c:	cb 01       	movw	r24, r22
    153e:	bc 01       	movw	r22, r24
    1540:	cd 01       	movw	r24, r26
    1542:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1546:	dc 01       	movw	r26, r24
    1548:	cb 01       	movw	r24, r22
    154a:	9c 8b       	std	Y+20, r25	; 0x14
    154c:	8b 8b       	std	Y+19, r24	; 0x13
    154e:	0f c0       	rjmp	.+30     	; 0x156e <Stepper_voidRotate_clockwise_FullStep+0x306>
    1550:	88 ec       	ldi	r24, 0xC8	; 200
    1552:	90 e0       	ldi	r25, 0x00	; 0
    1554:	9a 8b       	std	Y+18, r25	; 0x12
    1556:	89 8b       	std	Y+17, r24	; 0x11
    1558:	89 89       	ldd	r24, Y+17	; 0x11
    155a:	9a 89       	ldd	r25, Y+18	; 0x12
    155c:	01 97       	sbiw	r24, 0x01	; 1
    155e:	f1 f7       	brne	.-4      	; 0x155c <Stepper_voidRotate_clockwise_FullStep+0x2f4>
    1560:	9a 8b       	std	Y+18, r25	; 0x12
    1562:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1564:	8b 89       	ldd	r24, Y+19	; 0x13
    1566:	9c 89       	ldd	r25, Y+20	; 0x14
    1568:	01 97       	sbiw	r24, 0x01	; 1
    156a:	9c 8b       	std	Y+20, r25	; 0x14
    156c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    156e:	8b 89       	ldd	r24, Y+19	; 0x13
    1570:	9c 89       	ldd	r25, Y+20	; 0x14
    1572:	00 97       	sbiw	r24, 0x00	; 0
    1574:	69 f7       	brne	.-38     	; 0x1550 <Stepper_voidRotate_clockwise_FullStep+0x2e8>
    1576:	14 c0       	rjmp	.+40     	; 0x15a0 <Stepper_voidRotate_clockwise_FullStep+0x338>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1578:	6d 89       	ldd	r22, Y+21	; 0x15
    157a:	7e 89       	ldd	r23, Y+22	; 0x16
    157c:	8f 89       	ldd	r24, Y+23	; 0x17
    157e:	98 8d       	ldd	r25, Y+24	; 0x18
    1580:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1584:	dc 01       	movw	r26, r24
    1586:	cb 01       	movw	r24, r22
    1588:	9c 8b       	std	Y+20, r25	; 0x14
    158a:	8b 8b       	std	Y+19, r24	; 0x13
    158c:	8b 89       	ldd	r24, Y+19	; 0x13
    158e:	9c 89       	ldd	r25, Y+20	; 0x14
    1590:	98 8b       	std	Y+16, r25	; 0x10
    1592:	8f 87       	std	Y+15, r24	; 0x0f
    1594:	8f 85       	ldd	r24, Y+15	; 0x0f
    1596:	98 89       	ldd	r25, Y+16	; 0x10
    1598:	01 97       	sbiw	r24, 0x01	; 1
    159a:	f1 f7       	brne	.-4      	; 0x1598 <Stepper_voidRotate_clockwise_FullStep+0x330>
    159c:	98 8b       	std	Y+16, r25	; 0x10
    159e:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(2);
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_BLUE,DIO_u8_LOW);
    15a0:	80 e0       	ldi	r24, 0x00	; 0
    15a2:	60 e0       	ldi	r22, 0x00	; 0
    15a4:	40 e0       	ldi	r20, 0x00	; 0
    15a6:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_PINK,DIO_u8_LOW);
    15aa:	80 e0       	ldi	r24, 0x00	; 0
    15ac:	61 e0       	ldi	r22, 0x01	; 1
    15ae:	40 e0       	ldi	r20, 0x00	; 0
    15b0:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_YELLOW,DIO_u8_LOW);
    15b4:	80 e0       	ldi	r24, 0x00	; 0
    15b6:	62 e0       	ldi	r22, 0x02	; 2
    15b8:	40 e0       	ldi	r20, 0x00	; 0
    15ba:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_ORANGE,DIO_u8_HIGH);
    15be:	80 e0       	ldi	r24, 0x00	; 0
    15c0:	63 e0       	ldi	r22, 0x03	; 3
    15c2:	41 e0       	ldi	r20, 0x01	; 1
    15c4:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
    15c8:	80 e0       	ldi	r24, 0x00	; 0
    15ca:	90 e0       	ldi	r25, 0x00	; 0
    15cc:	a0 e0       	ldi	r26, 0x00	; 0
    15ce:	b0 e4       	ldi	r27, 0x40	; 64
    15d0:	8b 87       	std	Y+11, r24	; 0x0b
    15d2:	9c 87       	std	Y+12, r25	; 0x0c
    15d4:	ad 87       	std	Y+13, r26	; 0x0d
    15d6:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    15d8:	6b 85       	ldd	r22, Y+11	; 0x0b
    15da:	7c 85       	ldd	r23, Y+12	; 0x0c
    15dc:	8d 85       	ldd	r24, Y+13	; 0x0d
    15de:	9e 85       	ldd	r25, Y+14	; 0x0e
    15e0:	20 e0       	ldi	r18, 0x00	; 0
    15e2:	30 e0       	ldi	r19, 0x00	; 0
    15e4:	4a ef       	ldi	r20, 0xFA	; 250
    15e6:	54 e4       	ldi	r21, 0x44	; 68
    15e8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    15ec:	dc 01       	movw	r26, r24
    15ee:	cb 01       	movw	r24, r22
    15f0:	8f 83       	std	Y+7, r24	; 0x07
    15f2:	98 87       	std	Y+8, r25	; 0x08
    15f4:	a9 87       	std	Y+9, r26	; 0x09
    15f6:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    15f8:	6f 81       	ldd	r22, Y+7	; 0x07
    15fa:	78 85       	ldd	r23, Y+8	; 0x08
    15fc:	89 85       	ldd	r24, Y+9	; 0x09
    15fe:	9a 85       	ldd	r25, Y+10	; 0x0a
    1600:	20 e0       	ldi	r18, 0x00	; 0
    1602:	30 e0       	ldi	r19, 0x00	; 0
    1604:	40 e8       	ldi	r20, 0x80	; 128
    1606:	5f e3       	ldi	r21, 0x3F	; 63
    1608:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    160c:	88 23       	and	r24, r24
    160e:	2c f4       	brge	.+10     	; 0x161a <Stepper_voidRotate_clockwise_FullStep+0x3b2>
		__ticks = 1;
    1610:	81 e0       	ldi	r24, 0x01	; 1
    1612:	90 e0       	ldi	r25, 0x00	; 0
    1614:	9e 83       	std	Y+6, r25	; 0x06
    1616:	8d 83       	std	Y+5, r24	; 0x05
    1618:	3f c0       	rjmp	.+126    	; 0x1698 <Stepper_voidRotate_clockwise_FullStep+0x430>
	else if (__tmp > 65535)
    161a:	6f 81       	ldd	r22, Y+7	; 0x07
    161c:	78 85       	ldd	r23, Y+8	; 0x08
    161e:	89 85       	ldd	r24, Y+9	; 0x09
    1620:	9a 85       	ldd	r25, Y+10	; 0x0a
    1622:	20 e0       	ldi	r18, 0x00	; 0
    1624:	3f ef       	ldi	r19, 0xFF	; 255
    1626:	4f e7       	ldi	r20, 0x7F	; 127
    1628:	57 e4       	ldi	r21, 0x47	; 71
    162a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    162e:	18 16       	cp	r1, r24
    1630:	4c f5       	brge	.+82     	; 0x1684 <Stepper_voidRotate_clockwise_FullStep+0x41c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1632:	6b 85       	ldd	r22, Y+11	; 0x0b
    1634:	7c 85       	ldd	r23, Y+12	; 0x0c
    1636:	8d 85       	ldd	r24, Y+13	; 0x0d
    1638:	9e 85       	ldd	r25, Y+14	; 0x0e
    163a:	20 e0       	ldi	r18, 0x00	; 0
    163c:	30 e0       	ldi	r19, 0x00	; 0
    163e:	40 e2       	ldi	r20, 0x20	; 32
    1640:	51 e4       	ldi	r21, 0x41	; 65
    1642:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1646:	dc 01       	movw	r26, r24
    1648:	cb 01       	movw	r24, r22
    164a:	bc 01       	movw	r22, r24
    164c:	cd 01       	movw	r24, r26
    164e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1652:	dc 01       	movw	r26, r24
    1654:	cb 01       	movw	r24, r22
    1656:	9e 83       	std	Y+6, r25	; 0x06
    1658:	8d 83       	std	Y+5, r24	; 0x05
    165a:	0f c0       	rjmp	.+30     	; 0x167a <Stepper_voidRotate_clockwise_FullStep+0x412>
    165c:	88 ec       	ldi	r24, 0xC8	; 200
    165e:	90 e0       	ldi	r25, 0x00	; 0
    1660:	9c 83       	std	Y+4, r25	; 0x04
    1662:	8b 83       	std	Y+3, r24	; 0x03
    1664:	8b 81       	ldd	r24, Y+3	; 0x03
    1666:	9c 81       	ldd	r25, Y+4	; 0x04
    1668:	01 97       	sbiw	r24, 0x01	; 1
    166a:	f1 f7       	brne	.-4      	; 0x1668 <Stepper_voidRotate_clockwise_FullStep+0x400>
    166c:	9c 83       	std	Y+4, r25	; 0x04
    166e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1670:	8d 81       	ldd	r24, Y+5	; 0x05
    1672:	9e 81       	ldd	r25, Y+6	; 0x06
    1674:	01 97       	sbiw	r24, 0x01	; 1
    1676:	9e 83       	std	Y+6, r25	; 0x06
    1678:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    167a:	8d 81       	ldd	r24, Y+5	; 0x05
    167c:	9e 81       	ldd	r25, Y+6	; 0x06
    167e:	00 97       	sbiw	r24, 0x00	; 0
    1680:	69 f7       	brne	.-38     	; 0x165c <Stepper_voidRotate_clockwise_FullStep+0x3f4>
    1682:	14 c0       	rjmp	.+40     	; 0x16ac <Stepper_voidRotate_clockwise_FullStep+0x444>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1684:	6f 81       	ldd	r22, Y+7	; 0x07
    1686:	78 85       	ldd	r23, Y+8	; 0x08
    1688:	89 85       	ldd	r24, Y+9	; 0x09
    168a:	9a 85       	ldd	r25, Y+10	; 0x0a
    168c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1690:	dc 01       	movw	r26, r24
    1692:	cb 01       	movw	r24, r22
    1694:	9e 83       	std	Y+6, r25	; 0x06
    1696:	8d 83       	std	Y+5, r24	; 0x05
    1698:	8d 81       	ldd	r24, Y+5	; 0x05
    169a:	9e 81       	ldd	r25, Y+6	; 0x06
    169c:	9a 83       	std	Y+2, r25	; 0x02
    169e:	89 83       	std	Y+1, r24	; 0x01
    16a0:	89 81       	ldd	r24, Y+1	; 0x01
    16a2:	9a 81       	ldd	r25, Y+2	; 0x02
    16a4:	01 97       	sbiw	r24, 0x01	; 1
    16a6:	f1 f7       	brne	.-4      	; 0x16a4 <Stepper_voidRotate_clockwise_FullStep+0x43c>
    16a8:	9a 83       	std	Y+2, r25	; 0x02
    16aa:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);

}
    16ac:	e8 96       	adiw	r28, 0x38	; 56
    16ae:	0f b6       	in	r0, 0x3f	; 63
    16b0:	f8 94       	cli
    16b2:	de bf       	out	0x3e, r29	; 62
    16b4:	0f be       	out	0x3f, r0	; 63
    16b6:	cd bf       	out	0x3d, r28	; 61
    16b8:	cf 91       	pop	r28
    16ba:	df 91       	pop	r29
    16bc:	08 95       	ret

000016be <Stepper_voidRotate_Anticlockwise_FullStep>:

void Stepper_voidRotate_Anticlockwise_FullStep(void)
{
    16be:	df 93       	push	r29
    16c0:	cf 93       	push	r28
    16c2:	cd b7       	in	r28, 0x3d	; 61
    16c4:	de b7       	in	r29, 0x3e	; 62
    16c6:	e8 97       	sbiw	r28, 0x38	; 56
    16c8:	0f b6       	in	r0, 0x3f	; 63
    16ca:	f8 94       	cli
    16cc:	de bf       	out	0x3e, r29	; 62
    16ce:	0f be       	out	0x3f, r0	; 63
    16d0:	cd bf       	out	0x3d, r28	; 61

	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_BLUE,DIO_u8_LOW);
    16d2:	80 e0       	ldi	r24, 0x00	; 0
    16d4:	60 e0       	ldi	r22, 0x00	; 0
    16d6:	40 e0       	ldi	r20, 0x00	; 0
    16d8:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_PINK,DIO_u8_LOW);
    16dc:	80 e0       	ldi	r24, 0x00	; 0
    16de:	61 e0       	ldi	r22, 0x01	; 1
    16e0:	40 e0       	ldi	r20, 0x00	; 0
    16e2:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_YELLOW,DIO_u8_LOW);
    16e6:	80 e0       	ldi	r24, 0x00	; 0
    16e8:	62 e0       	ldi	r22, 0x02	; 2
    16ea:	40 e0       	ldi	r20, 0x00	; 0
    16ec:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_ORANGE,DIO_u8_HIGH);
    16f0:	80 e0       	ldi	r24, 0x00	; 0
    16f2:	63 e0       	ldi	r22, 0x03	; 3
    16f4:	41 e0       	ldi	r20, 0x01	; 1
    16f6:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
    16fa:	80 e0       	ldi	r24, 0x00	; 0
    16fc:	90 e0       	ldi	r25, 0x00	; 0
    16fe:	a0 e0       	ldi	r26, 0x00	; 0
    1700:	b0 e4       	ldi	r27, 0x40	; 64
    1702:	8d ab       	std	Y+53, r24	; 0x35
    1704:	9e ab       	std	Y+54, r25	; 0x36
    1706:	af ab       	std	Y+55, r26	; 0x37
    1708:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    170a:	6d a9       	ldd	r22, Y+53	; 0x35
    170c:	7e a9       	ldd	r23, Y+54	; 0x36
    170e:	8f a9       	ldd	r24, Y+55	; 0x37
    1710:	98 ad       	ldd	r25, Y+56	; 0x38
    1712:	20 e0       	ldi	r18, 0x00	; 0
    1714:	30 e0       	ldi	r19, 0x00	; 0
    1716:	4a ef       	ldi	r20, 0xFA	; 250
    1718:	54 e4       	ldi	r21, 0x44	; 68
    171a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    171e:	dc 01       	movw	r26, r24
    1720:	cb 01       	movw	r24, r22
    1722:	89 ab       	std	Y+49, r24	; 0x31
    1724:	9a ab       	std	Y+50, r25	; 0x32
    1726:	ab ab       	std	Y+51, r26	; 0x33
    1728:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    172a:	69 a9       	ldd	r22, Y+49	; 0x31
    172c:	7a a9       	ldd	r23, Y+50	; 0x32
    172e:	8b a9       	ldd	r24, Y+51	; 0x33
    1730:	9c a9       	ldd	r25, Y+52	; 0x34
    1732:	20 e0       	ldi	r18, 0x00	; 0
    1734:	30 e0       	ldi	r19, 0x00	; 0
    1736:	40 e8       	ldi	r20, 0x80	; 128
    1738:	5f e3       	ldi	r21, 0x3F	; 63
    173a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    173e:	88 23       	and	r24, r24
    1740:	2c f4       	brge	.+10     	; 0x174c <Stepper_voidRotate_Anticlockwise_FullStep+0x8e>
		__ticks = 1;
    1742:	81 e0       	ldi	r24, 0x01	; 1
    1744:	90 e0       	ldi	r25, 0x00	; 0
    1746:	98 ab       	std	Y+48, r25	; 0x30
    1748:	8f a7       	std	Y+47, r24	; 0x2f
    174a:	3f c0       	rjmp	.+126    	; 0x17ca <Stepper_voidRotate_Anticlockwise_FullStep+0x10c>
	else if (__tmp > 65535)
    174c:	69 a9       	ldd	r22, Y+49	; 0x31
    174e:	7a a9       	ldd	r23, Y+50	; 0x32
    1750:	8b a9       	ldd	r24, Y+51	; 0x33
    1752:	9c a9       	ldd	r25, Y+52	; 0x34
    1754:	20 e0       	ldi	r18, 0x00	; 0
    1756:	3f ef       	ldi	r19, 0xFF	; 255
    1758:	4f e7       	ldi	r20, 0x7F	; 127
    175a:	57 e4       	ldi	r21, 0x47	; 71
    175c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1760:	18 16       	cp	r1, r24
    1762:	4c f5       	brge	.+82     	; 0x17b6 <Stepper_voidRotate_Anticlockwise_FullStep+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1764:	6d a9       	ldd	r22, Y+53	; 0x35
    1766:	7e a9       	ldd	r23, Y+54	; 0x36
    1768:	8f a9       	ldd	r24, Y+55	; 0x37
    176a:	98 ad       	ldd	r25, Y+56	; 0x38
    176c:	20 e0       	ldi	r18, 0x00	; 0
    176e:	30 e0       	ldi	r19, 0x00	; 0
    1770:	40 e2       	ldi	r20, 0x20	; 32
    1772:	51 e4       	ldi	r21, 0x41	; 65
    1774:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1778:	dc 01       	movw	r26, r24
    177a:	cb 01       	movw	r24, r22
    177c:	bc 01       	movw	r22, r24
    177e:	cd 01       	movw	r24, r26
    1780:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1784:	dc 01       	movw	r26, r24
    1786:	cb 01       	movw	r24, r22
    1788:	98 ab       	std	Y+48, r25	; 0x30
    178a:	8f a7       	std	Y+47, r24	; 0x2f
    178c:	0f c0       	rjmp	.+30     	; 0x17ac <Stepper_voidRotate_Anticlockwise_FullStep+0xee>
    178e:	88 ec       	ldi	r24, 0xC8	; 200
    1790:	90 e0       	ldi	r25, 0x00	; 0
    1792:	9e a7       	std	Y+46, r25	; 0x2e
    1794:	8d a7       	std	Y+45, r24	; 0x2d
    1796:	8d a5       	ldd	r24, Y+45	; 0x2d
    1798:	9e a5       	ldd	r25, Y+46	; 0x2e
    179a:	01 97       	sbiw	r24, 0x01	; 1
    179c:	f1 f7       	brne	.-4      	; 0x179a <Stepper_voidRotate_Anticlockwise_FullStep+0xdc>
    179e:	9e a7       	std	Y+46, r25	; 0x2e
    17a0:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    17a2:	8f a5       	ldd	r24, Y+47	; 0x2f
    17a4:	98 a9       	ldd	r25, Y+48	; 0x30
    17a6:	01 97       	sbiw	r24, 0x01	; 1
    17a8:	98 ab       	std	Y+48, r25	; 0x30
    17aa:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    17ac:	8f a5       	ldd	r24, Y+47	; 0x2f
    17ae:	98 a9       	ldd	r25, Y+48	; 0x30
    17b0:	00 97       	sbiw	r24, 0x00	; 0
    17b2:	69 f7       	brne	.-38     	; 0x178e <Stepper_voidRotate_Anticlockwise_FullStep+0xd0>
    17b4:	14 c0       	rjmp	.+40     	; 0x17de <Stepper_voidRotate_Anticlockwise_FullStep+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    17b6:	69 a9       	ldd	r22, Y+49	; 0x31
    17b8:	7a a9       	ldd	r23, Y+50	; 0x32
    17ba:	8b a9       	ldd	r24, Y+51	; 0x33
    17bc:	9c a9       	ldd	r25, Y+52	; 0x34
    17be:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    17c2:	dc 01       	movw	r26, r24
    17c4:	cb 01       	movw	r24, r22
    17c6:	98 ab       	std	Y+48, r25	; 0x30
    17c8:	8f a7       	std	Y+47, r24	; 0x2f
    17ca:	8f a5       	ldd	r24, Y+47	; 0x2f
    17cc:	98 a9       	ldd	r25, Y+48	; 0x30
    17ce:	9c a7       	std	Y+44, r25	; 0x2c
    17d0:	8b a7       	std	Y+43, r24	; 0x2b
    17d2:	8b a5       	ldd	r24, Y+43	; 0x2b
    17d4:	9c a5       	ldd	r25, Y+44	; 0x2c
    17d6:	01 97       	sbiw	r24, 0x01	; 1
    17d8:	f1 f7       	brne	.-4      	; 0x17d6 <Stepper_voidRotate_Anticlockwise_FullStep+0x118>
    17da:	9c a7       	std	Y+44, r25	; 0x2c
    17dc:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(2);
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_BLUE,DIO_u8_LOW);
    17de:	80 e0       	ldi	r24, 0x00	; 0
    17e0:	60 e0       	ldi	r22, 0x00	; 0
    17e2:	40 e0       	ldi	r20, 0x00	; 0
    17e4:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_PINK,DIO_u8_LOW);
    17e8:	80 e0       	ldi	r24, 0x00	; 0
    17ea:	61 e0       	ldi	r22, 0x01	; 1
    17ec:	40 e0       	ldi	r20, 0x00	; 0
    17ee:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_YELLOW,DIO_u8_HIGH);
    17f2:	80 e0       	ldi	r24, 0x00	; 0
    17f4:	62 e0       	ldi	r22, 0x02	; 2
    17f6:	41 e0       	ldi	r20, 0x01	; 1
    17f8:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_ORANGE,DIO_u8_LOW);
    17fc:	80 e0       	ldi	r24, 0x00	; 0
    17fe:	63 e0       	ldi	r22, 0x03	; 3
    1800:	40 e0       	ldi	r20, 0x00	; 0
    1802:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
    1806:	80 e0       	ldi	r24, 0x00	; 0
    1808:	90 e0       	ldi	r25, 0x00	; 0
    180a:	a0 e0       	ldi	r26, 0x00	; 0
    180c:	b0 e4       	ldi	r27, 0x40	; 64
    180e:	8f a3       	std	Y+39, r24	; 0x27
    1810:	98 a7       	std	Y+40, r25	; 0x28
    1812:	a9 a7       	std	Y+41, r26	; 0x29
    1814:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1816:	6f a1       	ldd	r22, Y+39	; 0x27
    1818:	78 a5       	ldd	r23, Y+40	; 0x28
    181a:	89 a5       	ldd	r24, Y+41	; 0x29
    181c:	9a a5       	ldd	r25, Y+42	; 0x2a
    181e:	20 e0       	ldi	r18, 0x00	; 0
    1820:	30 e0       	ldi	r19, 0x00	; 0
    1822:	4a ef       	ldi	r20, 0xFA	; 250
    1824:	54 e4       	ldi	r21, 0x44	; 68
    1826:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    182a:	dc 01       	movw	r26, r24
    182c:	cb 01       	movw	r24, r22
    182e:	8b a3       	std	Y+35, r24	; 0x23
    1830:	9c a3       	std	Y+36, r25	; 0x24
    1832:	ad a3       	std	Y+37, r26	; 0x25
    1834:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1836:	6b a1       	ldd	r22, Y+35	; 0x23
    1838:	7c a1       	ldd	r23, Y+36	; 0x24
    183a:	8d a1       	ldd	r24, Y+37	; 0x25
    183c:	9e a1       	ldd	r25, Y+38	; 0x26
    183e:	20 e0       	ldi	r18, 0x00	; 0
    1840:	30 e0       	ldi	r19, 0x00	; 0
    1842:	40 e8       	ldi	r20, 0x80	; 128
    1844:	5f e3       	ldi	r21, 0x3F	; 63
    1846:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    184a:	88 23       	and	r24, r24
    184c:	2c f4       	brge	.+10     	; 0x1858 <Stepper_voidRotate_Anticlockwise_FullStep+0x19a>
		__ticks = 1;
    184e:	81 e0       	ldi	r24, 0x01	; 1
    1850:	90 e0       	ldi	r25, 0x00	; 0
    1852:	9a a3       	std	Y+34, r25	; 0x22
    1854:	89 a3       	std	Y+33, r24	; 0x21
    1856:	3f c0       	rjmp	.+126    	; 0x18d6 <Stepper_voidRotate_Anticlockwise_FullStep+0x218>
	else if (__tmp > 65535)
    1858:	6b a1       	ldd	r22, Y+35	; 0x23
    185a:	7c a1       	ldd	r23, Y+36	; 0x24
    185c:	8d a1       	ldd	r24, Y+37	; 0x25
    185e:	9e a1       	ldd	r25, Y+38	; 0x26
    1860:	20 e0       	ldi	r18, 0x00	; 0
    1862:	3f ef       	ldi	r19, 0xFF	; 255
    1864:	4f e7       	ldi	r20, 0x7F	; 127
    1866:	57 e4       	ldi	r21, 0x47	; 71
    1868:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    186c:	18 16       	cp	r1, r24
    186e:	4c f5       	brge	.+82     	; 0x18c2 <Stepper_voidRotate_Anticlockwise_FullStep+0x204>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1870:	6f a1       	ldd	r22, Y+39	; 0x27
    1872:	78 a5       	ldd	r23, Y+40	; 0x28
    1874:	89 a5       	ldd	r24, Y+41	; 0x29
    1876:	9a a5       	ldd	r25, Y+42	; 0x2a
    1878:	20 e0       	ldi	r18, 0x00	; 0
    187a:	30 e0       	ldi	r19, 0x00	; 0
    187c:	40 e2       	ldi	r20, 0x20	; 32
    187e:	51 e4       	ldi	r21, 0x41	; 65
    1880:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1884:	dc 01       	movw	r26, r24
    1886:	cb 01       	movw	r24, r22
    1888:	bc 01       	movw	r22, r24
    188a:	cd 01       	movw	r24, r26
    188c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1890:	dc 01       	movw	r26, r24
    1892:	cb 01       	movw	r24, r22
    1894:	9a a3       	std	Y+34, r25	; 0x22
    1896:	89 a3       	std	Y+33, r24	; 0x21
    1898:	0f c0       	rjmp	.+30     	; 0x18b8 <Stepper_voidRotate_Anticlockwise_FullStep+0x1fa>
    189a:	88 ec       	ldi	r24, 0xC8	; 200
    189c:	90 e0       	ldi	r25, 0x00	; 0
    189e:	98 a3       	std	Y+32, r25	; 0x20
    18a0:	8f 8f       	std	Y+31, r24	; 0x1f
    18a2:	8f 8d       	ldd	r24, Y+31	; 0x1f
    18a4:	98 a1       	ldd	r25, Y+32	; 0x20
    18a6:	01 97       	sbiw	r24, 0x01	; 1
    18a8:	f1 f7       	brne	.-4      	; 0x18a6 <Stepper_voidRotate_Anticlockwise_FullStep+0x1e8>
    18aa:	98 a3       	std	Y+32, r25	; 0x20
    18ac:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18ae:	89 a1       	ldd	r24, Y+33	; 0x21
    18b0:	9a a1       	ldd	r25, Y+34	; 0x22
    18b2:	01 97       	sbiw	r24, 0x01	; 1
    18b4:	9a a3       	std	Y+34, r25	; 0x22
    18b6:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18b8:	89 a1       	ldd	r24, Y+33	; 0x21
    18ba:	9a a1       	ldd	r25, Y+34	; 0x22
    18bc:	00 97       	sbiw	r24, 0x00	; 0
    18be:	69 f7       	brne	.-38     	; 0x189a <Stepper_voidRotate_Anticlockwise_FullStep+0x1dc>
    18c0:	14 c0       	rjmp	.+40     	; 0x18ea <Stepper_voidRotate_Anticlockwise_FullStep+0x22c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18c2:	6b a1       	ldd	r22, Y+35	; 0x23
    18c4:	7c a1       	ldd	r23, Y+36	; 0x24
    18c6:	8d a1       	ldd	r24, Y+37	; 0x25
    18c8:	9e a1       	ldd	r25, Y+38	; 0x26
    18ca:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18ce:	dc 01       	movw	r26, r24
    18d0:	cb 01       	movw	r24, r22
    18d2:	9a a3       	std	Y+34, r25	; 0x22
    18d4:	89 a3       	std	Y+33, r24	; 0x21
    18d6:	89 a1       	ldd	r24, Y+33	; 0x21
    18d8:	9a a1       	ldd	r25, Y+34	; 0x22
    18da:	9e 8f       	std	Y+30, r25	; 0x1e
    18dc:	8d 8f       	std	Y+29, r24	; 0x1d
    18de:	8d 8d       	ldd	r24, Y+29	; 0x1d
    18e0:	9e 8d       	ldd	r25, Y+30	; 0x1e
    18e2:	01 97       	sbiw	r24, 0x01	; 1
    18e4:	f1 f7       	brne	.-4      	; 0x18e2 <Stepper_voidRotate_Anticlockwise_FullStep+0x224>
    18e6:	9e 8f       	std	Y+30, r25	; 0x1e
    18e8:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(2);
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_BLUE,DIO_u8_LOW);
    18ea:	80 e0       	ldi	r24, 0x00	; 0
    18ec:	60 e0       	ldi	r22, 0x00	; 0
    18ee:	40 e0       	ldi	r20, 0x00	; 0
    18f0:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_PINK,DIO_u8_HIGH);
    18f4:	80 e0       	ldi	r24, 0x00	; 0
    18f6:	61 e0       	ldi	r22, 0x01	; 1
    18f8:	41 e0       	ldi	r20, 0x01	; 1
    18fa:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_YELLOW,DIO_u8_LOW);
    18fe:	80 e0       	ldi	r24, 0x00	; 0
    1900:	62 e0       	ldi	r22, 0x02	; 2
    1902:	40 e0       	ldi	r20, 0x00	; 0
    1904:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_ORANGE,DIO_u8_LOW);
    1908:	80 e0       	ldi	r24, 0x00	; 0
    190a:	63 e0       	ldi	r22, 0x03	; 3
    190c:	40 e0       	ldi	r20, 0x00	; 0
    190e:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
    1912:	80 e0       	ldi	r24, 0x00	; 0
    1914:	90 e0       	ldi	r25, 0x00	; 0
    1916:	a0 e0       	ldi	r26, 0x00	; 0
    1918:	b0 e4       	ldi	r27, 0x40	; 64
    191a:	89 8f       	std	Y+25, r24	; 0x19
    191c:	9a 8f       	std	Y+26, r25	; 0x1a
    191e:	ab 8f       	std	Y+27, r26	; 0x1b
    1920:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1922:	69 8d       	ldd	r22, Y+25	; 0x19
    1924:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1926:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1928:	9c 8d       	ldd	r25, Y+28	; 0x1c
    192a:	20 e0       	ldi	r18, 0x00	; 0
    192c:	30 e0       	ldi	r19, 0x00	; 0
    192e:	4a ef       	ldi	r20, 0xFA	; 250
    1930:	54 e4       	ldi	r21, 0x44	; 68
    1932:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1936:	dc 01       	movw	r26, r24
    1938:	cb 01       	movw	r24, r22
    193a:	8d 8b       	std	Y+21, r24	; 0x15
    193c:	9e 8b       	std	Y+22, r25	; 0x16
    193e:	af 8b       	std	Y+23, r26	; 0x17
    1940:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1942:	6d 89       	ldd	r22, Y+21	; 0x15
    1944:	7e 89       	ldd	r23, Y+22	; 0x16
    1946:	8f 89       	ldd	r24, Y+23	; 0x17
    1948:	98 8d       	ldd	r25, Y+24	; 0x18
    194a:	20 e0       	ldi	r18, 0x00	; 0
    194c:	30 e0       	ldi	r19, 0x00	; 0
    194e:	40 e8       	ldi	r20, 0x80	; 128
    1950:	5f e3       	ldi	r21, 0x3F	; 63
    1952:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1956:	88 23       	and	r24, r24
    1958:	2c f4       	brge	.+10     	; 0x1964 <Stepper_voidRotate_Anticlockwise_FullStep+0x2a6>
		__ticks = 1;
    195a:	81 e0       	ldi	r24, 0x01	; 1
    195c:	90 e0       	ldi	r25, 0x00	; 0
    195e:	9c 8b       	std	Y+20, r25	; 0x14
    1960:	8b 8b       	std	Y+19, r24	; 0x13
    1962:	3f c0       	rjmp	.+126    	; 0x19e2 <Stepper_voidRotate_Anticlockwise_FullStep+0x324>
	else if (__tmp > 65535)
    1964:	6d 89       	ldd	r22, Y+21	; 0x15
    1966:	7e 89       	ldd	r23, Y+22	; 0x16
    1968:	8f 89       	ldd	r24, Y+23	; 0x17
    196a:	98 8d       	ldd	r25, Y+24	; 0x18
    196c:	20 e0       	ldi	r18, 0x00	; 0
    196e:	3f ef       	ldi	r19, 0xFF	; 255
    1970:	4f e7       	ldi	r20, 0x7F	; 127
    1972:	57 e4       	ldi	r21, 0x47	; 71
    1974:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1978:	18 16       	cp	r1, r24
    197a:	4c f5       	brge	.+82     	; 0x19ce <Stepper_voidRotate_Anticlockwise_FullStep+0x310>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    197c:	69 8d       	ldd	r22, Y+25	; 0x19
    197e:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1980:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1982:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1984:	20 e0       	ldi	r18, 0x00	; 0
    1986:	30 e0       	ldi	r19, 0x00	; 0
    1988:	40 e2       	ldi	r20, 0x20	; 32
    198a:	51 e4       	ldi	r21, 0x41	; 65
    198c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1990:	dc 01       	movw	r26, r24
    1992:	cb 01       	movw	r24, r22
    1994:	bc 01       	movw	r22, r24
    1996:	cd 01       	movw	r24, r26
    1998:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    199c:	dc 01       	movw	r26, r24
    199e:	cb 01       	movw	r24, r22
    19a0:	9c 8b       	std	Y+20, r25	; 0x14
    19a2:	8b 8b       	std	Y+19, r24	; 0x13
    19a4:	0f c0       	rjmp	.+30     	; 0x19c4 <Stepper_voidRotate_Anticlockwise_FullStep+0x306>
    19a6:	88 ec       	ldi	r24, 0xC8	; 200
    19a8:	90 e0       	ldi	r25, 0x00	; 0
    19aa:	9a 8b       	std	Y+18, r25	; 0x12
    19ac:	89 8b       	std	Y+17, r24	; 0x11
    19ae:	89 89       	ldd	r24, Y+17	; 0x11
    19b0:	9a 89       	ldd	r25, Y+18	; 0x12
    19b2:	01 97       	sbiw	r24, 0x01	; 1
    19b4:	f1 f7       	brne	.-4      	; 0x19b2 <Stepper_voidRotate_Anticlockwise_FullStep+0x2f4>
    19b6:	9a 8b       	std	Y+18, r25	; 0x12
    19b8:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19ba:	8b 89       	ldd	r24, Y+19	; 0x13
    19bc:	9c 89       	ldd	r25, Y+20	; 0x14
    19be:	01 97       	sbiw	r24, 0x01	; 1
    19c0:	9c 8b       	std	Y+20, r25	; 0x14
    19c2:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19c4:	8b 89       	ldd	r24, Y+19	; 0x13
    19c6:	9c 89       	ldd	r25, Y+20	; 0x14
    19c8:	00 97       	sbiw	r24, 0x00	; 0
    19ca:	69 f7       	brne	.-38     	; 0x19a6 <Stepper_voidRotate_Anticlockwise_FullStep+0x2e8>
    19cc:	14 c0       	rjmp	.+40     	; 0x19f6 <Stepper_voidRotate_Anticlockwise_FullStep+0x338>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    19ce:	6d 89       	ldd	r22, Y+21	; 0x15
    19d0:	7e 89       	ldd	r23, Y+22	; 0x16
    19d2:	8f 89       	ldd	r24, Y+23	; 0x17
    19d4:	98 8d       	ldd	r25, Y+24	; 0x18
    19d6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    19da:	dc 01       	movw	r26, r24
    19dc:	cb 01       	movw	r24, r22
    19de:	9c 8b       	std	Y+20, r25	; 0x14
    19e0:	8b 8b       	std	Y+19, r24	; 0x13
    19e2:	8b 89       	ldd	r24, Y+19	; 0x13
    19e4:	9c 89       	ldd	r25, Y+20	; 0x14
    19e6:	98 8b       	std	Y+16, r25	; 0x10
    19e8:	8f 87       	std	Y+15, r24	; 0x0f
    19ea:	8f 85       	ldd	r24, Y+15	; 0x0f
    19ec:	98 89       	ldd	r25, Y+16	; 0x10
    19ee:	01 97       	sbiw	r24, 0x01	; 1
    19f0:	f1 f7       	brne	.-4      	; 0x19ee <Stepper_voidRotate_Anticlockwise_FullStep+0x330>
    19f2:	98 8b       	std	Y+16, r25	; 0x10
    19f4:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(2);
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_BLUE,DIO_u8_HIGH);
    19f6:	80 e0       	ldi	r24, 0x00	; 0
    19f8:	60 e0       	ldi	r22, 0x00	; 0
    19fa:	41 e0       	ldi	r20, 0x01	; 1
    19fc:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_PINK,DIO_u8_LOW);
    1a00:	80 e0       	ldi	r24, 0x00	; 0
    1a02:	61 e0       	ldi	r22, 0x01	; 1
    1a04:	40 e0       	ldi	r20, 0x00	; 0
    1a06:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_YELLOW,DIO_u8_LOW);
    1a0a:	80 e0       	ldi	r24, 0x00	; 0
    1a0c:	62 e0       	ldi	r22, 0x02	; 2
    1a0e:	40 e0       	ldi	r20, 0x00	; 0
    1a10:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_ORANGE,DIO_u8_LOW);
    1a14:	80 e0       	ldi	r24, 0x00	; 0
    1a16:	63 e0       	ldi	r22, 0x03	; 3
    1a18:	40 e0       	ldi	r20, 0x00	; 0
    1a1a:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
    1a1e:	80 e0       	ldi	r24, 0x00	; 0
    1a20:	90 e0       	ldi	r25, 0x00	; 0
    1a22:	a0 e0       	ldi	r26, 0x00	; 0
    1a24:	b0 e4       	ldi	r27, 0x40	; 64
    1a26:	8b 87       	std	Y+11, r24	; 0x0b
    1a28:	9c 87       	std	Y+12, r25	; 0x0c
    1a2a:	ad 87       	std	Y+13, r26	; 0x0d
    1a2c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a2e:	6b 85       	ldd	r22, Y+11	; 0x0b
    1a30:	7c 85       	ldd	r23, Y+12	; 0x0c
    1a32:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a34:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a36:	20 e0       	ldi	r18, 0x00	; 0
    1a38:	30 e0       	ldi	r19, 0x00	; 0
    1a3a:	4a ef       	ldi	r20, 0xFA	; 250
    1a3c:	54 e4       	ldi	r21, 0x44	; 68
    1a3e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a42:	dc 01       	movw	r26, r24
    1a44:	cb 01       	movw	r24, r22
    1a46:	8f 83       	std	Y+7, r24	; 0x07
    1a48:	98 87       	std	Y+8, r25	; 0x08
    1a4a:	a9 87       	std	Y+9, r26	; 0x09
    1a4c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1a4e:	6f 81       	ldd	r22, Y+7	; 0x07
    1a50:	78 85       	ldd	r23, Y+8	; 0x08
    1a52:	89 85       	ldd	r24, Y+9	; 0x09
    1a54:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a56:	20 e0       	ldi	r18, 0x00	; 0
    1a58:	30 e0       	ldi	r19, 0x00	; 0
    1a5a:	40 e8       	ldi	r20, 0x80	; 128
    1a5c:	5f e3       	ldi	r21, 0x3F	; 63
    1a5e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1a62:	88 23       	and	r24, r24
    1a64:	2c f4       	brge	.+10     	; 0x1a70 <Stepper_voidRotate_Anticlockwise_FullStep+0x3b2>
		__ticks = 1;
    1a66:	81 e0       	ldi	r24, 0x01	; 1
    1a68:	90 e0       	ldi	r25, 0x00	; 0
    1a6a:	9e 83       	std	Y+6, r25	; 0x06
    1a6c:	8d 83       	std	Y+5, r24	; 0x05
    1a6e:	3f c0       	rjmp	.+126    	; 0x1aee <Stepper_voidRotate_Anticlockwise_FullStep+0x430>
	else if (__tmp > 65535)
    1a70:	6f 81       	ldd	r22, Y+7	; 0x07
    1a72:	78 85       	ldd	r23, Y+8	; 0x08
    1a74:	89 85       	ldd	r24, Y+9	; 0x09
    1a76:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a78:	20 e0       	ldi	r18, 0x00	; 0
    1a7a:	3f ef       	ldi	r19, 0xFF	; 255
    1a7c:	4f e7       	ldi	r20, 0x7F	; 127
    1a7e:	57 e4       	ldi	r21, 0x47	; 71
    1a80:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1a84:	18 16       	cp	r1, r24
    1a86:	4c f5       	brge	.+82     	; 0x1ada <Stepper_voidRotate_Anticlockwise_FullStep+0x41c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a88:	6b 85       	ldd	r22, Y+11	; 0x0b
    1a8a:	7c 85       	ldd	r23, Y+12	; 0x0c
    1a8c:	8d 85       	ldd	r24, Y+13	; 0x0d
    1a8e:	9e 85       	ldd	r25, Y+14	; 0x0e
    1a90:	20 e0       	ldi	r18, 0x00	; 0
    1a92:	30 e0       	ldi	r19, 0x00	; 0
    1a94:	40 e2       	ldi	r20, 0x20	; 32
    1a96:	51 e4       	ldi	r21, 0x41	; 65
    1a98:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a9c:	dc 01       	movw	r26, r24
    1a9e:	cb 01       	movw	r24, r22
    1aa0:	bc 01       	movw	r22, r24
    1aa2:	cd 01       	movw	r24, r26
    1aa4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1aa8:	dc 01       	movw	r26, r24
    1aaa:	cb 01       	movw	r24, r22
    1aac:	9e 83       	std	Y+6, r25	; 0x06
    1aae:	8d 83       	std	Y+5, r24	; 0x05
    1ab0:	0f c0       	rjmp	.+30     	; 0x1ad0 <Stepper_voidRotate_Anticlockwise_FullStep+0x412>
    1ab2:	88 ec       	ldi	r24, 0xC8	; 200
    1ab4:	90 e0       	ldi	r25, 0x00	; 0
    1ab6:	9c 83       	std	Y+4, r25	; 0x04
    1ab8:	8b 83       	std	Y+3, r24	; 0x03
    1aba:	8b 81       	ldd	r24, Y+3	; 0x03
    1abc:	9c 81       	ldd	r25, Y+4	; 0x04
    1abe:	01 97       	sbiw	r24, 0x01	; 1
    1ac0:	f1 f7       	brne	.-4      	; 0x1abe <Stepper_voidRotate_Anticlockwise_FullStep+0x400>
    1ac2:	9c 83       	std	Y+4, r25	; 0x04
    1ac4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1ac6:	8d 81       	ldd	r24, Y+5	; 0x05
    1ac8:	9e 81       	ldd	r25, Y+6	; 0x06
    1aca:	01 97       	sbiw	r24, 0x01	; 1
    1acc:	9e 83       	std	Y+6, r25	; 0x06
    1ace:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ad0:	8d 81       	ldd	r24, Y+5	; 0x05
    1ad2:	9e 81       	ldd	r25, Y+6	; 0x06
    1ad4:	00 97       	sbiw	r24, 0x00	; 0
    1ad6:	69 f7       	brne	.-38     	; 0x1ab2 <Stepper_voidRotate_Anticlockwise_FullStep+0x3f4>
    1ad8:	14 c0       	rjmp	.+40     	; 0x1b02 <Stepper_voidRotate_Anticlockwise_FullStep+0x444>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ada:	6f 81       	ldd	r22, Y+7	; 0x07
    1adc:	78 85       	ldd	r23, Y+8	; 0x08
    1ade:	89 85       	ldd	r24, Y+9	; 0x09
    1ae0:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ae2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ae6:	dc 01       	movw	r26, r24
    1ae8:	cb 01       	movw	r24, r22
    1aea:	9e 83       	std	Y+6, r25	; 0x06
    1aec:	8d 83       	std	Y+5, r24	; 0x05
    1aee:	8d 81       	ldd	r24, Y+5	; 0x05
    1af0:	9e 81       	ldd	r25, Y+6	; 0x06
    1af2:	9a 83       	std	Y+2, r25	; 0x02
    1af4:	89 83       	std	Y+1, r24	; 0x01
    1af6:	89 81       	ldd	r24, Y+1	; 0x01
    1af8:	9a 81       	ldd	r25, Y+2	; 0x02
    1afa:	01 97       	sbiw	r24, 0x01	; 1
    1afc:	f1 f7       	brne	.-4      	; 0x1afa <Stepper_voidRotate_Anticlockwise_FullStep+0x43c>
    1afe:	9a 83       	std	Y+2, r25	; 0x02
    1b00:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(2);

}
    1b02:	e8 96       	adiw	r28, 0x38	; 56
    1b04:	0f b6       	in	r0, 0x3f	; 63
    1b06:	f8 94       	cli
    1b08:	de bf       	out	0x3e, r29	; 62
    1b0a:	0f be       	out	0x3f, r0	; 63
    1b0c:	cd bf       	out	0x3d, r28	; 61
    1b0e:	cf 91       	pop	r28
    1b10:	df 91       	pop	r29
    1b12:	08 95       	ret

00001b14 <Stepper_voidRotate_clockwise_HalfStep>:
void Stepper_voidRotate_clockwise_HalfStep(void)
{
    1b14:	0f 93       	push	r16
    1b16:	1f 93       	push	r17
    1b18:	df 93       	push	r29
    1b1a:	cf 93       	push	r28
    1b1c:	cd b7       	in	r28, 0x3d	; 61
    1b1e:	de b7       	in	r29, 0x3e	; 62
    1b20:	c0 57       	subi	r28, 0x70	; 112
    1b22:	d0 40       	sbci	r29, 0x00	; 0
    1b24:	0f b6       	in	r0, 0x3f	; 63
    1b26:	f8 94       	cli
    1b28:	de bf       	out	0x3e, r29	; 62
    1b2a:	0f be       	out	0x3f, r0	; 63
    1b2c:	cd bf       	out	0x3d, r28	; 61

	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_BLUE,DIO_u8_HIGH);
    1b2e:	80 e0       	ldi	r24, 0x00	; 0
    1b30:	60 e0       	ldi	r22, 0x00	; 0
    1b32:	41 e0       	ldi	r20, 0x01	; 1
    1b34:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_PINK,DIO_u8_LOW);
    1b38:	80 e0       	ldi	r24, 0x00	; 0
    1b3a:	61 e0       	ldi	r22, 0x01	; 1
    1b3c:	40 e0       	ldi	r20, 0x00	; 0
    1b3e:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_YELLOW,DIO_u8_LOW);
    1b42:	80 e0       	ldi	r24, 0x00	; 0
    1b44:	62 e0       	ldi	r22, 0x02	; 2
    1b46:	40 e0       	ldi	r20, 0x00	; 0
    1b48:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_ORANGE,DIO_u8_HIGH);
    1b4c:	80 e0       	ldi	r24, 0x00	; 0
    1b4e:	63 e0       	ldi	r22, 0x03	; 3
    1b50:	41 e0       	ldi	r20, 0x01	; 1
    1b52:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
    1b56:	fe 01       	movw	r30, r28
    1b58:	e3 59       	subi	r30, 0x93	; 147
    1b5a:	ff 4f       	sbci	r31, 0xFF	; 255
    1b5c:	80 e0       	ldi	r24, 0x00	; 0
    1b5e:	90 e0       	ldi	r25, 0x00	; 0
    1b60:	a0 e2       	ldi	r26, 0x20	; 32
    1b62:	b1 e4       	ldi	r27, 0x41	; 65
    1b64:	80 83       	st	Z, r24
    1b66:	91 83       	std	Z+1, r25	; 0x01
    1b68:	a2 83       	std	Z+2, r26	; 0x02
    1b6a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1b6c:	8e 01       	movw	r16, r28
    1b6e:	07 59       	subi	r16, 0x97	; 151
    1b70:	1f 4f       	sbci	r17, 0xFF	; 255
    1b72:	fe 01       	movw	r30, r28
    1b74:	e3 59       	subi	r30, 0x93	; 147
    1b76:	ff 4f       	sbci	r31, 0xFF	; 255
    1b78:	60 81       	ld	r22, Z
    1b7a:	71 81       	ldd	r23, Z+1	; 0x01
    1b7c:	82 81       	ldd	r24, Z+2	; 0x02
    1b7e:	93 81       	ldd	r25, Z+3	; 0x03
    1b80:	20 e0       	ldi	r18, 0x00	; 0
    1b82:	30 e0       	ldi	r19, 0x00	; 0
    1b84:	4a ef       	ldi	r20, 0xFA	; 250
    1b86:	54 e4       	ldi	r21, 0x44	; 68
    1b88:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b8c:	dc 01       	movw	r26, r24
    1b8e:	cb 01       	movw	r24, r22
    1b90:	f8 01       	movw	r30, r16
    1b92:	80 83       	st	Z, r24
    1b94:	91 83       	std	Z+1, r25	; 0x01
    1b96:	a2 83       	std	Z+2, r26	; 0x02
    1b98:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1b9a:	fe 01       	movw	r30, r28
    1b9c:	e7 59       	subi	r30, 0x97	; 151
    1b9e:	ff 4f       	sbci	r31, 0xFF	; 255
    1ba0:	60 81       	ld	r22, Z
    1ba2:	71 81       	ldd	r23, Z+1	; 0x01
    1ba4:	82 81       	ldd	r24, Z+2	; 0x02
    1ba6:	93 81       	ldd	r25, Z+3	; 0x03
    1ba8:	20 e0       	ldi	r18, 0x00	; 0
    1baa:	30 e0       	ldi	r19, 0x00	; 0
    1bac:	40 e8       	ldi	r20, 0x80	; 128
    1bae:	5f e3       	ldi	r21, 0x3F	; 63
    1bb0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1bb4:	88 23       	and	r24, r24
    1bb6:	44 f4       	brge	.+16     	; 0x1bc8 <Stepper_voidRotate_clockwise_HalfStep+0xb4>
		__ticks = 1;
    1bb8:	fe 01       	movw	r30, r28
    1bba:	e9 59       	subi	r30, 0x99	; 153
    1bbc:	ff 4f       	sbci	r31, 0xFF	; 255
    1bbe:	81 e0       	ldi	r24, 0x01	; 1
    1bc0:	90 e0       	ldi	r25, 0x00	; 0
    1bc2:	91 83       	std	Z+1, r25	; 0x01
    1bc4:	80 83       	st	Z, r24
    1bc6:	64 c0       	rjmp	.+200    	; 0x1c90 <Stepper_voidRotate_clockwise_HalfStep+0x17c>
	else if (__tmp > 65535)
    1bc8:	fe 01       	movw	r30, r28
    1bca:	e7 59       	subi	r30, 0x97	; 151
    1bcc:	ff 4f       	sbci	r31, 0xFF	; 255
    1bce:	60 81       	ld	r22, Z
    1bd0:	71 81       	ldd	r23, Z+1	; 0x01
    1bd2:	82 81       	ldd	r24, Z+2	; 0x02
    1bd4:	93 81       	ldd	r25, Z+3	; 0x03
    1bd6:	20 e0       	ldi	r18, 0x00	; 0
    1bd8:	3f ef       	ldi	r19, 0xFF	; 255
    1bda:	4f e7       	ldi	r20, 0x7F	; 127
    1bdc:	57 e4       	ldi	r21, 0x47	; 71
    1bde:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1be2:	18 16       	cp	r1, r24
    1be4:	0c f0       	brlt	.+2      	; 0x1be8 <Stepper_voidRotate_clockwise_HalfStep+0xd4>
    1be6:	43 c0       	rjmp	.+134    	; 0x1c6e <Stepper_voidRotate_clockwise_HalfStep+0x15a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1be8:	fe 01       	movw	r30, r28
    1bea:	e3 59       	subi	r30, 0x93	; 147
    1bec:	ff 4f       	sbci	r31, 0xFF	; 255
    1bee:	60 81       	ld	r22, Z
    1bf0:	71 81       	ldd	r23, Z+1	; 0x01
    1bf2:	82 81       	ldd	r24, Z+2	; 0x02
    1bf4:	93 81       	ldd	r25, Z+3	; 0x03
    1bf6:	20 e0       	ldi	r18, 0x00	; 0
    1bf8:	30 e0       	ldi	r19, 0x00	; 0
    1bfa:	40 e2       	ldi	r20, 0x20	; 32
    1bfc:	51 e4       	ldi	r21, 0x41	; 65
    1bfe:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c02:	dc 01       	movw	r26, r24
    1c04:	cb 01       	movw	r24, r22
    1c06:	8e 01       	movw	r16, r28
    1c08:	09 59       	subi	r16, 0x99	; 153
    1c0a:	1f 4f       	sbci	r17, 0xFF	; 255
    1c0c:	bc 01       	movw	r22, r24
    1c0e:	cd 01       	movw	r24, r26
    1c10:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c14:	dc 01       	movw	r26, r24
    1c16:	cb 01       	movw	r24, r22
    1c18:	f8 01       	movw	r30, r16
    1c1a:	91 83       	std	Z+1, r25	; 0x01
    1c1c:	80 83       	st	Z, r24
    1c1e:	1f c0       	rjmp	.+62     	; 0x1c5e <Stepper_voidRotate_clockwise_HalfStep+0x14a>
    1c20:	fe 01       	movw	r30, r28
    1c22:	eb 59       	subi	r30, 0x9B	; 155
    1c24:	ff 4f       	sbci	r31, 0xFF	; 255
    1c26:	88 ec       	ldi	r24, 0xC8	; 200
    1c28:	90 e0       	ldi	r25, 0x00	; 0
    1c2a:	91 83       	std	Z+1, r25	; 0x01
    1c2c:	80 83       	st	Z, r24
    1c2e:	fe 01       	movw	r30, r28
    1c30:	eb 59       	subi	r30, 0x9B	; 155
    1c32:	ff 4f       	sbci	r31, 0xFF	; 255
    1c34:	80 81       	ld	r24, Z
    1c36:	91 81       	ldd	r25, Z+1	; 0x01
    1c38:	01 97       	sbiw	r24, 0x01	; 1
    1c3a:	f1 f7       	brne	.-4      	; 0x1c38 <Stepper_voidRotate_clockwise_HalfStep+0x124>
    1c3c:	fe 01       	movw	r30, r28
    1c3e:	eb 59       	subi	r30, 0x9B	; 155
    1c40:	ff 4f       	sbci	r31, 0xFF	; 255
    1c42:	91 83       	std	Z+1, r25	; 0x01
    1c44:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c46:	de 01       	movw	r26, r28
    1c48:	a9 59       	subi	r26, 0x99	; 153
    1c4a:	bf 4f       	sbci	r27, 0xFF	; 255
    1c4c:	fe 01       	movw	r30, r28
    1c4e:	e9 59       	subi	r30, 0x99	; 153
    1c50:	ff 4f       	sbci	r31, 0xFF	; 255
    1c52:	80 81       	ld	r24, Z
    1c54:	91 81       	ldd	r25, Z+1	; 0x01
    1c56:	01 97       	sbiw	r24, 0x01	; 1
    1c58:	11 96       	adiw	r26, 0x01	; 1
    1c5a:	9c 93       	st	X, r25
    1c5c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c5e:	fe 01       	movw	r30, r28
    1c60:	e9 59       	subi	r30, 0x99	; 153
    1c62:	ff 4f       	sbci	r31, 0xFF	; 255
    1c64:	80 81       	ld	r24, Z
    1c66:	91 81       	ldd	r25, Z+1	; 0x01
    1c68:	00 97       	sbiw	r24, 0x00	; 0
    1c6a:	d1 f6       	brne	.-76     	; 0x1c20 <Stepper_voidRotate_clockwise_HalfStep+0x10c>
    1c6c:	27 c0       	rjmp	.+78     	; 0x1cbc <Stepper_voidRotate_clockwise_HalfStep+0x1a8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c6e:	8e 01       	movw	r16, r28
    1c70:	09 59       	subi	r16, 0x99	; 153
    1c72:	1f 4f       	sbci	r17, 0xFF	; 255
    1c74:	fe 01       	movw	r30, r28
    1c76:	e7 59       	subi	r30, 0x97	; 151
    1c78:	ff 4f       	sbci	r31, 0xFF	; 255
    1c7a:	60 81       	ld	r22, Z
    1c7c:	71 81       	ldd	r23, Z+1	; 0x01
    1c7e:	82 81       	ldd	r24, Z+2	; 0x02
    1c80:	93 81       	ldd	r25, Z+3	; 0x03
    1c82:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c86:	dc 01       	movw	r26, r24
    1c88:	cb 01       	movw	r24, r22
    1c8a:	f8 01       	movw	r30, r16
    1c8c:	91 83       	std	Z+1, r25	; 0x01
    1c8e:	80 83       	st	Z, r24
    1c90:	de 01       	movw	r26, r28
    1c92:	ad 59       	subi	r26, 0x9D	; 157
    1c94:	bf 4f       	sbci	r27, 0xFF	; 255
    1c96:	fe 01       	movw	r30, r28
    1c98:	e9 59       	subi	r30, 0x99	; 153
    1c9a:	ff 4f       	sbci	r31, 0xFF	; 255
    1c9c:	80 81       	ld	r24, Z
    1c9e:	91 81       	ldd	r25, Z+1	; 0x01
    1ca0:	8d 93       	st	X+, r24
    1ca2:	9c 93       	st	X, r25
    1ca4:	fe 01       	movw	r30, r28
    1ca6:	ed 59       	subi	r30, 0x9D	; 157
    1ca8:	ff 4f       	sbci	r31, 0xFF	; 255
    1caa:	80 81       	ld	r24, Z
    1cac:	91 81       	ldd	r25, Z+1	; 0x01
    1cae:	01 97       	sbiw	r24, 0x01	; 1
    1cb0:	f1 f7       	brne	.-4      	; 0x1cae <Stepper_voidRotate_clockwise_HalfStep+0x19a>
    1cb2:	fe 01       	movw	r30, r28
    1cb4:	ed 59       	subi	r30, 0x9D	; 157
    1cb6:	ff 4f       	sbci	r31, 0xFF	; 255
    1cb8:	91 83       	std	Z+1, r25	; 0x01
    1cba:	80 83       	st	Z, r24
	_delay_ms(10);
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_BLUE,DIO_u8_HIGH);
    1cbc:	80 e0       	ldi	r24, 0x00	; 0
    1cbe:	60 e0       	ldi	r22, 0x00	; 0
    1cc0:	41 e0       	ldi	r20, 0x01	; 1
    1cc2:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_PINK,DIO_u8_LOW);
    1cc6:	80 e0       	ldi	r24, 0x00	; 0
    1cc8:	61 e0       	ldi	r22, 0x01	; 1
    1cca:	40 e0       	ldi	r20, 0x00	; 0
    1ccc:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_YELLOW,DIO_u8_LOW);
    1cd0:	80 e0       	ldi	r24, 0x00	; 0
    1cd2:	62 e0       	ldi	r22, 0x02	; 2
    1cd4:	40 e0       	ldi	r20, 0x00	; 0
    1cd6:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_ORANGE,DIO_u8_LOW);
    1cda:	80 e0       	ldi	r24, 0x00	; 0
    1cdc:	63 e0       	ldi	r22, 0x03	; 3
    1cde:	40 e0       	ldi	r20, 0x00	; 0
    1ce0:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
    1ce4:	fe 01       	movw	r30, r28
    1ce6:	e1 5a       	subi	r30, 0xA1	; 161
    1ce8:	ff 4f       	sbci	r31, 0xFF	; 255
    1cea:	80 e0       	ldi	r24, 0x00	; 0
    1cec:	90 e0       	ldi	r25, 0x00	; 0
    1cee:	a0 e2       	ldi	r26, 0x20	; 32
    1cf0:	b1 e4       	ldi	r27, 0x41	; 65
    1cf2:	80 83       	st	Z, r24
    1cf4:	91 83       	std	Z+1, r25	; 0x01
    1cf6:	a2 83       	std	Z+2, r26	; 0x02
    1cf8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1cfa:	8e 01       	movw	r16, r28
    1cfc:	05 5a       	subi	r16, 0xA5	; 165
    1cfe:	1f 4f       	sbci	r17, 0xFF	; 255
    1d00:	fe 01       	movw	r30, r28
    1d02:	e1 5a       	subi	r30, 0xA1	; 161
    1d04:	ff 4f       	sbci	r31, 0xFF	; 255
    1d06:	60 81       	ld	r22, Z
    1d08:	71 81       	ldd	r23, Z+1	; 0x01
    1d0a:	82 81       	ldd	r24, Z+2	; 0x02
    1d0c:	93 81       	ldd	r25, Z+3	; 0x03
    1d0e:	20 e0       	ldi	r18, 0x00	; 0
    1d10:	30 e0       	ldi	r19, 0x00	; 0
    1d12:	4a ef       	ldi	r20, 0xFA	; 250
    1d14:	54 e4       	ldi	r21, 0x44	; 68
    1d16:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d1a:	dc 01       	movw	r26, r24
    1d1c:	cb 01       	movw	r24, r22
    1d1e:	f8 01       	movw	r30, r16
    1d20:	80 83       	st	Z, r24
    1d22:	91 83       	std	Z+1, r25	; 0x01
    1d24:	a2 83       	std	Z+2, r26	; 0x02
    1d26:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1d28:	fe 01       	movw	r30, r28
    1d2a:	e5 5a       	subi	r30, 0xA5	; 165
    1d2c:	ff 4f       	sbci	r31, 0xFF	; 255
    1d2e:	60 81       	ld	r22, Z
    1d30:	71 81       	ldd	r23, Z+1	; 0x01
    1d32:	82 81       	ldd	r24, Z+2	; 0x02
    1d34:	93 81       	ldd	r25, Z+3	; 0x03
    1d36:	20 e0       	ldi	r18, 0x00	; 0
    1d38:	30 e0       	ldi	r19, 0x00	; 0
    1d3a:	40 e8       	ldi	r20, 0x80	; 128
    1d3c:	5f e3       	ldi	r21, 0x3F	; 63
    1d3e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1d42:	88 23       	and	r24, r24
    1d44:	44 f4       	brge	.+16     	; 0x1d56 <Stepper_voidRotate_clockwise_HalfStep+0x242>
		__ticks = 1;
    1d46:	fe 01       	movw	r30, r28
    1d48:	e7 5a       	subi	r30, 0xA7	; 167
    1d4a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d4c:	81 e0       	ldi	r24, 0x01	; 1
    1d4e:	90 e0       	ldi	r25, 0x00	; 0
    1d50:	91 83       	std	Z+1, r25	; 0x01
    1d52:	80 83       	st	Z, r24
    1d54:	64 c0       	rjmp	.+200    	; 0x1e1e <Stepper_voidRotate_clockwise_HalfStep+0x30a>
	else if (__tmp > 65535)
    1d56:	fe 01       	movw	r30, r28
    1d58:	e5 5a       	subi	r30, 0xA5	; 165
    1d5a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d5c:	60 81       	ld	r22, Z
    1d5e:	71 81       	ldd	r23, Z+1	; 0x01
    1d60:	82 81       	ldd	r24, Z+2	; 0x02
    1d62:	93 81       	ldd	r25, Z+3	; 0x03
    1d64:	20 e0       	ldi	r18, 0x00	; 0
    1d66:	3f ef       	ldi	r19, 0xFF	; 255
    1d68:	4f e7       	ldi	r20, 0x7F	; 127
    1d6a:	57 e4       	ldi	r21, 0x47	; 71
    1d6c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1d70:	18 16       	cp	r1, r24
    1d72:	0c f0       	brlt	.+2      	; 0x1d76 <Stepper_voidRotate_clockwise_HalfStep+0x262>
    1d74:	43 c0       	rjmp	.+134    	; 0x1dfc <Stepper_voidRotate_clockwise_HalfStep+0x2e8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d76:	fe 01       	movw	r30, r28
    1d78:	e1 5a       	subi	r30, 0xA1	; 161
    1d7a:	ff 4f       	sbci	r31, 0xFF	; 255
    1d7c:	60 81       	ld	r22, Z
    1d7e:	71 81       	ldd	r23, Z+1	; 0x01
    1d80:	82 81       	ldd	r24, Z+2	; 0x02
    1d82:	93 81       	ldd	r25, Z+3	; 0x03
    1d84:	20 e0       	ldi	r18, 0x00	; 0
    1d86:	30 e0       	ldi	r19, 0x00	; 0
    1d88:	40 e2       	ldi	r20, 0x20	; 32
    1d8a:	51 e4       	ldi	r21, 0x41	; 65
    1d8c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d90:	dc 01       	movw	r26, r24
    1d92:	cb 01       	movw	r24, r22
    1d94:	8e 01       	movw	r16, r28
    1d96:	07 5a       	subi	r16, 0xA7	; 167
    1d98:	1f 4f       	sbci	r17, 0xFF	; 255
    1d9a:	bc 01       	movw	r22, r24
    1d9c:	cd 01       	movw	r24, r26
    1d9e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1da2:	dc 01       	movw	r26, r24
    1da4:	cb 01       	movw	r24, r22
    1da6:	f8 01       	movw	r30, r16
    1da8:	91 83       	std	Z+1, r25	; 0x01
    1daa:	80 83       	st	Z, r24
    1dac:	1f c0       	rjmp	.+62     	; 0x1dec <Stepper_voidRotate_clockwise_HalfStep+0x2d8>
    1dae:	fe 01       	movw	r30, r28
    1db0:	e9 5a       	subi	r30, 0xA9	; 169
    1db2:	ff 4f       	sbci	r31, 0xFF	; 255
    1db4:	88 ec       	ldi	r24, 0xC8	; 200
    1db6:	90 e0       	ldi	r25, 0x00	; 0
    1db8:	91 83       	std	Z+1, r25	; 0x01
    1dba:	80 83       	st	Z, r24
    1dbc:	fe 01       	movw	r30, r28
    1dbe:	e9 5a       	subi	r30, 0xA9	; 169
    1dc0:	ff 4f       	sbci	r31, 0xFF	; 255
    1dc2:	80 81       	ld	r24, Z
    1dc4:	91 81       	ldd	r25, Z+1	; 0x01
    1dc6:	01 97       	sbiw	r24, 0x01	; 1
    1dc8:	f1 f7       	brne	.-4      	; 0x1dc6 <Stepper_voidRotate_clockwise_HalfStep+0x2b2>
    1dca:	fe 01       	movw	r30, r28
    1dcc:	e9 5a       	subi	r30, 0xA9	; 169
    1dce:	ff 4f       	sbci	r31, 0xFF	; 255
    1dd0:	91 83       	std	Z+1, r25	; 0x01
    1dd2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1dd4:	de 01       	movw	r26, r28
    1dd6:	a7 5a       	subi	r26, 0xA7	; 167
    1dd8:	bf 4f       	sbci	r27, 0xFF	; 255
    1dda:	fe 01       	movw	r30, r28
    1ddc:	e7 5a       	subi	r30, 0xA7	; 167
    1dde:	ff 4f       	sbci	r31, 0xFF	; 255
    1de0:	80 81       	ld	r24, Z
    1de2:	91 81       	ldd	r25, Z+1	; 0x01
    1de4:	01 97       	sbiw	r24, 0x01	; 1
    1de6:	11 96       	adiw	r26, 0x01	; 1
    1de8:	9c 93       	st	X, r25
    1dea:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1dec:	fe 01       	movw	r30, r28
    1dee:	e7 5a       	subi	r30, 0xA7	; 167
    1df0:	ff 4f       	sbci	r31, 0xFF	; 255
    1df2:	80 81       	ld	r24, Z
    1df4:	91 81       	ldd	r25, Z+1	; 0x01
    1df6:	00 97       	sbiw	r24, 0x00	; 0
    1df8:	d1 f6       	brne	.-76     	; 0x1dae <Stepper_voidRotate_clockwise_HalfStep+0x29a>
    1dfa:	27 c0       	rjmp	.+78     	; 0x1e4a <Stepper_voidRotate_clockwise_HalfStep+0x336>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1dfc:	8e 01       	movw	r16, r28
    1dfe:	07 5a       	subi	r16, 0xA7	; 167
    1e00:	1f 4f       	sbci	r17, 0xFF	; 255
    1e02:	fe 01       	movw	r30, r28
    1e04:	e5 5a       	subi	r30, 0xA5	; 165
    1e06:	ff 4f       	sbci	r31, 0xFF	; 255
    1e08:	60 81       	ld	r22, Z
    1e0a:	71 81       	ldd	r23, Z+1	; 0x01
    1e0c:	82 81       	ldd	r24, Z+2	; 0x02
    1e0e:	93 81       	ldd	r25, Z+3	; 0x03
    1e10:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e14:	dc 01       	movw	r26, r24
    1e16:	cb 01       	movw	r24, r22
    1e18:	f8 01       	movw	r30, r16
    1e1a:	91 83       	std	Z+1, r25	; 0x01
    1e1c:	80 83       	st	Z, r24
    1e1e:	de 01       	movw	r26, r28
    1e20:	ab 5a       	subi	r26, 0xAB	; 171
    1e22:	bf 4f       	sbci	r27, 0xFF	; 255
    1e24:	fe 01       	movw	r30, r28
    1e26:	e7 5a       	subi	r30, 0xA7	; 167
    1e28:	ff 4f       	sbci	r31, 0xFF	; 255
    1e2a:	80 81       	ld	r24, Z
    1e2c:	91 81       	ldd	r25, Z+1	; 0x01
    1e2e:	8d 93       	st	X+, r24
    1e30:	9c 93       	st	X, r25
    1e32:	fe 01       	movw	r30, r28
    1e34:	eb 5a       	subi	r30, 0xAB	; 171
    1e36:	ff 4f       	sbci	r31, 0xFF	; 255
    1e38:	80 81       	ld	r24, Z
    1e3a:	91 81       	ldd	r25, Z+1	; 0x01
    1e3c:	01 97       	sbiw	r24, 0x01	; 1
    1e3e:	f1 f7       	brne	.-4      	; 0x1e3c <Stepper_voidRotate_clockwise_HalfStep+0x328>
    1e40:	fe 01       	movw	r30, r28
    1e42:	eb 5a       	subi	r30, 0xAB	; 171
    1e44:	ff 4f       	sbci	r31, 0xFF	; 255
    1e46:	91 83       	std	Z+1, r25	; 0x01
    1e48:	80 83       	st	Z, r24
	_delay_ms(10);
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_BLUE,DIO_u8_HIGH);
    1e4a:	80 e0       	ldi	r24, 0x00	; 0
    1e4c:	60 e0       	ldi	r22, 0x00	; 0
    1e4e:	41 e0       	ldi	r20, 0x01	; 1
    1e50:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_PINK,DIO_u8_HIGH);
    1e54:	80 e0       	ldi	r24, 0x00	; 0
    1e56:	61 e0       	ldi	r22, 0x01	; 1
    1e58:	41 e0       	ldi	r20, 0x01	; 1
    1e5a:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_YELLOW,DIO_u8_LOW);
    1e5e:	80 e0       	ldi	r24, 0x00	; 0
    1e60:	62 e0       	ldi	r22, 0x02	; 2
    1e62:	40 e0       	ldi	r20, 0x00	; 0
    1e64:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_ORANGE,DIO_u8_LOW);
    1e68:	80 e0       	ldi	r24, 0x00	; 0
    1e6a:	63 e0       	ldi	r22, 0x03	; 3
    1e6c:	40 e0       	ldi	r20, 0x00	; 0
    1e6e:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
    1e72:	fe 01       	movw	r30, r28
    1e74:	ef 5a       	subi	r30, 0xAF	; 175
    1e76:	ff 4f       	sbci	r31, 0xFF	; 255
    1e78:	80 e0       	ldi	r24, 0x00	; 0
    1e7a:	90 e0       	ldi	r25, 0x00	; 0
    1e7c:	a0 e2       	ldi	r26, 0x20	; 32
    1e7e:	b1 e4       	ldi	r27, 0x41	; 65
    1e80:	80 83       	st	Z, r24
    1e82:	91 83       	std	Z+1, r25	; 0x01
    1e84:	a2 83       	std	Z+2, r26	; 0x02
    1e86:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e88:	8e 01       	movw	r16, r28
    1e8a:	03 5b       	subi	r16, 0xB3	; 179
    1e8c:	1f 4f       	sbci	r17, 0xFF	; 255
    1e8e:	fe 01       	movw	r30, r28
    1e90:	ef 5a       	subi	r30, 0xAF	; 175
    1e92:	ff 4f       	sbci	r31, 0xFF	; 255
    1e94:	60 81       	ld	r22, Z
    1e96:	71 81       	ldd	r23, Z+1	; 0x01
    1e98:	82 81       	ldd	r24, Z+2	; 0x02
    1e9a:	93 81       	ldd	r25, Z+3	; 0x03
    1e9c:	20 e0       	ldi	r18, 0x00	; 0
    1e9e:	30 e0       	ldi	r19, 0x00	; 0
    1ea0:	4a ef       	ldi	r20, 0xFA	; 250
    1ea2:	54 e4       	ldi	r21, 0x44	; 68
    1ea4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ea8:	dc 01       	movw	r26, r24
    1eaa:	cb 01       	movw	r24, r22
    1eac:	f8 01       	movw	r30, r16
    1eae:	80 83       	st	Z, r24
    1eb0:	91 83       	std	Z+1, r25	; 0x01
    1eb2:	a2 83       	std	Z+2, r26	; 0x02
    1eb4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1eb6:	fe 01       	movw	r30, r28
    1eb8:	e3 5b       	subi	r30, 0xB3	; 179
    1eba:	ff 4f       	sbci	r31, 0xFF	; 255
    1ebc:	60 81       	ld	r22, Z
    1ebe:	71 81       	ldd	r23, Z+1	; 0x01
    1ec0:	82 81       	ldd	r24, Z+2	; 0x02
    1ec2:	93 81       	ldd	r25, Z+3	; 0x03
    1ec4:	20 e0       	ldi	r18, 0x00	; 0
    1ec6:	30 e0       	ldi	r19, 0x00	; 0
    1ec8:	40 e8       	ldi	r20, 0x80	; 128
    1eca:	5f e3       	ldi	r21, 0x3F	; 63
    1ecc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1ed0:	88 23       	and	r24, r24
    1ed2:	44 f4       	brge	.+16     	; 0x1ee4 <Stepper_voidRotate_clockwise_HalfStep+0x3d0>
		__ticks = 1;
    1ed4:	fe 01       	movw	r30, r28
    1ed6:	e5 5b       	subi	r30, 0xB5	; 181
    1ed8:	ff 4f       	sbci	r31, 0xFF	; 255
    1eda:	81 e0       	ldi	r24, 0x01	; 1
    1edc:	90 e0       	ldi	r25, 0x00	; 0
    1ede:	91 83       	std	Z+1, r25	; 0x01
    1ee0:	80 83       	st	Z, r24
    1ee2:	64 c0       	rjmp	.+200    	; 0x1fac <Stepper_voidRotate_clockwise_HalfStep+0x498>
	else if (__tmp > 65535)
    1ee4:	fe 01       	movw	r30, r28
    1ee6:	e3 5b       	subi	r30, 0xB3	; 179
    1ee8:	ff 4f       	sbci	r31, 0xFF	; 255
    1eea:	60 81       	ld	r22, Z
    1eec:	71 81       	ldd	r23, Z+1	; 0x01
    1eee:	82 81       	ldd	r24, Z+2	; 0x02
    1ef0:	93 81       	ldd	r25, Z+3	; 0x03
    1ef2:	20 e0       	ldi	r18, 0x00	; 0
    1ef4:	3f ef       	ldi	r19, 0xFF	; 255
    1ef6:	4f e7       	ldi	r20, 0x7F	; 127
    1ef8:	57 e4       	ldi	r21, 0x47	; 71
    1efa:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1efe:	18 16       	cp	r1, r24
    1f00:	0c f0       	brlt	.+2      	; 0x1f04 <Stepper_voidRotate_clockwise_HalfStep+0x3f0>
    1f02:	43 c0       	rjmp	.+134    	; 0x1f8a <Stepper_voidRotate_clockwise_HalfStep+0x476>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f04:	fe 01       	movw	r30, r28
    1f06:	ef 5a       	subi	r30, 0xAF	; 175
    1f08:	ff 4f       	sbci	r31, 0xFF	; 255
    1f0a:	60 81       	ld	r22, Z
    1f0c:	71 81       	ldd	r23, Z+1	; 0x01
    1f0e:	82 81       	ldd	r24, Z+2	; 0x02
    1f10:	93 81       	ldd	r25, Z+3	; 0x03
    1f12:	20 e0       	ldi	r18, 0x00	; 0
    1f14:	30 e0       	ldi	r19, 0x00	; 0
    1f16:	40 e2       	ldi	r20, 0x20	; 32
    1f18:	51 e4       	ldi	r21, 0x41	; 65
    1f1a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f1e:	dc 01       	movw	r26, r24
    1f20:	cb 01       	movw	r24, r22
    1f22:	8e 01       	movw	r16, r28
    1f24:	05 5b       	subi	r16, 0xB5	; 181
    1f26:	1f 4f       	sbci	r17, 0xFF	; 255
    1f28:	bc 01       	movw	r22, r24
    1f2a:	cd 01       	movw	r24, r26
    1f2c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f30:	dc 01       	movw	r26, r24
    1f32:	cb 01       	movw	r24, r22
    1f34:	f8 01       	movw	r30, r16
    1f36:	91 83       	std	Z+1, r25	; 0x01
    1f38:	80 83       	st	Z, r24
    1f3a:	1f c0       	rjmp	.+62     	; 0x1f7a <Stepper_voidRotate_clockwise_HalfStep+0x466>
    1f3c:	fe 01       	movw	r30, r28
    1f3e:	e7 5b       	subi	r30, 0xB7	; 183
    1f40:	ff 4f       	sbci	r31, 0xFF	; 255
    1f42:	88 ec       	ldi	r24, 0xC8	; 200
    1f44:	90 e0       	ldi	r25, 0x00	; 0
    1f46:	91 83       	std	Z+1, r25	; 0x01
    1f48:	80 83       	st	Z, r24
    1f4a:	fe 01       	movw	r30, r28
    1f4c:	e7 5b       	subi	r30, 0xB7	; 183
    1f4e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f50:	80 81       	ld	r24, Z
    1f52:	91 81       	ldd	r25, Z+1	; 0x01
    1f54:	01 97       	sbiw	r24, 0x01	; 1
    1f56:	f1 f7       	brne	.-4      	; 0x1f54 <Stepper_voidRotate_clockwise_HalfStep+0x440>
    1f58:	fe 01       	movw	r30, r28
    1f5a:	e7 5b       	subi	r30, 0xB7	; 183
    1f5c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f5e:	91 83       	std	Z+1, r25	; 0x01
    1f60:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f62:	de 01       	movw	r26, r28
    1f64:	a5 5b       	subi	r26, 0xB5	; 181
    1f66:	bf 4f       	sbci	r27, 0xFF	; 255
    1f68:	fe 01       	movw	r30, r28
    1f6a:	e5 5b       	subi	r30, 0xB5	; 181
    1f6c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f6e:	80 81       	ld	r24, Z
    1f70:	91 81       	ldd	r25, Z+1	; 0x01
    1f72:	01 97       	sbiw	r24, 0x01	; 1
    1f74:	11 96       	adiw	r26, 0x01	; 1
    1f76:	9c 93       	st	X, r25
    1f78:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f7a:	fe 01       	movw	r30, r28
    1f7c:	e5 5b       	subi	r30, 0xB5	; 181
    1f7e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f80:	80 81       	ld	r24, Z
    1f82:	91 81       	ldd	r25, Z+1	; 0x01
    1f84:	00 97       	sbiw	r24, 0x00	; 0
    1f86:	d1 f6       	brne	.-76     	; 0x1f3c <Stepper_voidRotate_clockwise_HalfStep+0x428>
    1f88:	27 c0       	rjmp	.+78     	; 0x1fd8 <Stepper_voidRotate_clockwise_HalfStep+0x4c4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f8a:	8e 01       	movw	r16, r28
    1f8c:	05 5b       	subi	r16, 0xB5	; 181
    1f8e:	1f 4f       	sbci	r17, 0xFF	; 255
    1f90:	fe 01       	movw	r30, r28
    1f92:	e3 5b       	subi	r30, 0xB3	; 179
    1f94:	ff 4f       	sbci	r31, 0xFF	; 255
    1f96:	60 81       	ld	r22, Z
    1f98:	71 81       	ldd	r23, Z+1	; 0x01
    1f9a:	82 81       	ldd	r24, Z+2	; 0x02
    1f9c:	93 81       	ldd	r25, Z+3	; 0x03
    1f9e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1fa2:	dc 01       	movw	r26, r24
    1fa4:	cb 01       	movw	r24, r22
    1fa6:	f8 01       	movw	r30, r16
    1fa8:	91 83       	std	Z+1, r25	; 0x01
    1faa:	80 83       	st	Z, r24
    1fac:	de 01       	movw	r26, r28
    1fae:	a9 5b       	subi	r26, 0xB9	; 185
    1fb0:	bf 4f       	sbci	r27, 0xFF	; 255
    1fb2:	fe 01       	movw	r30, r28
    1fb4:	e5 5b       	subi	r30, 0xB5	; 181
    1fb6:	ff 4f       	sbci	r31, 0xFF	; 255
    1fb8:	80 81       	ld	r24, Z
    1fba:	91 81       	ldd	r25, Z+1	; 0x01
    1fbc:	8d 93       	st	X+, r24
    1fbe:	9c 93       	st	X, r25
    1fc0:	fe 01       	movw	r30, r28
    1fc2:	e9 5b       	subi	r30, 0xB9	; 185
    1fc4:	ff 4f       	sbci	r31, 0xFF	; 255
    1fc6:	80 81       	ld	r24, Z
    1fc8:	91 81       	ldd	r25, Z+1	; 0x01
    1fca:	01 97       	sbiw	r24, 0x01	; 1
    1fcc:	f1 f7       	brne	.-4      	; 0x1fca <Stepper_voidRotate_clockwise_HalfStep+0x4b6>
    1fce:	fe 01       	movw	r30, r28
    1fd0:	e9 5b       	subi	r30, 0xB9	; 185
    1fd2:	ff 4f       	sbci	r31, 0xFF	; 255
    1fd4:	91 83       	std	Z+1, r25	; 0x01
    1fd6:	80 83       	st	Z, r24
	_delay_ms(10);
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_BLUE,DIO_u8_LOW);
    1fd8:	80 e0       	ldi	r24, 0x00	; 0
    1fda:	60 e0       	ldi	r22, 0x00	; 0
    1fdc:	40 e0       	ldi	r20, 0x00	; 0
    1fde:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_PINK,DIO_u8_HIGH);
    1fe2:	80 e0       	ldi	r24, 0x00	; 0
    1fe4:	61 e0       	ldi	r22, 0x01	; 1
    1fe6:	41 e0       	ldi	r20, 0x01	; 1
    1fe8:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_YELLOW,DIO_u8_LOW);
    1fec:	80 e0       	ldi	r24, 0x00	; 0
    1fee:	62 e0       	ldi	r22, 0x02	; 2
    1ff0:	40 e0       	ldi	r20, 0x00	; 0
    1ff2:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_ORANGE,DIO_u8_LOW);
    1ff6:	80 e0       	ldi	r24, 0x00	; 0
    1ff8:	63 e0       	ldi	r22, 0x03	; 3
    1ffa:	40 e0       	ldi	r20, 0x00	; 0
    1ffc:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
    2000:	fe 01       	movw	r30, r28
    2002:	ed 5b       	subi	r30, 0xBD	; 189
    2004:	ff 4f       	sbci	r31, 0xFF	; 255
    2006:	80 e0       	ldi	r24, 0x00	; 0
    2008:	90 e0       	ldi	r25, 0x00	; 0
    200a:	a0 e2       	ldi	r26, 0x20	; 32
    200c:	b1 e4       	ldi	r27, 0x41	; 65
    200e:	80 83       	st	Z, r24
    2010:	91 83       	std	Z+1, r25	; 0x01
    2012:	a2 83       	std	Z+2, r26	; 0x02
    2014:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2016:	8e 01       	movw	r16, r28
    2018:	01 5c       	subi	r16, 0xC1	; 193
    201a:	1f 4f       	sbci	r17, 0xFF	; 255
    201c:	fe 01       	movw	r30, r28
    201e:	ed 5b       	subi	r30, 0xBD	; 189
    2020:	ff 4f       	sbci	r31, 0xFF	; 255
    2022:	60 81       	ld	r22, Z
    2024:	71 81       	ldd	r23, Z+1	; 0x01
    2026:	82 81       	ldd	r24, Z+2	; 0x02
    2028:	93 81       	ldd	r25, Z+3	; 0x03
    202a:	20 e0       	ldi	r18, 0x00	; 0
    202c:	30 e0       	ldi	r19, 0x00	; 0
    202e:	4a ef       	ldi	r20, 0xFA	; 250
    2030:	54 e4       	ldi	r21, 0x44	; 68
    2032:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2036:	dc 01       	movw	r26, r24
    2038:	cb 01       	movw	r24, r22
    203a:	f8 01       	movw	r30, r16
    203c:	80 83       	st	Z, r24
    203e:	91 83       	std	Z+1, r25	; 0x01
    2040:	a2 83       	std	Z+2, r26	; 0x02
    2042:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2044:	fe 01       	movw	r30, r28
    2046:	ff 96       	adiw	r30, 0x3f	; 63
    2048:	60 81       	ld	r22, Z
    204a:	71 81       	ldd	r23, Z+1	; 0x01
    204c:	82 81       	ldd	r24, Z+2	; 0x02
    204e:	93 81       	ldd	r25, Z+3	; 0x03
    2050:	20 e0       	ldi	r18, 0x00	; 0
    2052:	30 e0       	ldi	r19, 0x00	; 0
    2054:	40 e8       	ldi	r20, 0x80	; 128
    2056:	5f e3       	ldi	r21, 0x3F	; 63
    2058:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    205c:	88 23       	and	r24, r24
    205e:	2c f4       	brge	.+10     	; 0x206a <Stepper_voidRotate_clockwise_HalfStep+0x556>
		__ticks = 1;
    2060:	81 e0       	ldi	r24, 0x01	; 1
    2062:	90 e0       	ldi	r25, 0x00	; 0
    2064:	9e af       	std	Y+62, r25	; 0x3e
    2066:	8d af       	std	Y+61, r24	; 0x3d
    2068:	46 c0       	rjmp	.+140    	; 0x20f6 <Stepper_voidRotate_clockwise_HalfStep+0x5e2>
	else if (__tmp > 65535)
    206a:	fe 01       	movw	r30, r28
    206c:	ff 96       	adiw	r30, 0x3f	; 63
    206e:	60 81       	ld	r22, Z
    2070:	71 81       	ldd	r23, Z+1	; 0x01
    2072:	82 81       	ldd	r24, Z+2	; 0x02
    2074:	93 81       	ldd	r25, Z+3	; 0x03
    2076:	20 e0       	ldi	r18, 0x00	; 0
    2078:	3f ef       	ldi	r19, 0xFF	; 255
    207a:	4f e7       	ldi	r20, 0x7F	; 127
    207c:	57 e4       	ldi	r21, 0x47	; 71
    207e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2082:	18 16       	cp	r1, r24
    2084:	64 f5       	brge	.+88     	; 0x20de <Stepper_voidRotate_clockwise_HalfStep+0x5ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2086:	fe 01       	movw	r30, r28
    2088:	ed 5b       	subi	r30, 0xBD	; 189
    208a:	ff 4f       	sbci	r31, 0xFF	; 255
    208c:	60 81       	ld	r22, Z
    208e:	71 81       	ldd	r23, Z+1	; 0x01
    2090:	82 81       	ldd	r24, Z+2	; 0x02
    2092:	93 81       	ldd	r25, Z+3	; 0x03
    2094:	20 e0       	ldi	r18, 0x00	; 0
    2096:	30 e0       	ldi	r19, 0x00	; 0
    2098:	40 e2       	ldi	r20, 0x20	; 32
    209a:	51 e4       	ldi	r21, 0x41	; 65
    209c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20a0:	dc 01       	movw	r26, r24
    20a2:	cb 01       	movw	r24, r22
    20a4:	bc 01       	movw	r22, r24
    20a6:	cd 01       	movw	r24, r26
    20a8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    20ac:	dc 01       	movw	r26, r24
    20ae:	cb 01       	movw	r24, r22
    20b0:	9e af       	std	Y+62, r25	; 0x3e
    20b2:	8d af       	std	Y+61, r24	; 0x3d
    20b4:	0f c0       	rjmp	.+30     	; 0x20d4 <Stepper_voidRotate_clockwise_HalfStep+0x5c0>
    20b6:	88 ec       	ldi	r24, 0xC8	; 200
    20b8:	90 e0       	ldi	r25, 0x00	; 0
    20ba:	9c af       	std	Y+60, r25	; 0x3c
    20bc:	8b af       	std	Y+59, r24	; 0x3b
    20be:	8b ad       	ldd	r24, Y+59	; 0x3b
    20c0:	9c ad       	ldd	r25, Y+60	; 0x3c
    20c2:	01 97       	sbiw	r24, 0x01	; 1
    20c4:	f1 f7       	brne	.-4      	; 0x20c2 <Stepper_voidRotate_clockwise_HalfStep+0x5ae>
    20c6:	9c af       	std	Y+60, r25	; 0x3c
    20c8:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    20ca:	8d ad       	ldd	r24, Y+61	; 0x3d
    20cc:	9e ad       	ldd	r25, Y+62	; 0x3e
    20ce:	01 97       	sbiw	r24, 0x01	; 1
    20d0:	9e af       	std	Y+62, r25	; 0x3e
    20d2:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    20d4:	8d ad       	ldd	r24, Y+61	; 0x3d
    20d6:	9e ad       	ldd	r25, Y+62	; 0x3e
    20d8:	00 97       	sbiw	r24, 0x00	; 0
    20da:	69 f7       	brne	.-38     	; 0x20b6 <Stepper_voidRotate_clockwise_HalfStep+0x5a2>
    20dc:	16 c0       	rjmp	.+44     	; 0x210a <Stepper_voidRotate_clockwise_HalfStep+0x5f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    20de:	fe 01       	movw	r30, r28
    20e0:	ff 96       	adiw	r30, 0x3f	; 63
    20e2:	60 81       	ld	r22, Z
    20e4:	71 81       	ldd	r23, Z+1	; 0x01
    20e6:	82 81       	ldd	r24, Z+2	; 0x02
    20e8:	93 81       	ldd	r25, Z+3	; 0x03
    20ea:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    20ee:	dc 01       	movw	r26, r24
    20f0:	cb 01       	movw	r24, r22
    20f2:	9e af       	std	Y+62, r25	; 0x3e
    20f4:	8d af       	std	Y+61, r24	; 0x3d
    20f6:	8d ad       	ldd	r24, Y+61	; 0x3d
    20f8:	9e ad       	ldd	r25, Y+62	; 0x3e
    20fa:	9a af       	std	Y+58, r25	; 0x3a
    20fc:	89 af       	std	Y+57, r24	; 0x39
    20fe:	89 ad       	ldd	r24, Y+57	; 0x39
    2100:	9a ad       	ldd	r25, Y+58	; 0x3a
    2102:	01 97       	sbiw	r24, 0x01	; 1
    2104:	f1 f7       	brne	.-4      	; 0x2102 <Stepper_voidRotate_clockwise_HalfStep+0x5ee>
    2106:	9a af       	std	Y+58, r25	; 0x3a
    2108:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(10);
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_BLUE,DIO_u8_LOW);
    210a:	80 e0       	ldi	r24, 0x00	; 0
    210c:	60 e0       	ldi	r22, 0x00	; 0
    210e:	40 e0       	ldi	r20, 0x00	; 0
    2110:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_PINK,DIO_u8_HIGH);
    2114:	80 e0       	ldi	r24, 0x00	; 0
    2116:	61 e0       	ldi	r22, 0x01	; 1
    2118:	41 e0       	ldi	r20, 0x01	; 1
    211a:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_YELLOW,DIO_u8_HIGH);
    211e:	80 e0       	ldi	r24, 0x00	; 0
    2120:	62 e0       	ldi	r22, 0x02	; 2
    2122:	41 e0       	ldi	r20, 0x01	; 1
    2124:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_ORANGE,DIO_u8_LOW);
    2128:	80 e0       	ldi	r24, 0x00	; 0
    212a:	63 e0       	ldi	r22, 0x03	; 3
    212c:	40 e0       	ldi	r20, 0x00	; 0
    212e:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
    2132:	80 e0       	ldi	r24, 0x00	; 0
    2134:	90 e0       	ldi	r25, 0x00	; 0
    2136:	a0 e2       	ldi	r26, 0x20	; 32
    2138:	b1 e4       	ldi	r27, 0x41	; 65
    213a:	8d ab       	std	Y+53, r24	; 0x35
    213c:	9e ab       	std	Y+54, r25	; 0x36
    213e:	af ab       	std	Y+55, r26	; 0x37
    2140:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2142:	6d a9       	ldd	r22, Y+53	; 0x35
    2144:	7e a9       	ldd	r23, Y+54	; 0x36
    2146:	8f a9       	ldd	r24, Y+55	; 0x37
    2148:	98 ad       	ldd	r25, Y+56	; 0x38
    214a:	20 e0       	ldi	r18, 0x00	; 0
    214c:	30 e0       	ldi	r19, 0x00	; 0
    214e:	4a ef       	ldi	r20, 0xFA	; 250
    2150:	54 e4       	ldi	r21, 0x44	; 68
    2152:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2156:	dc 01       	movw	r26, r24
    2158:	cb 01       	movw	r24, r22
    215a:	89 ab       	std	Y+49, r24	; 0x31
    215c:	9a ab       	std	Y+50, r25	; 0x32
    215e:	ab ab       	std	Y+51, r26	; 0x33
    2160:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2162:	69 a9       	ldd	r22, Y+49	; 0x31
    2164:	7a a9       	ldd	r23, Y+50	; 0x32
    2166:	8b a9       	ldd	r24, Y+51	; 0x33
    2168:	9c a9       	ldd	r25, Y+52	; 0x34
    216a:	20 e0       	ldi	r18, 0x00	; 0
    216c:	30 e0       	ldi	r19, 0x00	; 0
    216e:	40 e8       	ldi	r20, 0x80	; 128
    2170:	5f e3       	ldi	r21, 0x3F	; 63
    2172:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2176:	88 23       	and	r24, r24
    2178:	2c f4       	brge	.+10     	; 0x2184 <Stepper_voidRotate_clockwise_HalfStep+0x670>
		__ticks = 1;
    217a:	81 e0       	ldi	r24, 0x01	; 1
    217c:	90 e0       	ldi	r25, 0x00	; 0
    217e:	98 ab       	std	Y+48, r25	; 0x30
    2180:	8f a7       	std	Y+47, r24	; 0x2f
    2182:	3f c0       	rjmp	.+126    	; 0x2202 <Stepper_voidRotate_clockwise_HalfStep+0x6ee>
	else if (__tmp > 65535)
    2184:	69 a9       	ldd	r22, Y+49	; 0x31
    2186:	7a a9       	ldd	r23, Y+50	; 0x32
    2188:	8b a9       	ldd	r24, Y+51	; 0x33
    218a:	9c a9       	ldd	r25, Y+52	; 0x34
    218c:	20 e0       	ldi	r18, 0x00	; 0
    218e:	3f ef       	ldi	r19, 0xFF	; 255
    2190:	4f e7       	ldi	r20, 0x7F	; 127
    2192:	57 e4       	ldi	r21, 0x47	; 71
    2194:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2198:	18 16       	cp	r1, r24
    219a:	4c f5       	brge	.+82     	; 0x21ee <Stepper_voidRotate_clockwise_HalfStep+0x6da>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    219c:	6d a9       	ldd	r22, Y+53	; 0x35
    219e:	7e a9       	ldd	r23, Y+54	; 0x36
    21a0:	8f a9       	ldd	r24, Y+55	; 0x37
    21a2:	98 ad       	ldd	r25, Y+56	; 0x38
    21a4:	20 e0       	ldi	r18, 0x00	; 0
    21a6:	30 e0       	ldi	r19, 0x00	; 0
    21a8:	40 e2       	ldi	r20, 0x20	; 32
    21aa:	51 e4       	ldi	r21, 0x41	; 65
    21ac:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    21b0:	dc 01       	movw	r26, r24
    21b2:	cb 01       	movw	r24, r22
    21b4:	bc 01       	movw	r22, r24
    21b6:	cd 01       	movw	r24, r26
    21b8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21bc:	dc 01       	movw	r26, r24
    21be:	cb 01       	movw	r24, r22
    21c0:	98 ab       	std	Y+48, r25	; 0x30
    21c2:	8f a7       	std	Y+47, r24	; 0x2f
    21c4:	0f c0       	rjmp	.+30     	; 0x21e4 <Stepper_voidRotate_clockwise_HalfStep+0x6d0>
    21c6:	88 ec       	ldi	r24, 0xC8	; 200
    21c8:	90 e0       	ldi	r25, 0x00	; 0
    21ca:	9e a7       	std	Y+46, r25	; 0x2e
    21cc:	8d a7       	std	Y+45, r24	; 0x2d
    21ce:	8d a5       	ldd	r24, Y+45	; 0x2d
    21d0:	9e a5       	ldd	r25, Y+46	; 0x2e
    21d2:	01 97       	sbiw	r24, 0x01	; 1
    21d4:	f1 f7       	brne	.-4      	; 0x21d2 <Stepper_voidRotate_clockwise_HalfStep+0x6be>
    21d6:	9e a7       	std	Y+46, r25	; 0x2e
    21d8:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    21da:	8f a5       	ldd	r24, Y+47	; 0x2f
    21dc:	98 a9       	ldd	r25, Y+48	; 0x30
    21de:	01 97       	sbiw	r24, 0x01	; 1
    21e0:	98 ab       	std	Y+48, r25	; 0x30
    21e2:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    21e4:	8f a5       	ldd	r24, Y+47	; 0x2f
    21e6:	98 a9       	ldd	r25, Y+48	; 0x30
    21e8:	00 97       	sbiw	r24, 0x00	; 0
    21ea:	69 f7       	brne	.-38     	; 0x21c6 <Stepper_voidRotate_clockwise_HalfStep+0x6b2>
    21ec:	14 c0       	rjmp	.+40     	; 0x2216 <Stepper_voidRotate_clockwise_HalfStep+0x702>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    21ee:	69 a9       	ldd	r22, Y+49	; 0x31
    21f0:	7a a9       	ldd	r23, Y+50	; 0x32
    21f2:	8b a9       	ldd	r24, Y+51	; 0x33
    21f4:	9c a9       	ldd	r25, Y+52	; 0x34
    21f6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21fa:	dc 01       	movw	r26, r24
    21fc:	cb 01       	movw	r24, r22
    21fe:	98 ab       	std	Y+48, r25	; 0x30
    2200:	8f a7       	std	Y+47, r24	; 0x2f
    2202:	8f a5       	ldd	r24, Y+47	; 0x2f
    2204:	98 a9       	ldd	r25, Y+48	; 0x30
    2206:	9c a7       	std	Y+44, r25	; 0x2c
    2208:	8b a7       	std	Y+43, r24	; 0x2b
    220a:	8b a5       	ldd	r24, Y+43	; 0x2b
    220c:	9c a5       	ldd	r25, Y+44	; 0x2c
    220e:	01 97       	sbiw	r24, 0x01	; 1
    2210:	f1 f7       	brne	.-4      	; 0x220e <Stepper_voidRotate_clockwise_HalfStep+0x6fa>
    2212:	9c a7       	std	Y+44, r25	; 0x2c
    2214:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(10);
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_BLUE,DIO_u8_LOW);
    2216:	80 e0       	ldi	r24, 0x00	; 0
    2218:	60 e0       	ldi	r22, 0x00	; 0
    221a:	40 e0       	ldi	r20, 0x00	; 0
    221c:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_PINK,DIO_u8_LOW);
    2220:	80 e0       	ldi	r24, 0x00	; 0
    2222:	61 e0       	ldi	r22, 0x01	; 1
    2224:	40 e0       	ldi	r20, 0x00	; 0
    2226:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_YELLOW,DIO_u8_HIGH);
    222a:	80 e0       	ldi	r24, 0x00	; 0
    222c:	62 e0       	ldi	r22, 0x02	; 2
    222e:	41 e0       	ldi	r20, 0x01	; 1
    2230:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_ORANGE,DIO_u8_LOW);
    2234:	80 e0       	ldi	r24, 0x00	; 0
    2236:	63 e0       	ldi	r22, 0x03	; 3
    2238:	40 e0       	ldi	r20, 0x00	; 0
    223a:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
    223e:	80 e0       	ldi	r24, 0x00	; 0
    2240:	90 e0       	ldi	r25, 0x00	; 0
    2242:	a0 e2       	ldi	r26, 0x20	; 32
    2244:	b1 e4       	ldi	r27, 0x41	; 65
    2246:	8f a3       	std	Y+39, r24	; 0x27
    2248:	98 a7       	std	Y+40, r25	; 0x28
    224a:	a9 a7       	std	Y+41, r26	; 0x29
    224c:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    224e:	6f a1       	ldd	r22, Y+39	; 0x27
    2250:	78 a5       	ldd	r23, Y+40	; 0x28
    2252:	89 a5       	ldd	r24, Y+41	; 0x29
    2254:	9a a5       	ldd	r25, Y+42	; 0x2a
    2256:	20 e0       	ldi	r18, 0x00	; 0
    2258:	30 e0       	ldi	r19, 0x00	; 0
    225a:	4a ef       	ldi	r20, 0xFA	; 250
    225c:	54 e4       	ldi	r21, 0x44	; 68
    225e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2262:	dc 01       	movw	r26, r24
    2264:	cb 01       	movw	r24, r22
    2266:	8b a3       	std	Y+35, r24	; 0x23
    2268:	9c a3       	std	Y+36, r25	; 0x24
    226a:	ad a3       	std	Y+37, r26	; 0x25
    226c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    226e:	6b a1       	ldd	r22, Y+35	; 0x23
    2270:	7c a1       	ldd	r23, Y+36	; 0x24
    2272:	8d a1       	ldd	r24, Y+37	; 0x25
    2274:	9e a1       	ldd	r25, Y+38	; 0x26
    2276:	20 e0       	ldi	r18, 0x00	; 0
    2278:	30 e0       	ldi	r19, 0x00	; 0
    227a:	40 e8       	ldi	r20, 0x80	; 128
    227c:	5f e3       	ldi	r21, 0x3F	; 63
    227e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2282:	88 23       	and	r24, r24
    2284:	2c f4       	brge	.+10     	; 0x2290 <Stepper_voidRotate_clockwise_HalfStep+0x77c>
		__ticks = 1;
    2286:	81 e0       	ldi	r24, 0x01	; 1
    2288:	90 e0       	ldi	r25, 0x00	; 0
    228a:	9a a3       	std	Y+34, r25	; 0x22
    228c:	89 a3       	std	Y+33, r24	; 0x21
    228e:	3f c0       	rjmp	.+126    	; 0x230e <Stepper_voidRotate_clockwise_HalfStep+0x7fa>
	else if (__tmp > 65535)
    2290:	6b a1       	ldd	r22, Y+35	; 0x23
    2292:	7c a1       	ldd	r23, Y+36	; 0x24
    2294:	8d a1       	ldd	r24, Y+37	; 0x25
    2296:	9e a1       	ldd	r25, Y+38	; 0x26
    2298:	20 e0       	ldi	r18, 0x00	; 0
    229a:	3f ef       	ldi	r19, 0xFF	; 255
    229c:	4f e7       	ldi	r20, 0x7F	; 127
    229e:	57 e4       	ldi	r21, 0x47	; 71
    22a0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    22a4:	18 16       	cp	r1, r24
    22a6:	4c f5       	brge	.+82     	; 0x22fa <Stepper_voidRotate_clockwise_HalfStep+0x7e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    22a8:	6f a1       	ldd	r22, Y+39	; 0x27
    22aa:	78 a5       	ldd	r23, Y+40	; 0x28
    22ac:	89 a5       	ldd	r24, Y+41	; 0x29
    22ae:	9a a5       	ldd	r25, Y+42	; 0x2a
    22b0:	20 e0       	ldi	r18, 0x00	; 0
    22b2:	30 e0       	ldi	r19, 0x00	; 0
    22b4:	40 e2       	ldi	r20, 0x20	; 32
    22b6:	51 e4       	ldi	r21, 0x41	; 65
    22b8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22bc:	dc 01       	movw	r26, r24
    22be:	cb 01       	movw	r24, r22
    22c0:	bc 01       	movw	r22, r24
    22c2:	cd 01       	movw	r24, r26
    22c4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    22c8:	dc 01       	movw	r26, r24
    22ca:	cb 01       	movw	r24, r22
    22cc:	9a a3       	std	Y+34, r25	; 0x22
    22ce:	89 a3       	std	Y+33, r24	; 0x21
    22d0:	0f c0       	rjmp	.+30     	; 0x22f0 <Stepper_voidRotate_clockwise_HalfStep+0x7dc>
    22d2:	88 ec       	ldi	r24, 0xC8	; 200
    22d4:	90 e0       	ldi	r25, 0x00	; 0
    22d6:	98 a3       	std	Y+32, r25	; 0x20
    22d8:	8f 8f       	std	Y+31, r24	; 0x1f
    22da:	8f 8d       	ldd	r24, Y+31	; 0x1f
    22dc:	98 a1       	ldd	r25, Y+32	; 0x20
    22de:	01 97       	sbiw	r24, 0x01	; 1
    22e0:	f1 f7       	brne	.-4      	; 0x22de <Stepper_voidRotate_clockwise_HalfStep+0x7ca>
    22e2:	98 a3       	std	Y+32, r25	; 0x20
    22e4:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    22e6:	89 a1       	ldd	r24, Y+33	; 0x21
    22e8:	9a a1       	ldd	r25, Y+34	; 0x22
    22ea:	01 97       	sbiw	r24, 0x01	; 1
    22ec:	9a a3       	std	Y+34, r25	; 0x22
    22ee:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    22f0:	89 a1       	ldd	r24, Y+33	; 0x21
    22f2:	9a a1       	ldd	r25, Y+34	; 0x22
    22f4:	00 97       	sbiw	r24, 0x00	; 0
    22f6:	69 f7       	brne	.-38     	; 0x22d2 <Stepper_voidRotate_clockwise_HalfStep+0x7be>
    22f8:	14 c0       	rjmp	.+40     	; 0x2322 <Stepper_voidRotate_clockwise_HalfStep+0x80e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    22fa:	6b a1       	ldd	r22, Y+35	; 0x23
    22fc:	7c a1       	ldd	r23, Y+36	; 0x24
    22fe:	8d a1       	ldd	r24, Y+37	; 0x25
    2300:	9e a1       	ldd	r25, Y+38	; 0x26
    2302:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2306:	dc 01       	movw	r26, r24
    2308:	cb 01       	movw	r24, r22
    230a:	9a a3       	std	Y+34, r25	; 0x22
    230c:	89 a3       	std	Y+33, r24	; 0x21
    230e:	89 a1       	ldd	r24, Y+33	; 0x21
    2310:	9a a1       	ldd	r25, Y+34	; 0x22
    2312:	9e 8f       	std	Y+30, r25	; 0x1e
    2314:	8d 8f       	std	Y+29, r24	; 0x1d
    2316:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2318:	9e 8d       	ldd	r25, Y+30	; 0x1e
    231a:	01 97       	sbiw	r24, 0x01	; 1
    231c:	f1 f7       	brne	.-4      	; 0x231a <Stepper_voidRotate_clockwise_HalfStep+0x806>
    231e:	9e 8f       	std	Y+30, r25	; 0x1e
    2320:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(10);
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_BLUE,DIO_u8_LOW);
    2322:	80 e0       	ldi	r24, 0x00	; 0
    2324:	60 e0       	ldi	r22, 0x00	; 0
    2326:	40 e0       	ldi	r20, 0x00	; 0
    2328:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_PINK,DIO_u8_LOW);
    232c:	80 e0       	ldi	r24, 0x00	; 0
    232e:	61 e0       	ldi	r22, 0x01	; 1
    2330:	40 e0       	ldi	r20, 0x00	; 0
    2332:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_YELLOW,DIO_u8_HIGH);
    2336:	80 e0       	ldi	r24, 0x00	; 0
    2338:	62 e0       	ldi	r22, 0x02	; 2
    233a:	41 e0       	ldi	r20, 0x01	; 1
    233c:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_ORANGE,DIO_u8_HIGH);
    2340:	80 e0       	ldi	r24, 0x00	; 0
    2342:	63 e0       	ldi	r22, 0x03	; 3
    2344:	41 e0       	ldi	r20, 0x01	; 1
    2346:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
    234a:	80 e0       	ldi	r24, 0x00	; 0
    234c:	90 e0       	ldi	r25, 0x00	; 0
    234e:	a0 e2       	ldi	r26, 0x20	; 32
    2350:	b1 e4       	ldi	r27, 0x41	; 65
    2352:	89 8f       	std	Y+25, r24	; 0x19
    2354:	9a 8f       	std	Y+26, r25	; 0x1a
    2356:	ab 8f       	std	Y+27, r26	; 0x1b
    2358:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    235a:	69 8d       	ldd	r22, Y+25	; 0x19
    235c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    235e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2360:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2362:	20 e0       	ldi	r18, 0x00	; 0
    2364:	30 e0       	ldi	r19, 0x00	; 0
    2366:	4a ef       	ldi	r20, 0xFA	; 250
    2368:	54 e4       	ldi	r21, 0x44	; 68
    236a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    236e:	dc 01       	movw	r26, r24
    2370:	cb 01       	movw	r24, r22
    2372:	8d 8b       	std	Y+21, r24	; 0x15
    2374:	9e 8b       	std	Y+22, r25	; 0x16
    2376:	af 8b       	std	Y+23, r26	; 0x17
    2378:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    237a:	6d 89       	ldd	r22, Y+21	; 0x15
    237c:	7e 89       	ldd	r23, Y+22	; 0x16
    237e:	8f 89       	ldd	r24, Y+23	; 0x17
    2380:	98 8d       	ldd	r25, Y+24	; 0x18
    2382:	20 e0       	ldi	r18, 0x00	; 0
    2384:	30 e0       	ldi	r19, 0x00	; 0
    2386:	40 e8       	ldi	r20, 0x80	; 128
    2388:	5f e3       	ldi	r21, 0x3F	; 63
    238a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    238e:	88 23       	and	r24, r24
    2390:	2c f4       	brge	.+10     	; 0x239c <Stepper_voidRotate_clockwise_HalfStep+0x888>
		__ticks = 1;
    2392:	81 e0       	ldi	r24, 0x01	; 1
    2394:	90 e0       	ldi	r25, 0x00	; 0
    2396:	9c 8b       	std	Y+20, r25	; 0x14
    2398:	8b 8b       	std	Y+19, r24	; 0x13
    239a:	3f c0       	rjmp	.+126    	; 0x241a <Stepper_voidRotate_clockwise_HalfStep+0x906>
	else if (__tmp > 65535)
    239c:	6d 89       	ldd	r22, Y+21	; 0x15
    239e:	7e 89       	ldd	r23, Y+22	; 0x16
    23a0:	8f 89       	ldd	r24, Y+23	; 0x17
    23a2:	98 8d       	ldd	r25, Y+24	; 0x18
    23a4:	20 e0       	ldi	r18, 0x00	; 0
    23a6:	3f ef       	ldi	r19, 0xFF	; 255
    23a8:	4f e7       	ldi	r20, 0x7F	; 127
    23aa:	57 e4       	ldi	r21, 0x47	; 71
    23ac:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    23b0:	18 16       	cp	r1, r24
    23b2:	4c f5       	brge	.+82     	; 0x2406 <Stepper_voidRotate_clockwise_HalfStep+0x8f2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    23b4:	69 8d       	ldd	r22, Y+25	; 0x19
    23b6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    23b8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    23ba:	9c 8d       	ldd	r25, Y+28	; 0x1c
    23bc:	20 e0       	ldi	r18, 0x00	; 0
    23be:	30 e0       	ldi	r19, 0x00	; 0
    23c0:	40 e2       	ldi	r20, 0x20	; 32
    23c2:	51 e4       	ldi	r21, 0x41	; 65
    23c4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23c8:	dc 01       	movw	r26, r24
    23ca:	cb 01       	movw	r24, r22
    23cc:	bc 01       	movw	r22, r24
    23ce:	cd 01       	movw	r24, r26
    23d0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    23d4:	dc 01       	movw	r26, r24
    23d6:	cb 01       	movw	r24, r22
    23d8:	9c 8b       	std	Y+20, r25	; 0x14
    23da:	8b 8b       	std	Y+19, r24	; 0x13
    23dc:	0f c0       	rjmp	.+30     	; 0x23fc <Stepper_voidRotate_clockwise_HalfStep+0x8e8>
    23de:	88 ec       	ldi	r24, 0xC8	; 200
    23e0:	90 e0       	ldi	r25, 0x00	; 0
    23e2:	9a 8b       	std	Y+18, r25	; 0x12
    23e4:	89 8b       	std	Y+17, r24	; 0x11
    23e6:	89 89       	ldd	r24, Y+17	; 0x11
    23e8:	9a 89       	ldd	r25, Y+18	; 0x12
    23ea:	01 97       	sbiw	r24, 0x01	; 1
    23ec:	f1 f7       	brne	.-4      	; 0x23ea <Stepper_voidRotate_clockwise_HalfStep+0x8d6>
    23ee:	9a 8b       	std	Y+18, r25	; 0x12
    23f0:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    23f2:	8b 89       	ldd	r24, Y+19	; 0x13
    23f4:	9c 89       	ldd	r25, Y+20	; 0x14
    23f6:	01 97       	sbiw	r24, 0x01	; 1
    23f8:	9c 8b       	std	Y+20, r25	; 0x14
    23fa:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    23fc:	8b 89       	ldd	r24, Y+19	; 0x13
    23fe:	9c 89       	ldd	r25, Y+20	; 0x14
    2400:	00 97       	sbiw	r24, 0x00	; 0
    2402:	69 f7       	brne	.-38     	; 0x23de <Stepper_voidRotate_clockwise_HalfStep+0x8ca>
    2404:	14 c0       	rjmp	.+40     	; 0x242e <Stepper_voidRotate_clockwise_HalfStep+0x91a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2406:	6d 89       	ldd	r22, Y+21	; 0x15
    2408:	7e 89       	ldd	r23, Y+22	; 0x16
    240a:	8f 89       	ldd	r24, Y+23	; 0x17
    240c:	98 8d       	ldd	r25, Y+24	; 0x18
    240e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2412:	dc 01       	movw	r26, r24
    2414:	cb 01       	movw	r24, r22
    2416:	9c 8b       	std	Y+20, r25	; 0x14
    2418:	8b 8b       	std	Y+19, r24	; 0x13
    241a:	8b 89       	ldd	r24, Y+19	; 0x13
    241c:	9c 89       	ldd	r25, Y+20	; 0x14
    241e:	98 8b       	std	Y+16, r25	; 0x10
    2420:	8f 87       	std	Y+15, r24	; 0x0f
    2422:	8f 85       	ldd	r24, Y+15	; 0x0f
    2424:	98 89       	ldd	r25, Y+16	; 0x10
    2426:	01 97       	sbiw	r24, 0x01	; 1
    2428:	f1 f7       	brne	.-4      	; 0x2426 <Stepper_voidRotate_clockwise_HalfStep+0x912>
    242a:	98 8b       	std	Y+16, r25	; 0x10
    242c:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(10);
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_BLUE,DIO_u8_LOW);
    242e:	80 e0       	ldi	r24, 0x00	; 0
    2430:	60 e0       	ldi	r22, 0x00	; 0
    2432:	40 e0       	ldi	r20, 0x00	; 0
    2434:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_PINK,DIO_u8_LOW);
    2438:	80 e0       	ldi	r24, 0x00	; 0
    243a:	61 e0       	ldi	r22, 0x01	; 1
    243c:	40 e0       	ldi	r20, 0x00	; 0
    243e:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_YELLOW,DIO_u8_LOW);
    2442:	80 e0       	ldi	r24, 0x00	; 0
    2444:	62 e0       	ldi	r22, 0x02	; 2
    2446:	40 e0       	ldi	r20, 0x00	; 0
    2448:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_ORANGE,DIO_u8_HIGH);
    244c:	80 e0       	ldi	r24, 0x00	; 0
    244e:	63 e0       	ldi	r22, 0x03	; 3
    2450:	41 e0       	ldi	r20, 0x01	; 1
    2452:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
    2456:	80 e0       	ldi	r24, 0x00	; 0
    2458:	90 e0       	ldi	r25, 0x00	; 0
    245a:	a0 e2       	ldi	r26, 0x20	; 32
    245c:	b1 e4       	ldi	r27, 0x41	; 65
    245e:	8b 87       	std	Y+11, r24	; 0x0b
    2460:	9c 87       	std	Y+12, r25	; 0x0c
    2462:	ad 87       	std	Y+13, r26	; 0x0d
    2464:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2466:	6b 85       	ldd	r22, Y+11	; 0x0b
    2468:	7c 85       	ldd	r23, Y+12	; 0x0c
    246a:	8d 85       	ldd	r24, Y+13	; 0x0d
    246c:	9e 85       	ldd	r25, Y+14	; 0x0e
    246e:	20 e0       	ldi	r18, 0x00	; 0
    2470:	30 e0       	ldi	r19, 0x00	; 0
    2472:	4a ef       	ldi	r20, 0xFA	; 250
    2474:	54 e4       	ldi	r21, 0x44	; 68
    2476:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    247a:	dc 01       	movw	r26, r24
    247c:	cb 01       	movw	r24, r22
    247e:	8f 83       	std	Y+7, r24	; 0x07
    2480:	98 87       	std	Y+8, r25	; 0x08
    2482:	a9 87       	std	Y+9, r26	; 0x09
    2484:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2486:	6f 81       	ldd	r22, Y+7	; 0x07
    2488:	78 85       	ldd	r23, Y+8	; 0x08
    248a:	89 85       	ldd	r24, Y+9	; 0x09
    248c:	9a 85       	ldd	r25, Y+10	; 0x0a
    248e:	20 e0       	ldi	r18, 0x00	; 0
    2490:	30 e0       	ldi	r19, 0x00	; 0
    2492:	40 e8       	ldi	r20, 0x80	; 128
    2494:	5f e3       	ldi	r21, 0x3F	; 63
    2496:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    249a:	88 23       	and	r24, r24
    249c:	2c f4       	brge	.+10     	; 0x24a8 <Stepper_voidRotate_clockwise_HalfStep+0x994>
		__ticks = 1;
    249e:	81 e0       	ldi	r24, 0x01	; 1
    24a0:	90 e0       	ldi	r25, 0x00	; 0
    24a2:	9e 83       	std	Y+6, r25	; 0x06
    24a4:	8d 83       	std	Y+5, r24	; 0x05
    24a6:	3f c0       	rjmp	.+126    	; 0x2526 <Stepper_voidRotate_clockwise_HalfStep+0xa12>
	else if (__tmp > 65535)
    24a8:	6f 81       	ldd	r22, Y+7	; 0x07
    24aa:	78 85       	ldd	r23, Y+8	; 0x08
    24ac:	89 85       	ldd	r24, Y+9	; 0x09
    24ae:	9a 85       	ldd	r25, Y+10	; 0x0a
    24b0:	20 e0       	ldi	r18, 0x00	; 0
    24b2:	3f ef       	ldi	r19, 0xFF	; 255
    24b4:	4f e7       	ldi	r20, 0x7F	; 127
    24b6:	57 e4       	ldi	r21, 0x47	; 71
    24b8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    24bc:	18 16       	cp	r1, r24
    24be:	4c f5       	brge	.+82     	; 0x2512 <Stepper_voidRotate_clockwise_HalfStep+0x9fe>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    24c0:	6b 85       	ldd	r22, Y+11	; 0x0b
    24c2:	7c 85       	ldd	r23, Y+12	; 0x0c
    24c4:	8d 85       	ldd	r24, Y+13	; 0x0d
    24c6:	9e 85       	ldd	r25, Y+14	; 0x0e
    24c8:	20 e0       	ldi	r18, 0x00	; 0
    24ca:	30 e0       	ldi	r19, 0x00	; 0
    24cc:	40 e2       	ldi	r20, 0x20	; 32
    24ce:	51 e4       	ldi	r21, 0x41	; 65
    24d0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    24d4:	dc 01       	movw	r26, r24
    24d6:	cb 01       	movw	r24, r22
    24d8:	bc 01       	movw	r22, r24
    24da:	cd 01       	movw	r24, r26
    24dc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    24e0:	dc 01       	movw	r26, r24
    24e2:	cb 01       	movw	r24, r22
    24e4:	9e 83       	std	Y+6, r25	; 0x06
    24e6:	8d 83       	std	Y+5, r24	; 0x05
    24e8:	0f c0       	rjmp	.+30     	; 0x2508 <Stepper_voidRotate_clockwise_HalfStep+0x9f4>
    24ea:	88 ec       	ldi	r24, 0xC8	; 200
    24ec:	90 e0       	ldi	r25, 0x00	; 0
    24ee:	9c 83       	std	Y+4, r25	; 0x04
    24f0:	8b 83       	std	Y+3, r24	; 0x03
    24f2:	8b 81       	ldd	r24, Y+3	; 0x03
    24f4:	9c 81       	ldd	r25, Y+4	; 0x04
    24f6:	01 97       	sbiw	r24, 0x01	; 1
    24f8:	f1 f7       	brne	.-4      	; 0x24f6 <Stepper_voidRotate_clockwise_HalfStep+0x9e2>
    24fa:	9c 83       	std	Y+4, r25	; 0x04
    24fc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    24fe:	8d 81       	ldd	r24, Y+5	; 0x05
    2500:	9e 81       	ldd	r25, Y+6	; 0x06
    2502:	01 97       	sbiw	r24, 0x01	; 1
    2504:	9e 83       	std	Y+6, r25	; 0x06
    2506:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2508:	8d 81       	ldd	r24, Y+5	; 0x05
    250a:	9e 81       	ldd	r25, Y+6	; 0x06
    250c:	00 97       	sbiw	r24, 0x00	; 0
    250e:	69 f7       	brne	.-38     	; 0x24ea <Stepper_voidRotate_clockwise_HalfStep+0x9d6>
    2510:	14 c0       	rjmp	.+40     	; 0x253a <Stepper_voidRotate_clockwise_HalfStep+0xa26>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2512:	6f 81       	ldd	r22, Y+7	; 0x07
    2514:	78 85       	ldd	r23, Y+8	; 0x08
    2516:	89 85       	ldd	r24, Y+9	; 0x09
    2518:	9a 85       	ldd	r25, Y+10	; 0x0a
    251a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    251e:	dc 01       	movw	r26, r24
    2520:	cb 01       	movw	r24, r22
    2522:	9e 83       	std	Y+6, r25	; 0x06
    2524:	8d 83       	std	Y+5, r24	; 0x05
    2526:	8d 81       	ldd	r24, Y+5	; 0x05
    2528:	9e 81       	ldd	r25, Y+6	; 0x06
    252a:	9a 83       	std	Y+2, r25	; 0x02
    252c:	89 83       	std	Y+1, r24	; 0x01
    252e:	89 81       	ldd	r24, Y+1	; 0x01
    2530:	9a 81       	ldd	r25, Y+2	; 0x02
    2532:	01 97       	sbiw	r24, 0x01	; 1
    2534:	f1 f7       	brne	.-4      	; 0x2532 <Stepper_voidRotate_clockwise_HalfStep+0xa1e>
    2536:	9a 83       	std	Y+2, r25	; 0x02
    2538:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);

}
    253a:	c0 59       	subi	r28, 0x90	; 144
    253c:	df 4f       	sbci	r29, 0xFF	; 255
    253e:	0f b6       	in	r0, 0x3f	; 63
    2540:	f8 94       	cli
    2542:	de bf       	out	0x3e, r29	; 62
    2544:	0f be       	out	0x3f, r0	; 63
    2546:	cd bf       	out	0x3d, r28	; 61
    2548:	cf 91       	pop	r28
    254a:	df 91       	pop	r29
    254c:	1f 91       	pop	r17
    254e:	0f 91       	pop	r16
    2550:	08 95       	ret

00002552 <Stepper_voidRotate_Anticlockwise_HalfStep>:
void Stepper_voidRotate_Anticlockwise_HalfStep(void)
{
    2552:	0f 93       	push	r16
    2554:	1f 93       	push	r17
    2556:	df 93       	push	r29
    2558:	cf 93       	push	r28
    255a:	cd b7       	in	r28, 0x3d	; 61
    255c:	de b7       	in	r29, 0x3e	; 62
    255e:	c0 57       	subi	r28, 0x70	; 112
    2560:	d0 40       	sbci	r29, 0x00	; 0
    2562:	0f b6       	in	r0, 0x3f	; 63
    2564:	f8 94       	cli
    2566:	de bf       	out	0x3e, r29	; 62
    2568:	0f be       	out	0x3f, r0	; 63
    256a:	cd bf       	out	0x3d, r28	; 61
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_BLUE,DIO_u8_LOW);
    256c:	80 e0       	ldi	r24, 0x00	; 0
    256e:	60 e0       	ldi	r22, 0x00	; 0
    2570:	40 e0       	ldi	r20, 0x00	; 0
    2572:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_PINK,DIO_u8_LOW);
    2576:	80 e0       	ldi	r24, 0x00	; 0
    2578:	61 e0       	ldi	r22, 0x01	; 1
    257a:	40 e0       	ldi	r20, 0x00	; 0
    257c:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_YELLOW,DIO_u8_LOW);
    2580:	80 e0       	ldi	r24, 0x00	; 0
    2582:	62 e0       	ldi	r22, 0x02	; 2
    2584:	40 e0       	ldi	r20, 0x00	; 0
    2586:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_ORANGE,DIO_u8_HIGH);
    258a:	80 e0       	ldi	r24, 0x00	; 0
    258c:	63 e0       	ldi	r22, 0x03	; 3
    258e:	41 e0       	ldi	r20, 0x01	; 1
    2590:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
    2594:	fe 01       	movw	r30, r28
    2596:	e3 59       	subi	r30, 0x93	; 147
    2598:	ff 4f       	sbci	r31, 0xFF	; 255
    259a:	80 e0       	ldi	r24, 0x00	; 0
    259c:	90 e0       	ldi	r25, 0x00	; 0
    259e:	a0 e2       	ldi	r26, 0x20	; 32
    25a0:	b1 e4       	ldi	r27, 0x41	; 65
    25a2:	80 83       	st	Z, r24
    25a4:	91 83       	std	Z+1, r25	; 0x01
    25a6:	a2 83       	std	Z+2, r26	; 0x02
    25a8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    25aa:	8e 01       	movw	r16, r28
    25ac:	07 59       	subi	r16, 0x97	; 151
    25ae:	1f 4f       	sbci	r17, 0xFF	; 255
    25b0:	fe 01       	movw	r30, r28
    25b2:	e3 59       	subi	r30, 0x93	; 147
    25b4:	ff 4f       	sbci	r31, 0xFF	; 255
    25b6:	60 81       	ld	r22, Z
    25b8:	71 81       	ldd	r23, Z+1	; 0x01
    25ba:	82 81       	ldd	r24, Z+2	; 0x02
    25bc:	93 81       	ldd	r25, Z+3	; 0x03
    25be:	20 e0       	ldi	r18, 0x00	; 0
    25c0:	30 e0       	ldi	r19, 0x00	; 0
    25c2:	4a ef       	ldi	r20, 0xFA	; 250
    25c4:	54 e4       	ldi	r21, 0x44	; 68
    25c6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    25ca:	dc 01       	movw	r26, r24
    25cc:	cb 01       	movw	r24, r22
    25ce:	f8 01       	movw	r30, r16
    25d0:	80 83       	st	Z, r24
    25d2:	91 83       	std	Z+1, r25	; 0x01
    25d4:	a2 83       	std	Z+2, r26	; 0x02
    25d6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    25d8:	fe 01       	movw	r30, r28
    25da:	e7 59       	subi	r30, 0x97	; 151
    25dc:	ff 4f       	sbci	r31, 0xFF	; 255
    25de:	60 81       	ld	r22, Z
    25e0:	71 81       	ldd	r23, Z+1	; 0x01
    25e2:	82 81       	ldd	r24, Z+2	; 0x02
    25e4:	93 81       	ldd	r25, Z+3	; 0x03
    25e6:	20 e0       	ldi	r18, 0x00	; 0
    25e8:	30 e0       	ldi	r19, 0x00	; 0
    25ea:	40 e8       	ldi	r20, 0x80	; 128
    25ec:	5f e3       	ldi	r21, 0x3F	; 63
    25ee:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    25f2:	88 23       	and	r24, r24
    25f4:	44 f4       	brge	.+16     	; 0x2606 <Stepper_voidRotate_Anticlockwise_HalfStep+0xb4>
		__ticks = 1;
    25f6:	fe 01       	movw	r30, r28
    25f8:	e9 59       	subi	r30, 0x99	; 153
    25fa:	ff 4f       	sbci	r31, 0xFF	; 255
    25fc:	81 e0       	ldi	r24, 0x01	; 1
    25fe:	90 e0       	ldi	r25, 0x00	; 0
    2600:	91 83       	std	Z+1, r25	; 0x01
    2602:	80 83       	st	Z, r24
    2604:	64 c0       	rjmp	.+200    	; 0x26ce <Stepper_voidRotate_Anticlockwise_HalfStep+0x17c>
	else if (__tmp > 65535)
    2606:	fe 01       	movw	r30, r28
    2608:	e7 59       	subi	r30, 0x97	; 151
    260a:	ff 4f       	sbci	r31, 0xFF	; 255
    260c:	60 81       	ld	r22, Z
    260e:	71 81       	ldd	r23, Z+1	; 0x01
    2610:	82 81       	ldd	r24, Z+2	; 0x02
    2612:	93 81       	ldd	r25, Z+3	; 0x03
    2614:	20 e0       	ldi	r18, 0x00	; 0
    2616:	3f ef       	ldi	r19, 0xFF	; 255
    2618:	4f e7       	ldi	r20, 0x7F	; 127
    261a:	57 e4       	ldi	r21, 0x47	; 71
    261c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2620:	18 16       	cp	r1, r24
    2622:	0c f0       	brlt	.+2      	; 0x2626 <Stepper_voidRotate_Anticlockwise_HalfStep+0xd4>
    2624:	43 c0       	rjmp	.+134    	; 0x26ac <Stepper_voidRotate_Anticlockwise_HalfStep+0x15a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2626:	fe 01       	movw	r30, r28
    2628:	e3 59       	subi	r30, 0x93	; 147
    262a:	ff 4f       	sbci	r31, 0xFF	; 255
    262c:	60 81       	ld	r22, Z
    262e:	71 81       	ldd	r23, Z+1	; 0x01
    2630:	82 81       	ldd	r24, Z+2	; 0x02
    2632:	93 81       	ldd	r25, Z+3	; 0x03
    2634:	20 e0       	ldi	r18, 0x00	; 0
    2636:	30 e0       	ldi	r19, 0x00	; 0
    2638:	40 e2       	ldi	r20, 0x20	; 32
    263a:	51 e4       	ldi	r21, 0x41	; 65
    263c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2640:	dc 01       	movw	r26, r24
    2642:	cb 01       	movw	r24, r22
    2644:	8e 01       	movw	r16, r28
    2646:	09 59       	subi	r16, 0x99	; 153
    2648:	1f 4f       	sbci	r17, 0xFF	; 255
    264a:	bc 01       	movw	r22, r24
    264c:	cd 01       	movw	r24, r26
    264e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2652:	dc 01       	movw	r26, r24
    2654:	cb 01       	movw	r24, r22
    2656:	f8 01       	movw	r30, r16
    2658:	91 83       	std	Z+1, r25	; 0x01
    265a:	80 83       	st	Z, r24
    265c:	1f c0       	rjmp	.+62     	; 0x269c <Stepper_voidRotate_Anticlockwise_HalfStep+0x14a>
    265e:	fe 01       	movw	r30, r28
    2660:	eb 59       	subi	r30, 0x9B	; 155
    2662:	ff 4f       	sbci	r31, 0xFF	; 255
    2664:	88 ec       	ldi	r24, 0xC8	; 200
    2666:	90 e0       	ldi	r25, 0x00	; 0
    2668:	91 83       	std	Z+1, r25	; 0x01
    266a:	80 83       	st	Z, r24
    266c:	fe 01       	movw	r30, r28
    266e:	eb 59       	subi	r30, 0x9B	; 155
    2670:	ff 4f       	sbci	r31, 0xFF	; 255
    2672:	80 81       	ld	r24, Z
    2674:	91 81       	ldd	r25, Z+1	; 0x01
    2676:	01 97       	sbiw	r24, 0x01	; 1
    2678:	f1 f7       	brne	.-4      	; 0x2676 <Stepper_voidRotate_Anticlockwise_HalfStep+0x124>
    267a:	fe 01       	movw	r30, r28
    267c:	eb 59       	subi	r30, 0x9B	; 155
    267e:	ff 4f       	sbci	r31, 0xFF	; 255
    2680:	91 83       	std	Z+1, r25	; 0x01
    2682:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2684:	de 01       	movw	r26, r28
    2686:	a9 59       	subi	r26, 0x99	; 153
    2688:	bf 4f       	sbci	r27, 0xFF	; 255
    268a:	fe 01       	movw	r30, r28
    268c:	e9 59       	subi	r30, 0x99	; 153
    268e:	ff 4f       	sbci	r31, 0xFF	; 255
    2690:	80 81       	ld	r24, Z
    2692:	91 81       	ldd	r25, Z+1	; 0x01
    2694:	01 97       	sbiw	r24, 0x01	; 1
    2696:	11 96       	adiw	r26, 0x01	; 1
    2698:	9c 93       	st	X, r25
    269a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    269c:	fe 01       	movw	r30, r28
    269e:	e9 59       	subi	r30, 0x99	; 153
    26a0:	ff 4f       	sbci	r31, 0xFF	; 255
    26a2:	80 81       	ld	r24, Z
    26a4:	91 81       	ldd	r25, Z+1	; 0x01
    26a6:	00 97       	sbiw	r24, 0x00	; 0
    26a8:	d1 f6       	brne	.-76     	; 0x265e <Stepper_voidRotate_Anticlockwise_HalfStep+0x10c>
    26aa:	27 c0       	rjmp	.+78     	; 0x26fa <Stepper_voidRotate_Anticlockwise_HalfStep+0x1a8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    26ac:	8e 01       	movw	r16, r28
    26ae:	09 59       	subi	r16, 0x99	; 153
    26b0:	1f 4f       	sbci	r17, 0xFF	; 255
    26b2:	fe 01       	movw	r30, r28
    26b4:	e7 59       	subi	r30, 0x97	; 151
    26b6:	ff 4f       	sbci	r31, 0xFF	; 255
    26b8:	60 81       	ld	r22, Z
    26ba:	71 81       	ldd	r23, Z+1	; 0x01
    26bc:	82 81       	ldd	r24, Z+2	; 0x02
    26be:	93 81       	ldd	r25, Z+3	; 0x03
    26c0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    26c4:	dc 01       	movw	r26, r24
    26c6:	cb 01       	movw	r24, r22
    26c8:	f8 01       	movw	r30, r16
    26ca:	91 83       	std	Z+1, r25	; 0x01
    26cc:	80 83       	st	Z, r24
    26ce:	de 01       	movw	r26, r28
    26d0:	ad 59       	subi	r26, 0x9D	; 157
    26d2:	bf 4f       	sbci	r27, 0xFF	; 255
    26d4:	fe 01       	movw	r30, r28
    26d6:	e9 59       	subi	r30, 0x99	; 153
    26d8:	ff 4f       	sbci	r31, 0xFF	; 255
    26da:	80 81       	ld	r24, Z
    26dc:	91 81       	ldd	r25, Z+1	; 0x01
    26de:	8d 93       	st	X+, r24
    26e0:	9c 93       	st	X, r25
    26e2:	fe 01       	movw	r30, r28
    26e4:	ed 59       	subi	r30, 0x9D	; 157
    26e6:	ff 4f       	sbci	r31, 0xFF	; 255
    26e8:	80 81       	ld	r24, Z
    26ea:	91 81       	ldd	r25, Z+1	; 0x01
    26ec:	01 97       	sbiw	r24, 0x01	; 1
    26ee:	f1 f7       	brne	.-4      	; 0x26ec <Stepper_voidRotate_Anticlockwise_HalfStep+0x19a>
    26f0:	fe 01       	movw	r30, r28
    26f2:	ed 59       	subi	r30, 0x9D	; 157
    26f4:	ff 4f       	sbci	r31, 0xFF	; 255
    26f6:	91 83       	std	Z+1, r25	; 0x01
    26f8:	80 83       	st	Z, r24
	_delay_ms(10);
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_BLUE,DIO_u8_LOW);
    26fa:	80 e0       	ldi	r24, 0x00	; 0
    26fc:	60 e0       	ldi	r22, 0x00	; 0
    26fe:	40 e0       	ldi	r20, 0x00	; 0
    2700:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_PINK,DIO_u8_LOW);
    2704:	80 e0       	ldi	r24, 0x00	; 0
    2706:	61 e0       	ldi	r22, 0x01	; 1
    2708:	40 e0       	ldi	r20, 0x00	; 0
    270a:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_YELLOW,DIO_u8_HIGH);
    270e:	80 e0       	ldi	r24, 0x00	; 0
    2710:	62 e0       	ldi	r22, 0x02	; 2
    2712:	41 e0       	ldi	r20, 0x01	; 1
    2714:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_ORANGE,DIO_u8_HIGH);
    2718:	80 e0       	ldi	r24, 0x00	; 0
    271a:	63 e0       	ldi	r22, 0x03	; 3
    271c:	41 e0       	ldi	r20, 0x01	; 1
    271e:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
    2722:	fe 01       	movw	r30, r28
    2724:	e1 5a       	subi	r30, 0xA1	; 161
    2726:	ff 4f       	sbci	r31, 0xFF	; 255
    2728:	80 e0       	ldi	r24, 0x00	; 0
    272a:	90 e0       	ldi	r25, 0x00	; 0
    272c:	a0 e2       	ldi	r26, 0x20	; 32
    272e:	b1 e4       	ldi	r27, 0x41	; 65
    2730:	80 83       	st	Z, r24
    2732:	91 83       	std	Z+1, r25	; 0x01
    2734:	a2 83       	std	Z+2, r26	; 0x02
    2736:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2738:	8e 01       	movw	r16, r28
    273a:	05 5a       	subi	r16, 0xA5	; 165
    273c:	1f 4f       	sbci	r17, 0xFF	; 255
    273e:	fe 01       	movw	r30, r28
    2740:	e1 5a       	subi	r30, 0xA1	; 161
    2742:	ff 4f       	sbci	r31, 0xFF	; 255
    2744:	60 81       	ld	r22, Z
    2746:	71 81       	ldd	r23, Z+1	; 0x01
    2748:	82 81       	ldd	r24, Z+2	; 0x02
    274a:	93 81       	ldd	r25, Z+3	; 0x03
    274c:	20 e0       	ldi	r18, 0x00	; 0
    274e:	30 e0       	ldi	r19, 0x00	; 0
    2750:	4a ef       	ldi	r20, 0xFA	; 250
    2752:	54 e4       	ldi	r21, 0x44	; 68
    2754:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2758:	dc 01       	movw	r26, r24
    275a:	cb 01       	movw	r24, r22
    275c:	f8 01       	movw	r30, r16
    275e:	80 83       	st	Z, r24
    2760:	91 83       	std	Z+1, r25	; 0x01
    2762:	a2 83       	std	Z+2, r26	; 0x02
    2764:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2766:	fe 01       	movw	r30, r28
    2768:	e5 5a       	subi	r30, 0xA5	; 165
    276a:	ff 4f       	sbci	r31, 0xFF	; 255
    276c:	60 81       	ld	r22, Z
    276e:	71 81       	ldd	r23, Z+1	; 0x01
    2770:	82 81       	ldd	r24, Z+2	; 0x02
    2772:	93 81       	ldd	r25, Z+3	; 0x03
    2774:	20 e0       	ldi	r18, 0x00	; 0
    2776:	30 e0       	ldi	r19, 0x00	; 0
    2778:	40 e8       	ldi	r20, 0x80	; 128
    277a:	5f e3       	ldi	r21, 0x3F	; 63
    277c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2780:	88 23       	and	r24, r24
    2782:	44 f4       	brge	.+16     	; 0x2794 <Stepper_voidRotate_Anticlockwise_HalfStep+0x242>
		__ticks = 1;
    2784:	fe 01       	movw	r30, r28
    2786:	e7 5a       	subi	r30, 0xA7	; 167
    2788:	ff 4f       	sbci	r31, 0xFF	; 255
    278a:	81 e0       	ldi	r24, 0x01	; 1
    278c:	90 e0       	ldi	r25, 0x00	; 0
    278e:	91 83       	std	Z+1, r25	; 0x01
    2790:	80 83       	st	Z, r24
    2792:	64 c0       	rjmp	.+200    	; 0x285c <Stepper_voidRotate_Anticlockwise_HalfStep+0x30a>
	else if (__tmp > 65535)
    2794:	fe 01       	movw	r30, r28
    2796:	e5 5a       	subi	r30, 0xA5	; 165
    2798:	ff 4f       	sbci	r31, 0xFF	; 255
    279a:	60 81       	ld	r22, Z
    279c:	71 81       	ldd	r23, Z+1	; 0x01
    279e:	82 81       	ldd	r24, Z+2	; 0x02
    27a0:	93 81       	ldd	r25, Z+3	; 0x03
    27a2:	20 e0       	ldi	r18, 0x00	; 0
    27a4:	3f ef       	ldi	r19, 0xFF	; 255
    27a6:	4f e7       	ldi	r20, 0x7F	; 127
    27a8:	57 e4       	ldi	r21, 0x47	; 71
    27aa:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    27ae:	18 16       	cp	r1, r24
    27b0:	0c f0       	brlt	.+2      	; 0x27b4 <Stepper_voidRotate_Anticlockwise_HalfStep+0x262>
    27b2:	43 c0       	rjmp	.+134    	; 0x283a <Stepper_voidRotate_Anticlockwise_HalfStep+0x2e8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    27b4:	fe 01       	movw	r30, r28
    27b6:	e1 5a       	subi	r30, 0xA1	; 161
    27b8:	ff 4f       	sbci	r31, 0xFF	; 255
    27ba:	60 81       	ld	r22, Z
    27bc:	71 81       	ldd	r23, Z+1	; 0x01
    27be:	82 81       	ldd	r24, Z+2	; 0x02
    27c0:	93 81       	ldd	r25, Z+3	; 0x03
    27c2:	20 e0       	ldi	r18, 0x00	; 0
    27c4:	30 e0       	ldi	r19, 0x00	; 0
    27c6:	40 e2       	ldi	r20, 0x20	; 32
    27c8:	51 e4       	ldi	r21, 0x41	; 65
    27ca:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    27ce:	dc 01       	movw	r26, r24
    27d0:	cb 01       	movw	r24, r22
    27d2:	8e 01       	movw	r16, r28
    27d4:	07 5a       	subi	r16, 0xA7	; 167
    27d6:	1f 4f       	sbci	r17, 0xFF	; 255
    27d8:	bc 01       	movw	r22, r24
    27da:	cd 01       	movw	r24, r26
    27dc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    27e0:	dc 01       	movw	r26, r24
    27e2:	cb 01       	movw	r24, r22
    27e4:	f8 01       	movw	r30, r16
    27e6:	91 83       	std	Z+1, r25	; 0x01
    27e8:	80 83       	st	Z, r24
    27ea:	1f c0       	rjmp	.+62     	; 0x282a <Stepper_voidRotate_Anticlockwise_HalfStep+0x2d8>
    27ec:	fe 01       	movw	r30, r28
    27ee:	e9 5a       	subi	r30, 0xA9	; 169
    27f0:	ff 4f       	sbci	r31, 0xFF	; 255
    27f2:	88 ec       	ldi	r24, 0xC8	; 200
    27f4:	90 e0       	ldi	r25, 0x00	; 0
    27f6:	91 83       	std	Z+1, r25	; 0x01
    27f8:	80 83       	st	Z, r24
    27fa:	fe 01       	movw	r30, r28
    27fc:	e9 5a       	subi	r30, 0xA9	; 169
    27fe:	ff 4f       	sbci	r31, 0xFF	; 255
    2800:	80 81       	ld	r24, Z
    2802:	91 81       	ldd	r25, Z+1	; 0x01
    2804:	01 97       	sbiw	r24, 0x01	; 1
    2806:	f1 f7       	brne	.-4      	; 0x2804 <Stepper_voidRotate_Anticlockwise_HalfStep+0x2b2>
    2808:	fe 01       	movw	r30, r28
    280a:	e9 5a       	subi	r30, 0xA9	; 169
    280c:	ff 4f       	sbci	r31, 0xFF	; 255
    280e:	91 83       	std	Z+1, r25	; 0x01
    2810:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2812:	de 01       	movw	r26, r28
    2814:	a7 5a       	subi	r26, 0xA7	; 167
    2816:	bf 4f       	sbci	r27, 0xFF	; 255
    2818:	fe 01       	movw	r30, r28
    281a:	e7 5a       	subi	r30, 0xA7	; 167
    281c:	ff 4f       	sbci	r31, 0xFF	; 255
    281e:	80 81       	ld	r24, Z
    2820:	91 81       	ldd	r25, Z+1	; 0x01
    2822:	01 97       	sbiw	r24, 0x01	; 1
    2824:	11 96       	adiw	r26, 0x01	; 1
    2826:	9c 93       	st	X, r25
    2828:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    282a:	fe 01       	movw	r30, r28
    282c:	e7 5a       	subi	r30, 0xA7	; 167
    282e:	ff 4f       	sbci	r31, 0xFF	; 255
    2830:	80 81       	ld	r24, Z
    2832:	91 81       	ldd	r25, Z+1	; 0x01
    2834:	00 97       	sbiw	r24, 0x00	; 0
    2836:	d1 f6       	brne	.-76     	; 0x27ec <Stepper_voidRotate_Anticlockwise_HalfStep+0x29a>
    2838:	27 c0       	rjmp	.+78     	; 0x2888 <Stepper_voidRotate_Anticlockwise_HalfStep+0x336>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    283a:	8e 01       	movw	r16, r28
    283c:	07 5a       	subi	r16, 0xA7	; 167
    283e:	1f 4f       	sbci	r17, 0xFF	; 255
    2840:	fe 01       	movw	r30, r28
    2842:	e5 5a       	subi	r30, 0xA5	; 165
    2844:	ff 4f       	sbci	r31, 0xFF	; 255
    2846:	60 81       	ld	r22, Z
    2848:	71 81       	ldd	r23, Z+1	; 0x01
    284a:	82 81       	ldd	r24, Z+2	; 0x02
    284c:	93 81       	ldd	r25, Z+3	; 0x03
    284e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2852:	dc 01       	movw	r26, r24
    2854:	cb 01       	movw	r24, r22
    2856:	f8 01       	movw	r30, r16
    2858:	91 83       	std	Z+1, r25	; 0x01
    285a:	80 83       	st	Z, r24
    285c:	de 01       	movw	r26, r28
    285e:	ab 5a       	subi	r26, 0xAB	; 171
    2860:	bf 4f       	sbci	r27, 0xFF	; 255
    2862:	fe 01       	movw	r30, r28
    2864:	e7 5a       	subi	r30, 0xA7	; 167
    2866:	ff 4f       	sbci	r31, 0xFF	; 255
    2868:	80 81       	ld	r24, Z
    286a:	91 81       	ldd	r25, Z+1	; 0x01
    286c:	8d 93       	st	X+, r24
    286e:	9c 93       	st	X, r25
    2870:	fe 01       	movw	r30, r28
    2872:	eb 5a       	subi	r30, 0xAB	; 171
    2874:	ff 4f       	sbci	r31, 0xFF	; 255
    2876:	80 81       	ld	r24, Z
    2878:	91 81       	ldd	r25, Z+1	; 0x01
    287a:	01 97       	sbiw	r24, 0x01	; 1
    287c:	f1 f7       	brne	.-4      	; 0x287a <Stepper_voidRotate_Anticlockwise_HalfStep+0x328>
    287e:	fe 01       	movw	r30, r28
    2880:	eb 5a       	subi	r30, 0xAB	; 171
    2882:	ff 4f       	sbci	r31, 0xFF	; 255
    2884:	91 83       	std	Z+1, r25	; 0x01
    2886:	80 83       	st	Z, r24
	_delay_ms(10);
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_BLUE,DIO_u8_LOW);
    2888:	80 e0       	ldi	r24, 0x00	; 0
    288a:	60 e0       	ldi	r22, 0x00	; 0
    288c:	40 e0       	ldi	r20, 0x00	; 0
    288e:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_PINK,DIO_u8_LOW);
    2892:	80 e0       	ldi	r24, 0x00	; 0
    2894:	61 e0       	ldi	r22, 0x01	; 1
    2896:	40 e0       	ldi	r20, 0x00	; 0
    2898:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_YELLOW,DIO_u8_HIGH);
    289c:	80 e0       	ldi	r24, 0x00	; 0
    289e:	62 e0       	ldi	r22, 0x02	; 2
    28a0:	41 e0       	ldi	r20, 0x01	; 1
    28a2:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_ORANGE,DIO_u8_LOW);
    28a6:	80 e0       	ldi	r24, 0x00	; 0
    28a8:	63 e0       	ldi	r22, 0x03	; 3
    28aa:	40 e0       	ldi	r20, 0x00	; 0
    28ac:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
    28b0:	fe 01       	movw	r30, r28
    28b2:	ef 5a       	subi	r30, 0xAF	; 175
    28b4:	ff 4f       	sbci	r31, 0xFF	; 255
    28b6:	80 e0       	ldi	r24, 0x00	; 0
    28b8:	90 e0       	ldi	r25, 0x00	; 0
    28ba:	a0 e2       	ldi	r26, 0x20	; 32
    28bc:	b1 e4       	ldi	r27, 0x41	; 65
    28be:	80 83       	st	Z, r24
    28c0:	91 83       	std	Z+1, r25	; 0x01
    28c2:	a2 83       	std	Z+2, r26	; 0x02
    28c4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    28c6:	8e 01       	movw	r16, r28
    28c8:	03 5b       	subi	r16, 0xB3	; 179
    28ca:	1f 4f       	sbci	r17, 0xFF	; 255
    28cc:	fe 01       	movw	r30, r28
    28ce:	ef 5a       	subi	r30, 0xAF	; 175
    28d0:	ff 4f       	sbci	r31, 0xFF	; 255
    28d2:	60 81       	ld	r22, Z
    28d4:	71 81       	ldd	r23, Z+1	; 0x01
    28d6:	82 81       	ldd	r24, Z+2	; 0x02
    28d8:	93 81       	ldd	r25, Z+3	; 0x03
    28da:	20 e0       	ldi	r18, 0x00	; 0
    28dc:	30 e0       	ldi	r19, 0x00	; 0
    28de:	4a ef       	ldi	r20, 0xFA	; 250
    28e0:	54 e4       	ldi	r21, 0x44	; 68
    28e2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    28e6:	dc 01       	movw	r26, r24
    28e8:	cb 01       	movw	r24, r22
    28ea:	f8 01       	movw	r30, r16
    28ec:	80 83       	st	Z, r24
    28ee:	91 83       	std	Z+1, r25	; 0x01
    28f0:	a2 83       	std	Z+2, r26	; 0x02
    28f2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    28f4:	fe 01       	movw	r30, r28
    28f6:	e3 5b       	subi	r30, 0xB3	; 179
    28f8:	ff 4f       	sbci	r31, 0xFF	; 255
    28fa:	60 81       	ld	r22, Z
    28fc:	71 81       	ldd	r23, Z+1	; 0x01
    28fe:	82 81       	ldd	r24, Z+2	; 0x02
    2900:	93 81       	ldd	r25, Z+3	; 0x03
    2902:	20 e0       	ldi	r18, 0x00	; 0
    2904:	30 e0       	ldi	r19, 0x00	; 0
    2906:	40 e8       	ldi	r20, 0x80	; 128
    2908:	5f e3       	ldi	r21, 0x3F	; 63
    290a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    290e:	88 23       	and	r24, r24
    2910:	44 f4       	brge	.+16     	; 0x2922 <Stepper_voidRotate_Anticlockwise_HalfStep+0x3d0>
		__ticks = 1;
    2912:	fe 01       	movw	r30, r28
    2914:	e5 5b       	subi	r30, 0xB5	; 181
    2916:	ff 4f       	sbci	r31, 0xFF	; 255
    2918:	81 e0       	ldi	r24, 0x01	; 1
    291a:	90 e0       	ldi	r25, 0x00	; 0
    291c:	91 83       	std	Z+1, r25	; 0x01
    291e:	80 83       	st	Z, r24
    2920:	64 c0       	rjmp	.+200    	; 0x29ea <Stepper_voidRotate_Anticlockwise_HalfStep+0x498>
	else if (__tmp > 65535)
    2922:	fe 01       	movw	r30, r28
    2924:	e3 5b       	subi	r30, 0xB3	; 179
    2926:	ff 4f       	sbci	r31, 0xFF	; 255
    2928:	60 81       	ld	r22, Z
    292a:	71 81       	ldd	r23, Z+1	; 0x01
    292c:	82 81       	ldd	r24, Z+2	; 0x02
    292e:	93 81       	ldd	r25, Z+3	; 0x03
    2930:	20 e0       	ldi	r18, 0x00	; 0
    2932:	3f ef       	ldi	r19, 0xFF	; 255
    2934:	4f e7       	ldi	r20, 0x7F	; 127
    2936:	57 e4       	ldi	r21, 0x47	; 71
    2938:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    293c:	18 16       	cp	r1, r24
    293e:	0c f0       	brlt	.+2      	; 0x2942 <Stepper_voidRotate_Anticlockwise_HalfStep+0x3f0>
    2940:	43 c0       	rjmp	.+134    	; 0x29c8 <Stepper_voidRotate_Anticlockwise_HalfStep+0x476>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2942:	fe 01       	movw	r30, r28
    2944:	ef 5a       	subi	r30, 0xAF	; 175
    2946:	ff 4f       	sbci	r31, 0xFF	; 255
    2948:	60 81       	ld	r22, Z
    294a:	71 81       	ldd	r23, Z+1	; 0x01
    294c:	82 81       	ldd	r24, Z+2	; 0x02
    294e:	93 81       	ldd	r25, Z+3	; 0x03
    2950:	20 e0       	ldi	r18, 0x00	; 0
    2952:	30 e0       	ldi	r19, 0x00	; 0
    2954:	40 e2       	ldi	r20, 0x20	; 32
    2956:	51 e4       	ldi	r21, 0x41	; 65
    2958:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    295c:	dc 01       	movw	r26, r24
    295e:	cb 01       	movw	r24, r22
    2960:	8e 01       	movw	r16, r28
    2962:	05 5b       	subi	r16, 0xB5	; 181
    2964:	1f 4f       	sbci	r17, 0xFF	; 255
    2966:	bc 01       	movw	r22, r24
    2968:	cd 01       	movw	r24, r26
    296a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    296e:	dc 01       	movw	r26, r24
    2970:	cb 01       	movw	r24, r22
    2972:	f8 01       	movw	r30, r16
    2974:	91 83       	std	Z+1, r25	; 0x01
    2976:	80 83       	st	Z, r24
    2978:	1f c0       	rjmp	.+62     	; 0x29b8 <Stepper_voidRotate_Anticlockwise_HalfStep+0x466>
    297a:	fe 01       	movw	r30, r28
    297c:	e7 5b       	subi	r30, 0xB7	; 183
    297e:	ff 4f       	sbci	r31, 0xFF	; 255
    2980:	88 ec       	ldi	r24, 0xC8	; 200
    2982:	90 e0       	ldi	r25, 0x00	; 0
    2984:	91 83       	std	Z+1, r25	; 0x01
    2986:	80 83       	st	Z, r24
    2988:	fe 01       	movw	r30, r28
    298a:	e7 5b       	subi	r30, 0xB7	; 183
    298c:	ff 4f       	sbci	r31, 0xFF	; 255
    298e:	80 81       	ld	r24, Z
    2990:	91 81       	ldd	r25, Z+1	; 0x01
    2992:	01 97       	sbiw	r24, 0x01	; 1
    2994:	f1 f7       	brne	.-4      	; 0x2992 <Stepper_voidRotate_Anticlockwise_HalfStep+0x440>
    2996:	fe 01       	movw	r30, r28
    2998:	e7 5b       	subi	r30, 0xB7	; 183
    299a:	ff 4f       	sbci	r31, 0xFF	; 255
    299c:	91 83       	std	Z+1, r25	; 0x01
    299e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    29a0:	de 01       	movw	r26, r28
    29a2:	a5 5b       	subi	r26, 0xB5	; 181
    29a4:	bf 4f       	sbci	r27, 0xFF	; 255
    29a6:	fe 01       	movw	r30, r28
    29a8:	e5 5b       	subi	r30, 0xB5	; 181
    29aa:	ff 4f       	sbci	r31, 0xFF	; 255
    29ac:	80 81       	ld	r24, Z
    29ae:	91 81       	ldd	r25, Z+1	; 0x01
    29b0:	01 97       	sbiw	r24, 0x01	; 1
    29b2:	11 96       	adiw	r26, 0x01	; 1
    29b4:	9c 93       	st	X, r25
    29b6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    29b8:	fe 01       	movw	r30, r28
    29ba:	e5 5b       	subi	r30, 0xB5	; 181
    29bc:	ff 4f       	sbci	r31, 0xFF	; 255
    29be:	80 81       	ld	r24, Z
    29c0:	91 81       	ldd	r25, Z+1	; 0x01
    29c2:	00 97       	sbiw	r24, 0x00	; 0
    29c4:	d1 f6       	brne	.-76     	; 0x297a <Stepper_voidRotate_Anticlockwise_HalfStep+0x428>
    29c6:	27 c0       	rjmp	.+78     	; 0x2a16 <Stepper_voidRotate_Anticlockwise_HalfStep+0x4c4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    29c8:	8e 01       	movw	r16, r28
    29ca:	05 5b       	subi	r16, 0xB5	; 181
    29cc:	1f 4f       	sbci	r17, 0xFF	; 255
    29ce:	fe 01       	movw	r30, r28
    29d0:	e3 5b       	subi	r30, 0xB3	; 179
    29d2:	ff 4f       	sbci	r31, 0xFF	; 255
    29d4:	60 81       	ld	r22, Z
    29d6:	71 81       	ldd	r23, Z+1	; 0x01
    29d8:	82 81       	ldd	r24, Z+2	; 0x02
    29da:	93 81       	ldd	r25, Z+3	; 0x03
    29dc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    29e0:	dc 01       	movw	r26, r24
    29e2:	cb 01       	movw	r24, r22
    29e4:	f8 01       	movw	r30, r16
    29e6:	91 83       	std	Z+1, r25	; 0x01
    29e8:	80 83       	st	Z, r24
    29ea:	de 01       	movw	r26, r28
    29ec:	a9 5b       	subi	r26, 0xB9	; 185
    29ee:	bf 4f       	sbci	r27, 0xFF	; 255
    29f0:	fe 01       	movw	r30, r28
    29f2:	e5 5b       	subi	r30, 0xB5	; 181
    29f4:	ff 4f       	sbci	r31, 0xFF	; 255
    29f6:	80 81       	ld	r24, Z
    29f8:	91 81       	ldd	r25, Z+1	; 0x01
    29fa:	8d 93       	st	X+, r24
    29fc:	9c 93       	st	X, r25
    29fe:	fe 01       	movw	r30, r28
    2a00:	e9 5b       	subi	r30, 0xB9	; 185
    2a02:	ff 4f       	sbci	r31, 0xFF	; 255
    2a04:	80 81       	ld	r24, Z
    2a06:	91 81       	ldd	r25, Z+1	; 0x01
    2a08:	01 97       	sbiw	r24, 0x01	; 1
    2a0a:	f1 f7       	brne	.-4      	; 0x2a08 <Stepper_voidRotate_Anticlockwise_HalfStep+0x4b6>
    2a0c:	fe 01       	movw	r30, r28
    2a0e:	e9 5b       	subi	r30, 0xB9	; 185
    2a10:	ff 4f       	sbci	r31, 0xFF	; 255
    2a12:	91 83       	std	Z+1, r25	; 0x01
    2a14:	80 83       	st	Z, r24
	_delay_ms(10);
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_BLUE,DIO_u8_LOW);
    2a16:	80 e0       	ldi	r24, 0x00	; 0
    2a18:	60 e0       	ldi	r22, 0x00	; 0
    2a1a:	40 e0       	ldi	r20, 0x00	; 0
    2a1c:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_PINK,DIO_u8_HIGH);
    2a20:	80 e0       	ldi	r24, 0x00	; 0
    2a22:	61 e0       	ldi	r22, 0x01	; 1
    2a24:	41 e0       	ldi	r20, 0x01	; 1
    2a26:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_YELLOW,DIO_u8_HIGH);
    2a2a:	80 e0       	ldi	r24, 0x00	; 0
    2a2c:	62 e0       	ldi	r22, 0x02	; 2
    2a2e:	41 e0       	ldi	r20, 0x01	; 1
    2a30:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_ORANGE,DIO_u8_LOW);
    2a34:	80 e0       	ldi	r24, 0x00	; 0
    2a36:	63 e0       	ldi	r22, 0x03	; 3
    2a38:	40 e0       	ldi	r20, 0x00	; 0
    2a3a:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
    2a3e:	fe 01       	movw	r30, r28
    2a40:	ed 5b       	subi	r30, 0xBD	; 189
    2a42:	ff 4f       	sbci	r31, 0xFF	; 255
    2a44:	80 e0       	ldi	r24, 0x00	; 0
    2a46:	90 e0       	ldi	r25, 0x00	; 0
    2a48:	a0 e2       	ldi	r26, 0x20	; 32
    2a4a:	b1 e4       	ldi	r27, 0x41	; 65
    2a4c:	80 83       	st	Z, r24
    2a4e:	91 83       	std	Z+1, r25	; 0x01
    2a50:	a2 83       	std	Z+2, r26	; 0x02
    2a52:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2a54:	8e 01       	movw	r16, r28
    2a56:	01 5c       	subi	r16, 0xC1	; 193
    2a58:	1f 4f       	sbci	r17, 0xFF	; 255
    2a5a:	fe 01       	movw	r30, r28
    2a5c:	ed 5b       	subi	r30, 0xBD	; 189
    2a5e:	ff 4f       	sbci	r31, 0xFF	; 255
    2a60:	60 81       	ld	r22, Z
    2a62:	71 81       	ldd	r23, Z+1	; 0x01
    2a64:	82 81       	ldd	r24, Z+2	; 0x02
    2a66:	93 81       	ldd	r25, Z+3	; 0x03
    2a68:	20 e0       	ldi	r18, 0x00	; 0
    2a6a:	30 e0       	ldi	r19, 0x00	; 0
    2a6c:	4a ef       	ldi	r20, 0xFA	; 250
    2a6e:	54 e4       	ldi	r21, 0x44	; 68
    2a70:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a74:	dc 01       	movw	r26, r24
    2a76:	cb 01       	movw	r24, r22
    2a78:	f8 01       	movw	r30, r16
    2a7a:	80 83       	st	Z, r24
    2a7c:	91 83       	std	Z+1, r25	; 0x01
    2a7e:	a2 83       	std	Z+2, r26	; 0x02
    2a80:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2a82:	fe 01       	movw	r30, r28
    2a84:	ff 96       	adiw	r30, 0x3f	; 63
    2a86:	60 81       	ld	r22, Z
    2a88:	71 81       	ldd	r23, Z+1	; 0x01
    2a8a:	82 81       	ldd	r24, Z+2	; 0x02
    2a8c:	93 81       	ldd	r25, Z+3	; 0x03
    2a8e:	20 e0       	ldi	r18, 0x00	; 0
    2a90:	30 e0       	ldi	r19, 0x00	; 0
    2a92:	40 e8       	ldi	r20, 0x80	; 128
    2a94:	5f e3       	ldi	r21, 0x3F	; 63
    2a96:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2a9a:	88 23       	and	r24, r24
    2a9c:	2c f4       	brge	.+10     	; 0x2aa8 <Stepper_voidRotate_Anticlockwise_HalfStep+0x556>
		__ticks = 1;
    2a9e:	81 e0       	ldi	r24, 0x01	; 1
    2aa0:	90 e0       	ldi	r25, 0x00	; 0
    2aa2:	9e af       	std	Y+62, r25	; 0x3e
    2aa4:	8d af       	std	Y+61, r24	; 0x3d
    2aa6:	46 c0       	rjmp	.+140    	; 0x2b34 <Stepper_voidRotate_Anticlockwise_HalfStep+0x5e2>
	else if (__tmp > 65535)
    2aa8:	fe 01       	movw	r30, r28
    2aaa:	ff 96       	adiw	r30, 0x3f	; 63
    2aac:	60 81       	ld	r22, Z
    2aae:	71 81       	ldd	r23, Z+1	; 0x01
    2ab0:	82 81       	ldd	r24, Z+2	; 0x02
    2ab2:	93 81       	ldd	r25, Z+3	; 0x03
    2ab4:	20 e0       	ldi	r18, 0x00	; 0
    2ab6:	3f ef       	ldi	r19, 0xFF	; 255
    2ab8:	4f e7       	ldi	r20, 0x7F	; 127
    2aba:	57 e4       	ldi	r21, 0x47	; 71
    2abc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2ac0:	18 16       	cp	r1, r24
    2ac2:	64 f5       	brge	.+88     	; 0x2b1c <Stepper_voidRotate_Anticlockwise_HalfStep+0x5ca>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2ac4:	fe 01       	movw	r30, r28
    2ac6:	ed 5b       	subi	r30, 0xBD	; 189
    2ac8:	ff 4f       	sbci	r31, 0xFF	; 255
    2aca:	60 81       	ld	r22, Z
    2acc:	71 81       	ldd	r23, Z+1	; 0x01
    2ace:	82 81       	ldd	r24, Z+2	; 0x02
    2ad0:	93 81       	ldd	r25, Z+3	; 0x03
    2ad2:	20 e0       	ldi	r18, 0x00	; 0
    2ad4:	30 e0       	ldi	r19, 0x00	; 0
    2ad6:	40 e2       	ldi	r20, 0x20	; 32
    2ad8:	51 e4       	ldi	r21, 0x41	; 65
    2ada:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ade:	dc 01       	movw	r26, r24
    2ae0:	cb 01       	movw	r24, r22
    2ae2:	bc 01       	movw	r22, r24
    2ae4:	cd 01       	movw	r24, r26
    2ae6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2aea:	dc 01       	movw	r26, r24
    2aec:	cb 01       	movw	r24, r22
    2aee:	9e af       	std	Y+62, r25	; 0x3e
    2af0:	8d af       	std	Y+61, r24	; 0x3d
    2af2:	0f c0       	rjmp	.+30     	; 0x2b12 <Stepper_voidRotate_Anticlockwise_HalfStep+0x5c0>
    2af4:	88 ec       	ldi	r24, 0xC8	; 200
    2af6:	90 e0       	ldi	r25, 0x00	; 0
    2af8:	9c af       	std	Y+60, r25	; 0x3c
    2afa:	8b af       	std	Y+59, r24	; 0x3b
    2afc:	8b ad       	ldd	r24, Y+59	; 0x3b
    2afe:	9c ad       	ldd	r25, Y+60	; 0x3c
    2b00:	01 97       	sbiw	r24, 0x01	; 1
    2b02:	f1 f7       	brne	.-4      	; 0x2b00 <Stepper_voidRotate_Anticlockwise_HalfStep+0x5ae>
    2b04:	9c af       	std	Y+60, r25	; 0x3c
    2b06:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2b08:	8d ad       	ldd	r24, Y+61	; 0x3d
    2b0a:	9e ad       	ldd	r25, Y+62	; 0x3e
    2b0c:	01 97       	sbiw	r24, 0x01	; 1
    2b0e:	9e af       	std	Y+62, r25	; 0x3e
    2b10:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2b12:	8d ad       	ldd	r24, Y+61	; 0x3d
    2b14:	9e ad       	ldd	r25, Y+62	; 0x3e
    2b16:	00 97       	sbiw	r24, 0x00	; 0
    2b18:	69 f7       	brne	.-38     	; 0x2af4 <Stepper_voidRotate_Anticlockwise_HalfStep+0x5a2>
    2b1a:	16 c0       	rjmp	.+44     	; 0x2b48 <Stepper_voidRotate_Anticlockwise_HalfStep+0x5f6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2b1c:	fe 01       	movw	r30, r28
    2b1e:	ff 96       	adiw	r30, 0x3f	; 63
    2b20:	60 81       	ld	r22, Z
    2b22:	71 81       	ldd	r23, Z+1	; 0x01
    2b24:	82 81       	ldd	r24, Z+2	; 0x02
    2b26:	93 81       	ldd	r25, Z+3	; 0x03
    2b28:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b2c:	dc 01       	movw	r26, r24
    2b2e:	cb 01       	movw	r24, r22
    2b30:	9e af       	std	Y+62, r25	; 0x3e
    2b32:	8d af       	std	Y+61, r24	; 0x3d
    2b34:	8d ad       	ldd	r24, Y+61	; 0x3d
    2b36:	9e ad       	ldd	r25, Y+62	; 0x3e
    2b38:	9a af       	std	Y+58, r25	; 0x3a
    2b3a:	89 af       	std	Y+57, r24	; 0x39
    2b3c:	89 ad       	ldd	r24, Y+57	; 0x39
    2b3e:	9a ad       	ldd	r25, Y+58	; 0x3a
    2b40:	01 97       	sbiw	r24, 0x01	; 1
    2b42:	f1 f7       	brne	.-4      	; 0x2b40 <Stepper_voidRotate_Anticlockwise_HalfStep+0x5ee>
    2b44:	9a af       	std	Y+58, r25	; 0x3a
    2b46:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(10);
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_BLUE,DIO_u8_LOW);
    2b48:	80 e0       	ldi	r24, 0x00	; 0
    2b4a:	60 e0       	ldi	r22, 0x00	; 0
    2b4c:	40 e0       	ldi	r20, 0x00	; 0
    2b4e:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_PINK,DIO_u8_HIGH);
    2b52:	80 e0       	ldi	r24, 0x00	; 0
    2b54:	61 e0       	ldi	r22, 0x01	; 1
    2b56:	41 e0       	ldi	r20, 0x01	; 1
    2b58:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_YELLOW,DIO_u8_LOW);
    2b5c:	80 e0       	ldi	r24, 0x00	; 0
    2b5e:	62 e0       	ldi	r22, 0x02	; 2
    2b60:	40 e0       	ldi	r20, 0x00	; 0
    2b62:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_ORANGE,DIO_u8_LOW);
    2b66:	80 e0       	ldi	r24, 0x00	; 0
    2b68:	63 e0       	ldi	r22, 0x03	; 3
    2b6a:	40 e0       	ldi	r20, 0x00	; 0
    2b6c:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
    2b70:	80 e0       	ldi	r24, 0x00	; 0
    2b72:	90 e0       	ldi	r25, 0x00	; 0
    2b74:	a0 e2       	ldi	r26, 0x20	; 32
    2b76:	b1 e4       	ldi	r27, 0x41	; 65
    2b78:	8d ab       	std	Y+53, r24	; 0x35
    2b7a:	9e ab       	std	Y+54, r25	; 0x36
    2b7c:	af ab       	std	Y+55, r26	; 0x37
    2b7e:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b80:	6d a9       	ldd	r22, Y+53	; 0x35
    2b82:	7e a9       	ldd	r23, Y+54	; 0x36
    2b84:	8f a9       	ldd	r24, Y+55	; 0x37
    2b86:	98 ad       	ldd	r25, Y+56	; 0x38
    2b88:	20 e0       	ldi	r18, 0x00	; 0
    2b8a:	30 e0       	ldi	r19, 0x00	; 0
    2b8c:	4a ef       	ldi	r20, 0xFA	; 250
    2b8e:	54 e4       	ldi	r21, 0x44	; 68
    2b90:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b94:	dc 01       	movw	r26, r24
    2b96:	cb 01       	movw	r24, r22
    2b98:	89 ab       	std	Y+49, r24	; 0x31
    2b9a:	9a ab       	std	Y+50, r25	; 0x32
    2b9c:	ab ab       	std	Y+51, r26	; 0x33
    2b9e:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2ba0:	69 a9       	ldd	r22, Y+49	; 0x31
    2ba2:	7a a9       	ldd	r23, Y+50	; 0x32
    2ba4:	8b a9       	ldd	r24, Y+51	; 0x33
    2ba6:	9c a9       	ldd	r25, Y+52	; 0x34
    2ba8:	20 e0       	ldi	r18, 0x00	; 0
    2baa:	30 e0       	ldi	r19, 0x00	; 0
    2bac:	40 e8       	ldi	r20, 0x80	; 128
    2bae:	5f e3       	ldi	r21, 0x3F	; 63
    2bb0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2bb4:	88 23       	and	r24, r24
    2bb6:	2c f4       	brge	.+10     	; 0x2bc2 <Stepper_voidRotate_Anticlockwise_HalfStep+0x670>
		__ticks = 1;
    2bb8:	81 e0       	ldi	r24, 0x01	; 1
    2bba:	90 e0       	ldi	r25, 0x00	; 0
    2bbc:	98 ab       	std	Y+48, r25	; 0x30
    2bbe:	8f a7       	std	Y+47, r24	; 0x2f
    2bc0:	3f c0       	rjmp	.+126    	; 0x2c40 <Stepper_voidRotate_Anticlockwise_HalfStep+0x6ee>
	else if (__tmp > 65535)
    2bc2:	69 a9       	ldd	r22, Y+49	; 0x31
    2bc4:	7a a9       	ldd	r23, Y+50	; 0x32
    2bc6:	8b a9       	ldd	r24, Y+51	; 0x33
    2bc8:	9c a9       	ldd	r25, Y+52	; 0x34
    2bca:	20 e0       	ldi	r18, 0x00	; 0
    2bcc:	3f ef       	ldi	r19, 0xFF	; 255
    2bce:	4f e7       	ldi	r20, 0x7F	; 127
    2bd0:	57 e4       	ldi	r21, 0x47	; 71
    2bd2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2bd6:	18 16       	cp	r1, r24
    2bd8:	4c f5       	brge	.+82     	; 0x2c2c <Stepper_voidRotate_Anticlockwise_HalfStep+0x6da>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2bda:	6d a9       	ldd	r22, Y+53	; 0x35
    2bdc:	7e a9       	ldd	r23, Y+54	; 0x36
    2bde:	8f a9       	ldd	r24, Y+55	; 0x37
    2be0:	98 ad       	ldd	r25, Y+56	; 0x38
    2be2:	20 e0       	ldi	r18, 0x00	; 0
    2be4:	30 e0       	ldi	r19, 0x00	; 0
    2be6:	40 e2       	ldi	r20, 0x20	; 32
    2be8:	51 e4       	ldi	r21, 0x41	; 65
    2bea:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2bee:	dc 01       	movw	r26, r24
    2bf0:	cb 01       	movw	r24, r22
    2bf2:	bc 01       	movw	r22, r24
    2bf4:	cd 01       	movw	r24, r26
    2bf6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2bfa:	dc 01       	movw	r26, r24
    2bfc:	cb 01       	movw	r24, r22
    2bfe:	98 ab       	std	Y+48, r25	; 0x30
    2c00:	8f a7       	std	Y+47, r24	; 0x2f
    2c02:	0f c0       	rjmp	.+30     	; 0x2c22 <Stepper_voidRotate_Anticlockwise_HalfStep+0x6d0>
    2c04:	88 ec       	ldi	r24, 0xC8	; 200
    2c06:	90 e0       	ldi	r25, 0x00	; 0
    2c08:	9e a7       	std	Y+46, r25	; 0x2e
    2c0a:	8d a7       	std	Y+45, r24	; 0x2d
    2c0c:	8d a5       	ldd	r24, Y+45	; 0x2d
    2c0e:	9e a5       	ldd	r25, Y+46	; 0x2e
    2c10:	01 97       	sbiw	r24, 0x01	; 1
    2c12:	f1 f7       	brne	.-4      	; 0x2c10 <Stepper_voidRotate_Anticlockwise_HalfStep+0x6be>
    2c14:	9e a7       	std	Y+46, r25	; 0x2e
    2c16:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2c18:	8f a5       	ldd	r24, Y+47	; 0x2f
    2c1a:	98 a9       	ldd	r25, Y+48	; 0x30
    2c1c:	01 97       	sbiw	r24, 0x01	; 1
    2c1e:	98 ab       	std	Y+48, r25	; 0x30
    2c20:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2c22:	8f a5       	ldd	r24, Y+47	; 0x2f
    2c24:	98 a9       	ldd	r25, Y+48	; 0x30
    2c26:	00 97       	sbiw	r24, 0x00	; 0
    2c28:	69 f7       	brne	.-38     	; 0x2c04 <Stepper_voidRotate_Anticlockwise_HalfStep+0x6b2>
    2c2a:	14 c0       	rjmp	.+40     	; 0x2c54 <Stepper_voidRotate_Anticlockwise_HalfStep+0x702>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c2c:	69 a9       	ldd	r22, Y+49	; 0x31
    2c2e:	7a a9       	ldd	r23, Y+50	; 0x32
    2c30:	8b a9       	ldd	r24, Y+51	; 0x33
    2c32:	9c a9       	ldd	r25, Y+52	; 0x34
    2c34:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c38:	dc 01       	movw	r26, r24
    2c3a:	cb 01       	movw	r24, r22
    2c3c:	98 ab       	std	Y+48, r25	; 0x30
    2c3e:	8f a7       	std	Y+47, r24	; 0x2f
    2c40:	8f a5       	ldd	r24, Y+47	; 0x2f
    2c42:	98 a9       	ldd	r25, Y+48	; 0x30
    2c44:	9c a7       	std	Y+44, r25	; 0x2c
    2c46:	8b a7       	std	Y+43, r24	; 0x2b
    2c48:	8b a5       	ldd	r24, Y+43	; 0x2b
    2c4a:	9c a5       	ldd	r25, Y+44	; 0x2c
    2c4c:	01 97       	sbiw	r24, 0x01	; 1
    2c4e:	f1 f7       	brne	.-4      	; 0x2c4c <Stepper_voidRotate_Anticlockwise_HalfStep+0x6fa>
    2c50:	9c a7       	std	Y+44, r25	; 0x2c
    2c52:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(10);
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_BLUE,DIO_u8_HIGH);
    2c54:	80 e0       	ldi	r24, 0x00	; 0
    2c56:	60 e0       	ldi	r22, 0x00	; 0
    2c58:	41 e0       	ldi	r20, 0x01	; 1
    2c5a:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_PINK,DIO_u8_HIGH);
    2c5e:	80 e0       	ldi	r24, 0x00	; 0
    2c60:	61 e0       	ldi	r22, 0x01	; 1
    2c62:	41 e0       	ldi	r20, 0x01	; 1
    2c64:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_YELLOW,DIO_u8_LOW);
    2c68:	80 e0       	ldi	r24, 0x00	; 0
    2c6a:	62 e0       	ldi	r22, 0x02	; 2
    2c6c:	40 e0       	ldi	r20, 0x00	; 0
    2c6e:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_ORANGE,DIO_u8_LOW);
    2c72:	80 e0       	ldi	r24, 0x00	; 0
    2c74:	63 e0       	ldi	r22, 0x03	; 3
    2c76:	40 e0       	ldi	r20, 0x00	; 0
    2c78:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
    2c7c:	80 e0       	ldi	r24, 0x00	; 0
    2c7e:	90 e0       	ldi	r25, 0x00	; 0
    2c80:	a0 e2       	ldi	r26, 0x20	; 32
    2c82:	b1 e4       	ldi	r27, 0x41	; 65
    2c84:	8f a3       	std	Y+39, r24	; 0x27
    2c86:	98 a7       	std	Y+40, r25	; 0x28
    2c88:	a9 a7       	std	Y+41, r26	; 0x29
    2c8a:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c8c:	6f a1       	ldd	r22, Y+39	; 0x27
    2c8e:	78 a5       	ldd	r23, Y+40	; 0x28
    2c90:	89 a5       	ldd	r24, Y+41	; 0x29
    2c92:	9a a5       	ldd	r25, Y+42	; 0x2a
    2c94:	20 e0       	ldi	r18, 0x00	; 0
    2c96:	30 e0       	ldi	r19, 0x00	; 0
    2c98:	4a ef       	ldi	r20, 0xFA	; 250
    2c9a:	54 e4       	ldi	r21, 0x44	; 68
    2c9c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ca0:	dc 01       	movw	r26, r24
    2ca2:	cb 01       	movw	r24, r22
    2ca4:	8b a3       	std	Y+35, r24	; 0x23
    2ca6:	9c a3       	std	Y+36, r25	; 0x24
    2ca8:	ad a3       	std	Y+37, r26	; 0x25
    2caa:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2cac:	6b a1       	ldd	r22, Y+35	; 0x23
    2cae:	7c a1       	ldd	r23, Y+36	; 0x24
    2cb0:	8d a1       	ldd	r24, Y+37	; 0x25
    2cb2:	9e a1       	ldd	r25, Y+38	; 0x26
    2cb4:	20 e0       	ldi	r18, 0x00	; 0
    2cb6:	30 e0       	ldi	r19, 0x00	; 0
    2cb8:	40 e8       	ldi	r20, 0x80	; 128
    2cba:	5f e3       	ldi	r21, 0x3F	; 63
    2cbc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2cc0:	88 23       	and	r24, r24
    2cc2:	2c f4       	brge	.+10     	; 0x2cce <Stepper_voidRotate_Anticlockwise_HalfStep+0x77c>
		__ticks = 1;
    2cc4:	81 e0       	ldi	r24, 0x01	; 1
    2cc6:	90 e0       	ldi	r25, 0x00	; 0
    2cc8:	9a a3       	std	Y+34, r25	; 0x22
    2cca:	89 a3       	std	Y+33, r24	; 0x21
    2ccc:	3f c0       	rjmp	.+126    	; 0x2d4c <Stepper_voidRotate_Anticlockwise_HalfStep+0x7fa>
	else if (__tmp > 65535)
    2cce:	6b a1       	ldd	r22, Y+35	; 0x23
    2cd0:	7c a1       	ldd	r23, Y+36	; 0x24
    2cd2:	8d a1       	ldd	r24, Y+37	; 0x25
    2cd4:	9e a1       	ldd	r25, Y+38	; 0x26
    2cd6:	20 e0       	ldi	r18, 0x00	; 0
    2cd8:	3f ef       	ldi	r19, 0xFF	; 255
    2cda:	4f e7       	ldi	r20, 0x7F	; 127
    2cdc:	57 e4       	ldi	r21, 0x47	; 71
    2cde:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2ce2:	18 16       	cp	r1, r24
    2ce4:	4c f5       	brge	.+82     	; 0x2d38 <Stepper_voidRotate_Anticlockwise_HalfStep+0x7e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2ce6:	6f a1       	ldd	r22, Y+39	; 0x27
    2ce8:	78 a5       	ldd	r23, Y+40	; 0x28
    2cea:	89 a5       	ldd	r24, Y+41	; 0x29
    2cec:	9a a5       	ldd	r25, Y+42	; 0x2a
    2cee:	20 e0       	ldi	r18, 0x00	; 0
    2cf0:	30 e0       	ldi	r19, 0x00	; 0
    2cf2:	40 e2       	ldi	r20, 0x20	; 32
    2cf4:	51 e4       	ldi	r21, 0x41	; 65
    2cf6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2cfa:	dc 01       	movw	r26, r24
    2cfc:	cb 01       	movw	r24, r22
    2cfe:	bc 01       	movw	r22, r24
    2d00:	cd 01       	movw	r24, r26
    2d02:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d06:	dc 01       	movw	r26, r24
    2d08:	cb 01       	movw	r24, r22
    2d0a:	9a a3       	std	Y+34, r25	; 0x22
    2d0c:	89 a3       	std	Y+33, r24	; 0x21
    2d0e:	0f c0       	rjmp	.+30     	; 0x2d2e <Stepper_voidRotate_Anticlockwise_HalfStep+0x7dc>
    2d10:	88 ec       	ldi	r24, 0xC8	; 200
    2d12:	90 e0       	ldi	r25, 0x00	; 0
    2d14:	98 a3       	std	Y+32, r25	; 0x20
    2d16:	8f 8f       	std	Y+31, r24	; 0x1f
    2d18:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2d1a:	98 a1       	ldd	r25, Y+32	; 0x20
    2d1c:	01 97       	sbiw	r24, 0x01	; 1
    2d1e:	f1 f7       	brne	.-4      	; 0x2d1c <Stepper_voidRotate_Anticlockwise_HalfStep+0x7ca>
    2d20:	98 a3       	std	Y+32, r25	; 0x20
    2d22:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d24:	89 a1       	ldd	r24, Y+33	; 0x21
    2d26:	9a a1       	ldd	r25, Y+34	; 0x22
    2d28:	01 97       	sbiw	r24, 0x01	; 1
    2d2a:	9a a3       	std	Y+34, r25	; 0x22
    2d2c:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d2e:	89 a1       	ldd	r24, Y+33	; 0x21
    2d30:	9a a1       	ldd	r25, Y+34	; 0x22
    2d32:	00 97       	sbiw	r24, 0x00	; 0
    2d34:	69 f7       	brne	.-38     	; 0x2d10 <Stepper_voidRotate_Anticlockwise_HalfStep+0x7be>
    2d36:	14 c0       	rjmp	.+40     	; 0x2d60 <Stepper_voidRotate_Anticlockwise_HalfStep+0x80e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d38:	6b a1       	ldd	r22, Y+35	; 0x23
    2d3a:	7c a1       	ldd	r23, Y+36	; 0x24
    2d3c:	8d a1       	ldd	r24, Y+37	; 0x25
    2d3e:	9e a1       	ldd	r25, Y+38	; 0x26
    2d40:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d44:	dc 01       	movw	r26, r24
    2d46:	cb 01       	movw	r24, r22
    2d48:	9a a3       	std	Y+34, r25	; 0x22
    2d4a:	89 a3       	std	Y+33, r24	; 0x21
    2d4c:	89 a1       	ldd	r24, Y+33	; 0x21
    2d4e:	9a a1       	ldd	r25, Y+34	; 0x22
    2d50:	9e 8f       	std	Y+30, r25	; 0x1e
    2d52:	8d 8f       	std	Y+29, r24	; 0x1d
    2d54:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2d56:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2d58:	01 97       	sbiw	r24, 0x01	; 1
    2d5a:	f1 f7       	brne	.-4      	; 0x2d58 <Stepper_voidRotate_Anticlockwise_HalfStep+0x806>
    2d5c:	9e 8f       	std	Y+30, r25	; 0x1e
    2d5e:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(10);

	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_BLUE,DIO_u8_HIGH);
    2d60:	80 e0       	ldi	r24, 0x00	; 0
    2d62:	60 e0       	ldi	r22, 0x00	; 0
    2d64:	41 e0       	ldi	r20, 0x01	; 1
    2d66:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_PINK,DIO_u8_LOW);
    2d6a:	80 e0       	ldi	r24, 0x00	; 0
    2d6c:	61 e0       	ldi	r22, 0x01	; 1
    2d6e:	40 e0       	ldi	r20, 0x00	; 0
    2d70:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_YELLOW,DIO_u8_LOW);
    2d74:	80 e0       	ldi	r24, 0x00	; 0
    2d76:	62 e0       	ldi	r22, 0x02	; 2
    2d78:	40 e0       	ldi	r20, 0x00	; 0
    2d7a:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_ORANGE,DIO_u8_LOW);
    2d7e:	80 e0       	ldi	r24, 0x00	; 0
    2d80:	63 e0       	ldi	r22, 0x03	; 3
    2d82:	40 e0       	ldi	r20, 0x00	; 0
    2d84:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
    2d88:	80 e0       	ldi	r24, 0x00	; 0
    2d8a:	90 e0       	ldi	r25, 0x00	; 0
    2d8c:	a0 e2       	ldi	r26, 0x20	; 32
    2d8e:	b1 e4       	ldi	r27, 0x41	; 65
    2d90:	89 8f       	std	Y+25, r24	; 0x19
    2d92:	9a 8f       	std	Y+26, r25	; 0x1a
    2d94:	ab 8f       	std	Y+27, r26	; 0x1b
    2d96:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d98:	69 8d       	ldd	r22, Y+25	; 0x19
    2d9a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2d9c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2d9e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2da0:	20 e0       	ldi	r18, 0x00	; 0
    2da2:	30 e0       	ldi	r19, 0x00	; 0
    2da4:	4a ef       	ldi	r20, 0xFA	; 250
    2da6:	54 e4       	ldi	r21, 0x44	; 68
    2da8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2dac:	dc 01       	movw	r26, r24
    2dae:	cb 01       	movw	r24, r22
    2db0:	8d 8b       	std	Y+21, r24	; 0x15
    2db2:	9e 8b       	std	Y+22, r25	; 0x16
    2db4:	af 8b       	std	Y+23, r26	; 0x17
    2db6:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2db8:	6d 89       	ldd	r22, Y+21	; 0x15
    2dba:	7e 89       	ldd	r23, Y+22	; 0x16
    2dbc:	8f 89       	ldd	r24, Y+23	; 0x17
    2dbe:	98 8d       	ldd	r25, Y+24	; 0x18
    2dc0:	20 e0       	ldi	r18, 0x00	; 0
    2dc2:	30 e0       	ldi	r19, 0x00	; 0
    2dc4:	40 e8       	ldi	r20, 0x80	; 128
    2dc6:	5f e3       	ldi	r21, 0x3F	; 63
    2dc8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2dcc:	88 23       	and	r24, r24
    2dce:	2c f4       	brge	.+10     	; 0x2dda <Stepper_voidRotate_Anticlockwise_HalfStep+0x888>
		__ticks = 1;
    2dd0:	81 e0       	ldi	r24, 0x01	; 1
    2dd2:	90 e0       	ldi	r25, 0x00	; 0
    2dd4:	9c 8b       	std	Y+20, r25	; 0x14
    2dd6:	8b 8b       	std	Y+19, r24	; 0x13
    2dd8:	3f c0       	rjmp	.+126    	; 0x2e58 <Stepper_voidRotate_Anticlockwise_HalfStep+0x906>
	else if (__tmp > 65535)
    2dda:	6d 89       	ldd	r22, Y+21	; 0x15
    2ddc:	7e 89       	ldd	r23, Y+22	; 0x16
    2dde:	8f 89       	ldd	r24, Y+23	; 0x17
    2de0:	98 8d       	ldd	r25, Y+24	; 0x18
    2de2:	20 e0       	ldi	r18, 0x00	; 0
    2de4:	3f ef       	ldi	r19, 0xFF	; 255
    2de6:	4f e7       	ldi	r20, 0x7F	; 127
    2de8:	57 e4       	ldi	r21, 0x47	; 71
    2dea:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2dee:	18 16       	cp	r1, r24
    2df0:	4c f5       	brge	.+82     	; 0x2e44 <Stepper_voidRotate_Anticlockwise_HalfStep+0x8f2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2df2:	69 8d       	ldd	r22, Y+25	; 0x19
    2df4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2df6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2df8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2dfa:	20 e0       	ldi	r18, 0x00	; 0
    2dfc:	30 e0       	ldi	r19, 0x00	; 0
    2dfe:	40 e2       	ldi	r20, 0x20	; 32
    2e00:	51 e4       	ldi	r21, 0x41	; 65
    2e02:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e06:	dc 01       	movw	r26, r24
    2e08:	cb 01       	movw	r24, r22
    2e0a:	bc 01       	movw	r22, r24
    2e0c:	cd 01       	movw	r24, r26
    2e0e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e12:	dc 01       	movw	r26, r24
    2e14:	cb 01       	movw	r24, r22
    2e16:	9c 8b       	std	Y+20, r25	; 0x14
    2e18:	8b 8b       	std	Y+19, r24	; 0x13
    2e1a:	0f c0       	rjmp	.+30     	; 0x2e3a <Stepper_voidRotate_Anticlockwise_HalfStep+0x8e8>
    2e1c:	88 ec       	ldi	r24, 0xC8	; 200
    2e1e:	90 e0       	ldi	r25, 0x00	; 0
    2e20:	9a 8b       	std	Y+18, r25	; 0x12
    2e22:	89 8b       	std	Y+17, r24	; 0x11
    2e24:	89 89       	ldd	r24, Y+17	; 0x11
    2e26:	9a 89       	ldd	r25, Y+18	; 0x12
    2e28:	01 97       	sbiw	r24, 0x01	; 1
    2e2a:	f1 f7       	brne	.-4      	; 0x2e28 <Stepper_voidRotate_Anticlockwise_HalfStep+0x8d6>
    2e2c:	9a 8b       	std	Y+18, r25	; 0x12
    2e2e:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e30:	8b 89       	ldd	r24, Y+19	; 0x13
    2e32:	9c 89       	ldd	r25, Y+20	; 0x14
    2e34:	01 97       	sbiw	r24, 0x01	; 1
    2e36:	9c 8b       	std	Y+20, r25	; 0x14
    2e38:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2e3a:	8b 89       	ldd	r24, Y+19	; 0x13
    2e3c:	9c 89       	ldd	r25, Y+20	; 0x14
    2e3e:	00 97       	sbiw	r24, 0x00	; 0
    2e40:	69 f7       	brne	.-38     	; 0x2e1c <Stepper_voidRotate_Anticlockwise_HalfStep+0x8ca>
    2e42:	14 c0       	rjmp	.+40     	; 0x2e6c <Stepper_voidRotate_Anticlockwise_HalfStep+0x91a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e44:	6d 89       	ldd	r22, Y+21	; 0x15
    2e46:	7e 89       	ldd	r23, Y+22	; 0x16
    2e48:	8f 89       	ldd	r24, Y+23	; 0x17
    2e4a:	98 8d       	ldd	r25, Y+24	; 0x18
    2e4c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e50:	dc 01       	movw	r26, r24
    2e52:	cb 01       	movw	r24, r22
    2e54:	9c 8b       	std	Y+20, r25	; 0x14
    2e56:	8b 8b       	std	Y+19, r24	; 0x13
    2e58:	8b 89       	ldd	r24, Y+19	; 0x13
    2e5a:	9c 89       	ldd	r25, Y+20	; 0x14
    2e5c:	98 8b       	std	Y+16, r25	; 0x10
    2e5e:	8f 87       	std	Y+15, r24	; 0x0f
    2e60:	8f 85       	ldd	r24, Y+15	; 0x0f
    2e62:	98 89       	ldd	r25, Y+16	; 0x10
    2e64:	01 97       	sbiw	r24, 0x01	; 1
    2e66:	f1 f7       	brne	.-4      	; 0x2e64 <Stepper_voidRotate_Anticlockwise_HalfStep+0x912>
    2e68:	98 8b       	std	Y+16, r25	; 0x10
    2e6a:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(10);



	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_BLUE,DIO_u8_HIGH);
    2e6c:	80 e0       	ldi	r24, 0x00	; 0
    2e6e:	60 e0       	ldi	r22, 0x00	; 0
    2e70:	41 e0       	ldi	r20, 0x01	; 1
    2e72:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_PINK,DIO_u8_LOW);
    2e76:	80 e0       	ldi	r24, 0x00	; 0
    2e78:	61 e0       	ldi	r22, 0x01	; 1
    2e7a:	40 e0       	ldi	r20, 0x00	; 0
    2e7c:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_YELLOW,DIO_u8_LOW);
    2e80:	80 e0       	ldi	r24, 0x00	; 0
    2e82:	62 e0       	ldi	r22, 0x02	; 2
    2e84:	40 e0       	ldi	r20, 0x00	; 0
    2e86:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
	DIO_u8Set_Pin_value(STEPPER_u8_COIL_PORT,STEPPER_u8Coil_ORANGE,DIO_u8_HIGH);
    2e8a:	80 e0       	ldi	r24, 0x00	; 0
    2e8c:	63 e0       	ldi	r22, 0x03	; 3
    2e8e:	41 e0       	ldi	r20, 0x01	; 1
    2e90:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_u8Set_Pin_value>
    2e94:	80 e0       	ldi	r24, 0x00	; 0
    2e96:	90 e0       	ldi	r25, 0x00	; 0
    2e98:	a0 e2       	ldi	r26, 0x20	; 32
    2e9a:	b1 e4       	ldi	r27, 0x41	; 65
    2e9c:	8b 87       	std	Y+11, r24	; 0x0b
    2e9e:	9c 87       	std	Y+12, r25	; 0x0c
    2ea0:	ad 87       	std	Y+13, r26	; 0x0d
    2ea2:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2ea4:	6b 85       	ldd	r22, Y+11	; 0x0b
    2ea6:	7c 85       	ldd	r23, Y+12	; 0x0c
    2ea8:	8d 85       	ldd	r24, Y+13	; 0x0d
    2eaa:	9e 85       	ldd	r25, Y+14	; 0x0e
    2eac:	20 e0       	ldi	r18, 0x00	; 0
    2eae:	30 e0       	ldi	r19, 0x00	; 0
    2eb0:	4a ef       	ldi	r20, 0xFA	; 250
    2eb2:	54 e4       	ldi	r21, 0x44	; 68
    2eb4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2eb8:	dc 01       	movw	r26, r24
    2eba:	cb 01       	movw	r24, r22
    2ebc:	8f 83       	std	Y+7, r24	; 0x07
    2ebe:	98 87       	std	Y+8, r25	; 0x08
    2ec0:	a9 87       	std	Y+9, r26	; 0x09
    2ec2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2ec4:	6f 81       	ldd	r22, Y+7	; 0x07
    2ec6:	78 85       	ldd	r23, Y+8	; 0x08
    2ec8:	89 85       	ldd	r24, Y+9	; 0x09
    2eca:	9a 85       	ldd	r25, Y+10	; 0x0a
    2ecc:	20 e0       	ldi	r18, 0x00	; 0
    2ece:	30 e0       	ldi	r19, 0x00	; 0
    2ed0:	40 e8       	ldi	r20, 0x80	; 128
    2ed2:	5f e3       	ldi	r21, 0x3F	; 63
    2ed4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2ed8:	88 23       	and	r24, r24
    2eda:	2c f4       	brge	.+10     	; 0x2ee6 <Stepper_voidRotate_Anticlockwise_HalfStep+0x994>
		__ticks = 1;
    2edc:	81 e0       	ldi	r24, 0x01	; 1
    2ede:	90 e0       	ldi	r25, 0x00	; 0
    2ee0:	9e 83       	std	Y+6, r25	; 0x06
    2ee2:	8d 83       	std	Y+5, r24	; 0x05
    2ee4:	3f c0       	rjmp	.+126    	; 0x2f64 <Stepper_voidRotate_Anticlockwise_HalfStep+0xa12>
	else if (__tmp > 65535)
    2ee6:	6f 81       	ldd	r22, Y+7	; 0x07
    2ee8:	78 85       	ldd	r23, Y+8	; 0x08
    2eea:	89 85       	ldd	r24, Y+9	; 0x09
    2eec:	9a 85       	ldd	r25, Y+10	; 0x0a
    2eee:	20 e0       	ldi	r18, 0x00	; 0
    2ef0:	3f ef       	ldi	r19, 0xFF	; 255
    2ef2:	4f e7       	ldi	r20, 0x7F	; 127
    2ef4:	57 e4       	ldi	r21, 0x47	; 71
    2ef6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2efa:	18 16       	cp	r1, r24
    2efc:	4c f5       	brge	.+82     	; 0x2f50 <Stepper_voidRotate_Anticlockwise_HalfStep+0x9fe>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2efe:	6b 85       	ldd	r22, Y+11	; 0x0b
    2f00:	7c 85       	ldd	r23, Y+12	; 0x0c
    2f02:	8d 85       	ldd	r24, Y+13	; 0x0d
    2f04:	9e 85       	ldd	r25, Y+14	; 0x0e
    2f06:	20 e0       	ldi	r18, 0x00	; 0
    2f08:	30 e0       	ldi	r19, 0x00	; 0
    2f0a:	40 e2       	ldi	r20, 0x20	; 32
    2f0c:	51 e4       	ldi	r21, 0x41	; 65
    2f0e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f12:	dc 01       	movw	r26, r24
    2f14:	cb 01       	movw	r24, r22
    2f16:	bc 01       	movw	r22, r24
    2f18:	cd 01       	movw	r24, r26
    2f1a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f1e:	dc 01       	movw	r26, r24
    2f20:	cb 01       	movw	r24, r22
    2f22:	9e 83       	std	Y+6, r25	; 0x06
    2f24:	8d 83       	std	Y+5, r24	; 0x05
    2f26:	0f c0       	rjmp	.+30     	; 0x2f46 <Stepper_voidRotate_Anticlockwise_HalfStep+0x9f4>
    2f28:	88 ec       	ldi	r24, 0xC8	; 200
    2f2a:	90 e0       	ldi	r25, 0x00	; 0
    2f2c:	9c 83       	std	Y+4, r25	; 0x04
    2f2e:	8b 83       	std	Y+3, r24	; 0x03
    2f30:	8b 81       	ldd	r24, Y+3	; 0x03
    2f32:	9c 81       	ldd	r25, Y+4	; 0x04
    2f34:	01 97       	sbiw	r24, 0x01	; 1
    2f36:	f1 f7       	brne	.-4      	; 0x2f34 <Stepper_voidRotate_Anticlockwise_HalfStep+0x9e2>
    2f38:	9c 83       	std	Y+4, r25	; 0x04
    2f3a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2f3c:	8d 81       	ldd	r24, Y+5	; 0x05
    2f3e:	9e 81       	ldd	r25, Y+6	; 0x06
    2f40:	01 97       	sbiw	r24, 0x01	; 1
    2f42:	9e 83       	std	Y+6, r25	; 0x06
    2f44:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2f46:	8d 81       	ldd	r24, Y+5	; 0x05
    2f48:	9e 81       	ldd	r25, Y+6	; 0x06
    2f4a:	00 97       	sbiw	r24, 0x00	; 0
    2f4c:	69 f7       	brne	.-38     	; 0x2f28 <Stepper_voidRotate_Anticlockwise_HalfStep+0x9d6>
    2f4e:	14 c0       	rjmp	.+40     	; 0x2f78 <Stepper_voidRotate_Anticlockwise_HalfStep+0xa26>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2f50:	6f 81       	ldd	r22, Y+7	; 0x07
    2f52:	78 85       	ldd	r23, Y+8	; 0x08
    2f54:	89 85       	ldd	r24, Y+9	; 0x09
    2f56:	9a 85       	ldd	r25, Y+10	; 0x0a
    2f58:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f5c:	dc 01       	movw	r26, r24
    2f5e:	cb 01       	movw	r24, r22
    2f60:	9e 83       	std	Y+6, r25	; 0x06
    2f62:	8d 83       	std	Y+5, r24	; 0x05
    2f64:	8d 81       	ldd	r24, Y+5	; 0x05
    2f66:	9e 81       	ldd	r25, Y+6	; 0x06
    2f68:	9a 83       	std	Y+2, r25	; 0x02
    2f6a:	89 83       	std	Y+1, r24	; 0x01
    2f6c:	89 81       	ldd	r24, Y+1	; 0x01
    2f6e:	9a 81       	ldd	r25, Y+2	; 0x02
    2f70:	01 97       	sbiw	r24, 0x01	; 1
    2f72:	f1 f7       	brne	.-4      	; 0x2f70 <Stepper_voidRotate_Anticlockwise_HalfStep+0xa1e>
    2f74:	9a 83       	std	Y+2, r25	; 0x02
    2f76:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(10);


}
    2f78:	c0 59       	subi	r28, 0x90	; 144
    2f7a:	df 4f       	sbci	r29, 0xFF	; 255
    2f7c:	0f b6       	in	r0, 0x3f	; 63
    2f7e:	f8 94       	cli
    2f80:	de bf       	out	0x3e, r29	; 62
    2f82:	0f be       	out	0x3f, r0	; 63
    2f84:	cd bf       	out	0x3d, r28	; 61
    2f86:	cf 91       	pop	r28
    2f88:	df 91       	pop	r29
    2f8a:	1f 91       	pop	r17
    2f8c:	0f 91       	pop	r16
    2f8e:	08 95       	ret

00002f90 <Stepper_void_Set_angle>:

void Stepper_void_Set_angle(u32 Copy_u32Angle,u8 Copy_u8Direction )
{
    2f90:	df 93       	push	r29
    2f92:	cf 93       	push	r28
    2f94:	cd b7       	in	r28, 0x3d	; 61
    2f96:	de b7       	in	r29, 0x3e	; 62
    2f98:	27 97       	sbiw	r28, 0x07	; 7
    2f9a:	0f b6       	in	r0, 0x3f	; 63
    2f9c:	f8 94       	cli
    2f9e:	de bf       	out	0x3e, r29	; 62
    2fa0:	0f be       	out	0x3f, r0	; 63
    2fa2:	cd bf       	out	0x3d, r28	; 61
    2fa4:	9e 83       	std	Y+6, r25	; 0x06
    2fa6:	8d 83       	std	Y+5, r24	; 0x05
    2fa8:	6f 83       	std	Y+7, r22	; 0x07
	u32 Local_u16Full_Steps=(Copy_u32Angle*2048)/360;
    2faa:	8d 81       	ldd	r24, Y+5	; 0x05
    2fac:	9e 81       	ldd	r25, Y+6	; 0x06
    2fae:	98 2f       	mov	r25, r24
    2fb0:	88 27       	eor	r24, r24
    2fb2:	99 0f       	add	r25, r25
    2fb4:	99 0f       	add	r25, r25
    2fb6:	99 0f       	add	r25, r25
    2fb8:	28 e6       	ldi	r18, 0x68	; 104
    2fba:	31 e0       	ldi	r19, 0x01	; 1
    2fbc:	b9 01       	movw	r22, r18
    2fbe:	0e 94 a4 18 	call	0x3148	; 0x3148 <__udivmodhi4>
    2fc2:	cb 01       	movw	r24, r22
    2fc4:	9c 83       	std	Y+4, r25	; 0x04
    2fc6:	8b 83       	std	Y+3, r24	; 0x03
	u32 index;
	//u32 var=Local_u16Full_Steps/4;
	if (Copy_u8Direction==STEPPER_u8CW_DIR)
    2fc8:	8f 81       	ldd	r24, Y+7	; 0x07
    2fca:	88 23       	and	r24, r24
    2fcc:	b9 f4       	brne	.+46     	; 0x2ffc <Stepper_void_Set_angle+0x6c>
	{
		for(index=0;index<Local_u16Full_Steps/4;index++)
    2fce:	1a 82       	std	Y+2, r1	; 0x02
    2fd0:	19 82       	std	Y+1, r1	; 0x01
    2fd2:	07 c0       	rjmp	.+14     	; 0x2fe2 <Stepper_void_Set_angle+0x52>
		{
			Stepper_voidRotate_clockwise_FullStep();
    2fd4:	0e 94 34 09 	call	0x1268	; 0x1268 <Stepper_voidRotate_clockwise_FullStep>
	u32 Local_u16Full_Steps=(Copy_u32Angle*2048)/360;
	u32 index;
	//u32 var=Local_u16Full_Steps/4;
	if (Copy_u8Direction==STEPPER_u8CW_DIR)
	{
		for(index=0;index<Local_u16Full_Steps/4;index++)
    2fd8:	89 81       	ldd	r24, Y+1	; 0x01
    2fda:	9a 81       	ldd	r25, Y+2	; 0x02
    2fdc:	01 96       	adiw	r24, 0x01	; 1
    2fde:	9a 83       	std	Y+2, r25	; 0x02
    2fe0:	89 83       	std	Y+1, r24	; 0x01
    2fe2:	8b 81       	ldd	r24, Y+3	; 0x03
    2fe4:	9c 81       	ldd	r25, Y+4	; 0x04
    2fe6:	9c 01       	movw	r18, r24
    2fe8:	36 95       	lsr	r19
    2fea:	27 95       	ror	r18
    2fec:	36 95       	lsr	r19
    2fee:	27 95       	ror	r18
    2ff0:	89 81       	ldd	r24, Y+1	; 0x01
    2ff2:	9a 81       	ldd	r25, Y+2	; 0x02
    2ff4:	82 17       	cp	r24, r18
    2ff6:	93 07       	cpc	r25, r19
    2ff8:	68 f3       	brcs	.-38     	; 0x2fd4 <Stepper_void_Set_angle+0x44>
    2ffa:	19 c0       	rjmp	.+50     	; 0x302e <Stepper_void_Set_angle+0x9e>
		{
			Stepper_voidRotate_clockwise_FullStep();
		}

	}else if(Copy_u8Direction==STEPPER_u8ACW_DIR){
    2ffc:	8f 81       	ldd	r24, Y+7	; 0x07
    2ffe:	81 30       	cpi	r24, 0x01	; 1
    3000:	b1 f4       	brne	.+44     	; 0x302e <Stepper_void_Set_angle+0x9e>

		for(index=0;index<Local_u16Full_Steps/4;index++)
    3002:	1a 82       	std	Y+2, r1	; 0x02
    3004:	19 82       	std	Y+1, r1	; 0x01
    3006:	07 c0       	rjmp	.+14     	; 0x3016 <Stepper_void_Set_angle+0x86>
		{
			Stepper_voidRotate_Anticlockwise_FullStep();
    3008:	0e 94 5f 0b 	call	0x16be	; 0x16be <Stepper_voidRotate_Anticlockwise_FullStep>
			Stepper_voidRotate_clockwise_FullStep();
		}

	}else if(Copy_u8Direction==STEPPER_u8ACW_DIR){

		for(index=0;index<Local_u16Full_Steps/4;index++)
    300c:	89 81       	ldd	r24, Y+1	; 0x01
    300e:	9a 81       	ldd	r25, Y+2	; 0x02
    3010:	01 96       	adiw	r24, 0x01	; 1
    3012:	9a 83       	std	Y+2, r25	; 0x02
    3014:	89 83       	std	Y+1, r24	; 0x01
    3016:	8b 81       	ldd	r24, Y+3	; 0x03
    3018:	9c 81       	ldd	r25, Y+4	; 0x04
    301a:	9c 01       	movw	r18, r24
    301c:	36 95       	lsr	r19
    301e:	27 95       	ror	r18
    3020:	36 95       	lsr	r19
    3022:	27 95       	ror	r18
    3024:	89 81       	ldd	r24, Y+1	; 0x01
    3026:	9a 81       	ldd	r25, Y+2	; 0x02
    3028:	82 17       	cp	r24, r18
    302a:	93 07       	cpc	r25, r19
    302c:	68 f3       	brcs	.-38     	; 0x3008 <Stepper_void_Set_angle+0x78>

	}



}
    302e:	27 96       	adiw	r28, 0x07	; 7
    3030:	0f b6       	in	r0, 0x3f	; 63
    3032:	f8 94       	cli
    3034:	de bf       	out	0x3e, r29	; 62
    3036:	0f be       	out	0x3f, r0	; 63
    3038:	cd bf       	out	0x3d, r28	; 61
    303a:	cf 91       	pop	r28
    303c:	df 91       	pop	r29
    303e:	08 95       	ret

00003040 <main>:
#include <avr/delay.h>
#include "Stepper_config.h"
#include"stepper_intrface.h"

void main()
{
    3040:	df 93       	push	r29
    3042:	cf 93       	push	r28
    3044:	cd b7       	in	r28, 0x3d	; 61
    3046:	de b7       	in	r29, 0x3e	; 62
    3048:	2e 97       	sbiw	r28, 0x0e	; 14
    304a:	0f b6       	in	r0, 0x3f	; 63
    304c:	f8 94       	cli
    304e:	de bf       	out	0x3e, r29	; 62
    3050:	0f be       	out	0x3f, r0	; 63
    3052:	cd bf       	out	0x3d, r28	; 61
	Stepper_voidInit();
    3054:	0e 94 19 09 	call	0x1232	; 0x1232 <Stepper_voidInit>

	while(1)
	{

		//Stepper_voidRotate_clockwise_FullStep();
		Stepper_void_Set_angle(90,0);
    3058:	8a e5       	ldi	r24, 0x5A	; 90
    305a:	90 e0       	ldi	r25, 0x00	; 0
    305c:	60 e0       	ldi	r22, 0x00	; 0
    305e:	0e 94 c8 17 	call	0x2f90	; 0x2f90 <Stepper_void_Set_angle>
    3062:	80 e0       	ldi	r24, 0x00	; 0
    3064:	90 e0       	ldi	r25, 0x00	; 0
    3066:	aa e7       	ldi	r26, 0x7A	; 122
    3068:	b4 e4       	ldi	r27, 0x44	; 68
    306a:	8b 87       	std	Y+11, r24	; 0x0b
    306c:	9c 87       	std	Y+12, r25	; 0x0c
    306e:	ad 87       	std	Y+13, r26	; 0x0d
    3070:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3072:	6b 85       	ldd	r22, Y+11	; 0x0b
    3074:	7c 85       	ldd	r23, Y+12	; 0x0c
    3076:	8d 85       	ldd	r24, Y+13	; 0x0d
    3078:	9e 85       	ldd	r25, Y+14	; 0x0e
    307a:	20 e0       	ldi	r18, 0x00	; 0
    307c:	30 e0       	ldi	r19, 0x00	; 0
    307e:	4a ef       	ldi	r20, 0xFA	; 250
    3080:	54 e4       	ldi	r21, 0x44	; 68
    3082:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3086:	dc 01       	movw	r26, r24
    3088:	cb 01       	movw	r24, r22
    308a:	8f 83       	std	Y+7, r24	; 0x07
    308c:	98 87       	std	Y+8, r25	; 0x08
    308e:	a9 87       	std	Y+9, r26	; 0x09
    3090:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3092:	6f 81       	ldd	r22, Y+7	; 0x07
    3094:	78 85       	ldd	r23, Y+8	; 0x08
    3096:	89 85       	ldd	r24, Y+9	; 0x09
    3098:	9a 85       	ldd	r25, Y+10	; 0x0a
    309a:	20 e0       	ldi	r18, 0x00	; 0
    309c:	30 e0       	ldi	r19, 0x00	; 0
    309e:	40 e8       	ldi	r20, 0x80	; 128
    30a0:	5f e3       	ldi	r21, 0x3F	; 63
    30a2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    30a6:	88 23       	and	r24, r24
    30a8:	2c f4       	brge	.+10     	; 0x30b4 <main+0x74>
		__ticks = 1;
    30aa:	81 e0       	ldi	r24, 0x01	; 1
    30ac:	90 e0       	ldi	r25, 0x00	; 0
    30ae:	9e 83       	std	Y+6, r25	; 0x06
    30b0:	8d 83       	std	Y+5, r24	; 0x05
    30b2:	3f c0       	rjmp	.+126    	; 0x3132 <main+0xf2>
	else if (__tmp > 65535)
    30b4:	6f 81       	ldd	r22, Y+7	; 0x07
    30b6:	78 85       	ldd	r23, Y+8	; 0x08
    30b8:	89 85       	ldd	r24, Y+9	; 0x09
    30ba:	9a 85       	ldd	r25, Y+10	; 0x0a
    30bc:	20 e0       	ldi	r18, 0x00	; 0
    30be:	3f ef       	ldi	r19, 0xFF	; 255
    30c0:	4f e7       	ldi	r20, 0x7F	; 127
    30c2:	57 e4       	ldi	r21, 0x47	; 71
    30c4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    30c8:	18 16       	cp	r1, r24
    30ca:	4c f5       	brge	.+82     	; 0x311e <main+0xde>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    30cc:	6b 85       	ldd	r22, Y+11	; 0x0b
    30ce:	7c 85       	ldd	r23, Y+12	; 0x0c
    30d0:	8d 85       	ldd	r24, Y+13	; 0x0d
    30d2:	9e 85       	ldd	r25, Y+14	; 0x0e
    30d4:	20 e0       	ldi	r18, 0x00	; 0
    30d6:	30 e0       	ldi	r19, 0x00	; 0
    30d8:	40 e2       	ldi	r20, 0x20	; 32
    30da:	51 e4       	ldi	r21, 0x41	; 65
    30dc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    30e0:	dc 01       	movw	r26, r24
    30e2:	cb 01       	movw	r24, r22
    30e4:	bc 01       	movw	r22, r24
    30e6:	cd 01       	movw	r24, r26
    30e8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    30ec:	dc 01       	movw	r26, r24
    30ee:	cb 01       	movw	r24, r22
    30f0:	9e 83       	std	Y+6, r25	; 0x06
    30f2:	8d 83       	std	Y+5, r24	; 0x05
    30f4:	0f c0       	rjmp	.+30     	; 0x3114 <main+0xd4>
    30f6:	88 ec       	ldi	r24, 0xC8	; 200
    30f8:	90 e0       	ldi	r25, 0x00	; 0
    30fa:	9c 83       	std	Y+4, r25	; 0x04
    30fc:	8b 83       	std	Y+3, r24	; 0x03
    30fe:	8b 81       	ldd	r24, Y+3	; 0x03
    3100:	9c 81       	ldd	r25, Y+4	; 0x04
    3102:	01 97       	sbiw	r24, 0x01	; 1
    3104:	f1 f7       	brne	.-4      	; 0x3102 <main+0xc2>
    3106:	9c 83       	std	Y+4, r25	; 0x04
    3108:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    310a:	8d 81       	ldd	r24, Y+5	; 0x05
    310c:	9e 81       	ldd	r25, Y+6	; 0x06
    310e:	01 97       	sbiw	r24, 0x01	; 1
    3110:	9e 83       	std	Y+6, r25	; 0x06
    3112:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3114:	8d 81       	ldd	r24, Y+5	; 0x05
    3116:	9e 81       	ldd	r25, Y+6	; 0x06
    3118:	00 97       	sbiw	r24, 0x00	; 0
    311a:	69 f7       	brne	.-38     	; 0x30f6 <main+0xb6>
    311c:	9d cf       	rjmp	.-198    	; 0x3058 <main+0x18>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    311e:	6f 81       	ldd	r22, Y+7	; 0x07
    3120:	78 85       	ldd	r23, Y+8	; 0x08
    3122:	89 85       	ldd	r24, Y+9	; 0x09
    3124:	9a 85       	ldd	r25, Y+10	; 0x0a
    3126:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    312a:	dc 01       	movw	r26, r24
    312c:	cb 01       	movw	r24, r22
    312e:	9e 83       	std	Y+6, r25	; 0x06
    3130:	8d 83       	std	Y+5, r24	; 0x05
    3132:	8d 81       	ldd	r24, Y+5	; 0x05
    3134:	9e 81       	ldd	r25, Y+6	; 0x06
    3136:	9a 83       	std	Y+2, r25	; 0x02
    3138:	89 83       	std	Y+1, r24	; 0x01
    313a:	89 81       	ldd	r24, Y+1	; 0x01
    313c:	9a 81       	ldd	r25, Y+2	; 0x02
    313e:	01 97       	sbiw	r24, 0x01	; 1
    3140:	f1 f7       	brne	.-4      	; 0x313e <main+0xfe>
    3142:	9a 83       	std	Y+2, r25	; 0x02
    3144:	89 83       	std	Y+1, r24	; 0x01
    3146:	88 cf       	rjmp	.-240    	; 0x3058 <main+0x18>

00003148 <__udivmodhi4>:
    3148:	aa 1b       	sub	r26, r26
    314a:	bb 1b       	sub	r27, r27
    314c:	51 e1       	ldi	r21, 0x11	; 17
    314e:	07 c0       	rjmp	.+14     	; 0x315e <__udivmodhi4_ep>

00003150 <__udivmodhi4_loop>:
    3150:	aa 1f       	adc	r26, r26
    3152:	bb 1f       	adc	r27, r27
    3154:	a6 17       	cp	r26, r22
    3156:	b7 07       	cpc	r27, r23
    3158:	10 f0       	brcs	.+4      	; 0x315e <__udivmodhi4_ep>
    315a:	a6 1b       	sub	r26, r22
    315c:	b7 0b       	sbc	r27, r23

0000315e <__udivmodhi4_ep>:
    315e:	88 1f       	adc	r24, r24
    3160:	99 1f       	adc	r25, r25
    3162:	5a 95       	dec	r21
    3164:	a9 f7       	brne	.-22     	; 0x3150 <__udivmodhi4_loop>
    3166:	80 95       	com	r24
    3168:	90 95       	com	r25
    316a:	bc 01       	movw	r22, r24
    316c:	cd 01       	movw	r24, r26
    316e:	08 95       	ret

00003170 <__prologue_saves__>:
    3170:	2f 92       	push	r2
    3172:	3f 92       	push	r3
    3174:	4f 92       	push	r4
    3176:	5f 92       	push	r5
    3178:	6f 92       	push	r6
    317a:	7f 92       	push	r7
    317c:	8f 92       	push	r8
    317e:	9f 92       	push	r9
    3180:	af 92       	push	r10
    3182:	bf 92       	push	r11
    3184:	cf 92       	push	r12
    3186:	df 92       	push	r13
    3188:	ef 92       	push	r14
    318a:	ff 92       	push	r15
    318c:	0f 93       	push	r16
    318e:	1f 93       	push	r17
    3190:	cf 93       	push	r28
    3192:	df 93       	push	r29
    3194:	cd b7       	in	r28, 0x3d	; 61
    3196:	de b7       	in	r29, 0x3e	; 62
    3198:	ca 1b       	sub	r28, r26
    319a:	db 0b       	sbc	r29, r27
    319c:	0f b6       	in	r0, 0x3f	; 63
    319e:	f8 94       	cli
    31a0:	de bf       	out	0x3e, r29	; 62
    31a2:	0f be       	out	0x3f, r0	; 63
    31a4:	cd bf       	out	0x3d, r28	; 61
    31a6:	09 94       	ijmp

000031a8 <__epilogue_restores__>:
    31a8:	2a 88       	ldd	r2, Y+18	; 0x12
    31aa:	39 88       	ldd	r3, Y+17	; 0x11
    31ac:	48 88       	ldd	r4, Y+16	; 0x10
    31ae:	5f 84       	ldd	r5, Y+15	; 0x0f
    31b0:	6e 84       	ldd	r6, Y+14	; 0x0e
    31b2:	7d 84       	ldd	r7, Y+13	; 0x0d
    31b4:	8c 84       	ldd	r8, Y+12	; 0x0c
    31b6:	9b 84       	ldd	r9, Y+11	; 0x0b
    31b8:	aa 84       	ldd	r10, Y+10	; 0x0a
    31ba:	b9 84       	ldd	r11, Y+9	; 0x09
    31bc:	c8 84       	ldd	r12, Y+8	; 0x08
    31be:	df 80       	ldd	r13, Y+7	; 0x07
    31c0:	ee 80       	ldd	r14, Y+6	; 0x06
    31c2:	fd 80       	ldd	r15, Y+5	; 0x05
    31c4:	0c 81       	ldd	r16, Y+4	; 0x04
    31c6:	1b 81       	ldd	r17, Y+3	; 0x03
    31c8:	aa 81       	ldd	r26, Y+2	; 0x02
    31ca:	b9 81       	ldd	r27, Y+1	; 0x01
    31cc:	ce 0f       	add	r28, r30
    31ce:	d1 1d       	adc	r29, r1
    31d0:	0f b6       	in	r0, 0x3f	; 63
    31d2:	f8 94       	cli
    31d4:	de bf       	out	0x3e, r29	; 62
    31d6:	0f be       	out	0x3f, r0	; 63
    31d8:	cd bf       	out	0x3d, r28	; 61
    31da:	ed 01       	movw	r28, r26
    31dc:	08 95       	ret

000031de <_exit>:
    31de:	f8 94       	cli

000031e0 <__stop_program>:
    31e0:	ff cf       	rjmp	.-2      	; 0x31e0 <__stop_program>
