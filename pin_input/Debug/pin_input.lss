
pin_input.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000ae  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000003a8  00000000  00000000  00000104  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000708  00000000  00000000  000004ac  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include"util.h"

// not completed

void main (void)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
	DDRD=0b00000001;
  74:	e1 e3       	ldi	r30, 0x31	; 49
  76:	f0 e0       	ldi	r31, 0x00	; 0
  78:	81 e0       	ldi	r24, 0x01	; 1
  7a:	80 83       	st	Z, r24
	DDRA=255;
  7c:	ea e3       	ldi	r30, 0x3A	; 58
  7e:	f0 e0       	ldi	r31, 0x00	; 0
  80:	8f ef       	ldi	r24, 0xFF	; 255
  82:	80 83       	st	Z, r24

	while(1)
	{

		while(Get_bit(PIND,1)==0)
  84:	e0 e3       	ldi	r30, 0x30	; 48
  86:	f0 e0       	ldi	r31, 0x00	; 0
  88:	80 81       	ld	r24, Z
  8a:	86 95       	lsr	r24
  8c:	88 2f       	mov	r24, r24
  8e:	90 e0       	ldi	r25, 0x00	; 0
  90:	81 70       	andi	r24, 0x01	; 1
  92:	90 70       	andi	r25, 0x00	; 0
  94:	00 97       	sbiw	r24, 0x00	; 0
  96:	b1 f3       	breq	.-20     	; 0x84 <main+0x18>
		{

		}
		toggle_bit(PORTA,1);
  98:	ab e3       	ldi	r26, 0x3B	; 59
  9a:	b0 e0       	ldi	r27, 0x00	; 0
  9c:	eb e3       	ldi	r30, 0x3B	; 59
  9e:	f0 e0       	ldi	r31, 0x00	; 0
  a0:	90 81       	ld	r25, Z
  a2:	82 e0       	ldi	r24, 0x02	; 2
  a4:	89 27       	eor	r24, r25
  a6:	8c 93       	st	X, r24
  a8:	ed cf       	rjmp	.-38     	; 0x84 <main+0x18>

000000aa <_exit>:
  aa:	f8 94       	cli

000000ac <__stop_program>:
  ac:	ff cf       	rjmp	.-2      	; 0xac <__stop_program>
